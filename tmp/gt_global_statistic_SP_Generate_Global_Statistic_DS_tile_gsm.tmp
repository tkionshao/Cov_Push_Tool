CREATE DEFINER=`covmo`@`%` PROCEDURE `SP_Generate_Global_Statistic_DS_tile_gsm`(IN DATA_DATE DATE,IN DATA_HOUR TINYINT(2),IN PU_ID MEDIUMINT(9),IN TECH_MASK TINYINT(2), IN GT_DB VARCHAR(100),IN TileResolution VARCHAR(8))
BEGIN
	DECLARE SP_Process VARCHAR(100) DEFAULT NULL;
	DECLARE WORKER_ID VARCHAR(10) DEFAULT CONNECTION_ID();
	DECLARE Spider_SP_ERROR CONDITION FOR SQLSTATE '99998';
	DECLARE KPI_ERROR CONDITION FOR SQLSTATE '99999' ;
	DECLARE ZOOM_LEVEL INT;
	
  	CALL gt_gw_main.`SP_Sub_Set_Session_Param_LTE`('');
	
	SET @ZOOM_LEVEL1 = gt_covmo_csv_get(TileResolution,1);
	SET @ZOOM_LEVEL2 = gt_covmo_csv_get(TileResolution,2);
	SELECT att_value INTO @ZOOM_LEVEL3 FROM gt_covmo.`sys_config` WHERE `group_name`='system' AND att_name = 'MapResolution';
		
	SET @TILE_ID_LVL1 = CONCAT('TILE_ID_',gt_covmo_csv_get(TileResolution,1));
	SET @TILE_ID_LVL2 = CONCAT('TILE_ID_',gt_covmo_csv_get(TileResolution,2));
	
	INSERT INTO gt_gw_main.sp_log VALUES('gt_gw_main','SP_Generate_Global_Statistic_DS_tile_gsm',CONCAT(GT_DB,' CREATE TEMPORARY TABLE tmp_materialization_',WORKER_ID), NOW());	
	
	SET SESSION group_concat_max_len=102400; 
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_materialization_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('CREATE TEMPORARY TABLE ',GT_DB,'.tmp_materialization_',WORKER_ID,' (
				  `TILE_ID` BIGINT(20) NOT NULL,
				  `DATA_DATE` DATETIME NOT NULL,
				  `DATA_HOUR` TINYINT(2) NOT NULL,
				  `',@TILE_ID_LVL2,'` BIGINT(20) DEFAULT NULL,
				  `',@TILE_ID_LVL1,'` BIGINT(20) DEFAULT NULL,
				  `RXLEV_SUM` double DEFAULT NULL,
				  `RXLEV_CNT` int(11) DEFAULT NULL,
				  `RXQUAL_SUM` double DEFAULT NULL,
				  `RXQUAL_CNT` int(11) DEFAULT NULL,
				  `GSM_CS_CALL_CNT` int(11) DEFAULT NULL, 
				  `GSM_PS_CALL_CNT` int(11) DEFAULT NULL,
				  `GSM_VOICE_DROP_CNT` int(11) DEFAULT NULL,
				  `GSM_GPRS_DROP_CNT` int(11) DEFAULT NULL,
				  `GSM_SMS_DROP_CNT` int(11) DEFAULT NULL,
				  `GSM_CS_BLOCK_CNT` int(11) DEFAULT NULL,
				  `GSM_PS_BLOCK_CNT` int(11) DEFAULT NULL,
				  `GSM_CS_CALL_DURATION` double DEFAULT NULL,
				  `GSM_CALL_SETUP_TIME_SUM` double DEFAULT NULL,
				  `GSM_CALL_SETUP_TIME_CNT` int(11) DEFAULT NULL,
				  `GSM_CS_CALL_SETUP_TIME_SUM` INT(11) DEFAULT NULL,
				  `GSM_CS_CALL_SETUP_TIME_CNT` INT(11) DEFAULT NULL,
				  `GSM_PS_CALL_SETUP_TIME_SUM` INT(11) DEFAULT NULL,
				  `GSM_PS_CALL_SETUP_TIME_CNT` INT(11) DEFAULT NULL,
				  `GSM_CS_SETUP_FAILURE_CNT` int(11) DEFAULT NULL,
				  `GSM_PS_SETUP_FAILURE_CNT` int(11) DEFAULT NULL,
				  `REG_1_ID` BIGINT(20) DEFAULT NULL,
				  `REG_2_ID` BIGINT(20) DEFAULT NULL,
				  `REG_3_ID` BIGINT(20) DEFAULT NULL,
				  PRIMARY KEY (`TILE_ID`,`DATA_DATE`,`DATA_HOUR`)
				) ENGINE=MYISAM DEFAULT CHARSET=latin1;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES('gt_gw_main','SP_Generate_Global_Statistic_DS_tile_gsm',CONCAT(GT_DB,' INSERT INTO tbl_',GT_DB,'_',WORKER_ID), NOW());	
	 
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_tile_gsm_start_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_tile_gsm_end_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('CREATE TEMPORARY TABLE ',GT_DB,'.tmp_tile_gsm_start_',WORKER_ID,' ENGINE=MYISAM AS
				SELECT
					gt_geohash_ext(POS_FIRST_LOC,',@ZOOM_LEVEL3,') AS TILE_ID
					,DATA_DATE
					,DATA_HOUR
 					,gt_geohash_ext(POS_FIRST_LOC,',@ZOOM_LEVEL2,') AS ',@TILE_ID_LVL2,'
 					,gt_geohash_ext(POS_FIRST_LOC,',@ZOOM_LEVEL1,') AS ',@TILE_ID_LVL1,'
					,SUM(POS_FIRST_RXLEV_FULL_DOWNLINK) AS RXLEV_SUM
					,COUNT(POS_FIRST_RXLEV_FULL_DOWNLINK) AS RXLEV_CNT
					,SUM(POS_FIRST_RXQUAL_FULL_DOWNLINK) AS RXQUAL_SUM
					,COUNT(POS_FIRST_RXQUAL_FULL_DOWNLINK) AS RXQUAL_CNT
					,SUM(IF(CALL_TYPE=10,1,0)) AS GSM_CS_CALL_CNT
					,SUM(IF(CALL_TYPE=20,1,0)) AS GSM_PS_CALL_CNT
					,SUM(IF(CALL_STATUS=3 AND CALL_TYPE=10,1,0)) AS GSM_CS_BLOCK_CNT
					,SUM(IF(CALL_STATUS=3 AND CALL_TYPE=20,1,0)) AS GSM_PS_BLOCK_CNT
					,SUM(IF(CALL_TYPE=10,DURATION,0)) AS GSM_CS_CALL_DURATION
					,SUM(CALL_SETUP_TIME) AS GSM_CALL_SETUP_TIME_SUM
					,SUM(IF(CALL_SETUP_TIME>=0,1,0)) AS GSM_CALL_SETUP_TIME_CNT
					,IFNULL(SUM(IF(CALL_TYPE =10,CALL_SETUP_TIME,0)),0) AS GSM_CS_CALL_SETUP_TIME_SUM
					,IFNULL(SUM(IF(CALL_SETUP_TIME>=0 AND CALL_TYPE =10,1,0)),0) AS GSM_CS_CALL_SETUP_TIME_CNT
					,IFNULL(SUM(IF(CALL_TYPE =20,CALL_SETUP_TIME,0)),0) AS GSM_PS_CALL_SETUP_TIME_SUM
					,IFNULL(SUM(IF(CALL_SETUP_TIME>=0 AND CALL_TYPE =20,1,0)),0) AS GSM_PS_CALL_SETUP_TIME_CNT
					,SUM(IF(CALL_STATUS=6 AND CALL_TYPE=10,1,0)) AS GSM_CS_SETUP_FAILURE_CNT
					,SUM(IF(CALL_STATUS=6 AND CALL_TYPE=20,1,0)) AS GSM_PS_SETUP_FAILURE_CNT
				FROM ',GT_DB,'.table_call_gsm
				WHERE DATA_HOUR =',DATA_HOUR,' AND POS_FIRST_LOC IS NOT NULL AND POS_FIRST_BSC=',PU_ID,' 
				GROUP BY gt_geohash_ext(POS_FIRST_LOC,',@ZOOM_LEVEL3,'),DATA_DATE,DATA_HOUR
				ORDER BY NULL;
				');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('CREATE TEMPORARY TABLE ',GT_DB,'.tmp_tile_gsm_end_',WORKER_ID,' ENGINE=MYISAM AS
				SELECT
					gt_geohash_ext(POS_LAST_LOC,',@ZOOM_LEVEL3,') AS TILE_ID
					,DATA_DATE
					,DATA_HOUR
 					,gt_geohash_ext(POS_LAST_LOC,',@ZOOM_LEVEL2,') AS ',@TILE_ID_LVL2,'
 					,gt_geohash_ext(POS_LAST_LOC,',@ZOOM_LEVEL1,') AS ',@TILE_ID_LVL1,'
					,SUM(IF(CALL_STATUS=2 AND CALL_TYPE=10,1,0)) AS GSM_VOICE_DROP_CNT
					,SUM(IF(CALL_STATUS=2 AND CALL_TYPE=20,1,0)) AS GSM_GPRS_DROP_CNT
					,SUM(IF(CALL_STATUS=2 AND CALL_TYPE=16,1,0)) AS GSM_SMS_DROP_CNT
				FROM ',GT_DB,'.table_call_gsm
				WHERE DATA_HOUR =',DATA_HOUR,' AND POS_LAST_LOC IS NOT NULL AND POS_LAST_BSC=',PU_ID,' 
 				GROUP BY gt_geohash_ext(POS_LAST_LOC,',@ZOOM_LEVEL3,'),DATA_DATE,DATA_HOUR
				ORDER BY NULL;
				');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('CREATE INDEX `ix_tile_gsm_fq` ON ',GT_DB,'.tmp_tile_gsm_start_',WORKER_ID,' (TILE_ID);');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('CREATE INDEX `ix_tile_gsm_fq` ON ',GT_DB,'.tmp_tile_gsm_end_',WORKER_ID,' (TILE_ID);');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;	
	
	SET @SqlCmd=CONCAT('INSERT INTO ',GT_DB,'.`tmp_materialization_',WORKER_ID,'` 
				( TILE_ID,DATA_DATE,DATA_HOUR)
			SELECT TILE_ID,DATA_DATE,DATA_HOUR
			FROM 
			(
				SELECT TILE_ID,DATA_DATE,DATA_HOUR FROM ',GT_DB,'.tmp_tile_gsm_start_',WORKER_ID,'
 				UNION 
 				SELECT TILE_ID,DATA_DATE,DATA_HOUR FROM ',GT_DB,'.tmp_tile_gsm_end_',WORKER_ID,'
			) AA;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('UPDATE ',GT_DB,'.`tmp_materialization_',WORKER_ID,'` a,',GT_DB,'.`tmp_tile_gsm_start_',WORKER_ID,'` B
				SET 
				A.',@TILE_ID_LVL2,'=B.',@TILE_ID_LVL2,'
				,A.',@TILE_ID_LVL1,'=B.',@TILE_ID_LVL1,'
				,A.RXLEV_SUM=B.RXLEV_SUM
				,A.RXLEV_CNT=B.RXLEV_CNT
				,A.RXQUAL_SUM=B.RXQUAL_SUM
				,A.RXQUAL_CNT=B.RXQUAL_CNT
				,A.GSM_CS_CALL_CNT=B.GSM_CS_CALL_CNT
				,A.GSM_PS_CALL_CNT=B.GSM_PS_CALL_CNT
				,A.GSM_CS_BLOCK_CNT=B.GSM_CS_BLOCK_CNT
				,A.GSM_PS_BLOCK_CNT=B.GSM_PS_BLOCK_CNT
				,A.GSM_CS_CALL_DURATION=B.GSM_CS_CALL_DURATION
				,A.GSM_CALL_SETUP_TIME_SUM=B.GSM_CALL_SETUP_TIME_SUM
				,A.GSM_CALL_SETUP_TIME_CNT=B.GSM_CALL_SETUP_TIME_CNT
				,A.GSM_CS_CALL_SETUP_TIME_SUM=B.GSM_CS_CALL_SETUP_TIME_SUM
				,A.GSM_CS_CALL_SETUP_TIME_CNT=B.GSM_CS_CALL_SETUP_TIME_CNT
				,A.GSM_PS_CALL_SETUP_TIME_SUM=B.GSM_PS_CALL_SETUP_TIME_SUM
				,A.GSM_PS_CALL_SETUP_TIME_CNT=B.GSM_PS_CALL_SETUP_TIME_CNT
				,A.GSM_CS_SETUP_FAILURE_CNT=B.GSM_CS_SETUP_FAILURE_CNT
				,A.GSM_PS_SETUP_FAILURE_CNT=B.GSM_PS_SETUP_FAILURE_CNT
				WHERE A.TILE_ID=B.TILE_ID AND A.DATA_DATE=B.DATA_DATE AND A.DATA_HOUR=B.DATA_HOUR
				;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('UPDATE ',GT_DB,'.`tmp_materialization_',WORKER_ID,'` a,',GT_DB,'.`tmp_tile_gsm_end_',WORKER_ID,'` B
				SET
				A.',@TILE_ID_LVL2,'=CASE WHEN A.',@TILE_ID_LVL2,' IS NULL THEN B.',@TILE_ID_LVL2,' ELSE A.',@TILE_ID_LVL2,' END
				,A.',@TILE_ID_LVL1,'=CASE WHEN A.',@TILE_ID_LVL1,' IS NULL THEN B.',@TILE_ID_LVL1,' ELSE A.',@TILE_ID_LVL1,' END
				,A.GSM_VOICE_DROP_CNT=B.GSM_VOICE_DROP_CNT
				,A.GSM_GPRS_DROP_CNT=B.GSM_GPRS_DROP_CNT
				,A.GSM_SMS_DROP_CNT=B.GSM_SMS_DROP_CNT
				WHERE A.TILE_ID=B.TILE_ID AND A.DATA_DATE=B.DATA_DATE AND A.DATA_HOUR=B.DATA_HOUR
				;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('SELECT * FROM ',GT_DB,'.tmp_materialization_',WORKER_ID,' WHERE TILE_ID >0;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_materialization_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_tile_gsm_start_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_tile_gsm_end_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	INSERT INTO gt_gw_main.sp_log VALUES('gt_gw_main','SP_Generate_Global_Statistic_DS_tile_gsm',CONCAT(GT_DB,' END'), NOW());
	
    END
utf8
utf8_general_ci
latin1_swedish_ci

CREATE DEFINER=`covmo`@`%` PROCEDURE `SP_Generate_Global_Statistic_DS_tile_umts`(IN DATA_DATE DATE,IN DATA_HOUR TINYINT(2),IN PU_ID MEDIUMINT(9),IN TECH_MASK TINYINT(2), IN GT_DB VARCHAR(100),IN TileResolution VARCHAR(10))
BEGIN
	DECLARE WORKER_ID VARCHAR(10) DEFAULT CONNECTION_ID();
	INSERT INTO gt_gw_main.sp_log VALUES('gt_gw_main','SP_Generate_Global_Statistic_DS_tile_umts',CONCAT(GT_DB,' CREATE TEMPORARY TABLE tmp_materialization_',WORKER_ID), NOW());	
	
	
	SET SESSION group_concat_max_len=102400; 
	SET @ZOOM_LEVEL1 = gt_covmo_csv_get(TileResolution,1);
	SET @ZOOM_LEVEL2 = gt_covmo_csv_get(TileResolution,2);
	
	SELECT att_value INTO @ZOOM_LEVEL3 FROM gt_covmo.`sys_config` WHERE `group_name`='system' AND att_name = 'MapResolution';
	
	SET @TILE_ID_LVL1 = CONCAT('TILE_ID_',gt_covmo_csv_get(TileResolution,1));
	SET @TILE_ID_LVL2 = CONCAT('TILE_ID_',gt_covmo_csv_get(TileResolution,2));
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_materialization_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('CREATE TEMPORARY TABLE ',GT_DB,'.tmp_materialization_',WORKER_ID,' (
				  `TILE_ID` BIGINT(20) NOT NULL,
				  `DATA_DATE` DATETIME NOT NULL,
				  `DATA_HOUR` TINYINT(2) NOT NULL,
				  `',@TILE_ID_LVL2,'` BIGINT(20) DEFAULT NULL,
				  `',@TILE_ID_LVL1,'` BIGINT(20) DEFAULT NULL,
				  `RSCP_SUM` DOUBLE DEFAULT NULL,
				  `RSCP_CNT` INT(11) DEFAULT NULL,
				  `ECNO_SUM` DOUBLE DEFAULT NULL,
				  `ECNO_CNT` INT(11) DEFAULT NULL,
				  `UMTS_CS_CALL_CNT` INT(11) DEFAULT NULL,
				  `UMTS_PS_CALL_CNT` INT(11) DEFAULT NULL,
				  `UMTS_VOICE_DROP_CNT` INT(11) DEFAULT NULL,
				  `UMTS_PS_DROP_CNT` INT(11) DEFAULT NULL,
				  `UMTS_CS_CALL_DURATION` DOUBLE DEFAULT NULL,
				  `UMTS_CS_BLOCK_CNT` INT(11) DEFAULT NULL,
				  `UMTS_PS_BLOCK_CNT` INT(11) DEFAULT NULL,
				  `UMTS_UL_VOLUME_SUM` DOUBLE DEFAULT NULL,
				  `UMTS_DL_VOLUME_SUM` DOUBLE DEFAULT NULL,
				  `UMTS_UL_THROUPUT_SUM` DOUBLE DEFAULT NULL,
				  `UMTS_UL_THROUPUT_CNT` INT(11) DEFAULT NULL,
				  `UMTS_DL_THROUPUT_SUM` DOUBLE DEFAULT NULL,
				  `UMTS_DL_THROUPUT_CNT` INT(11) DEFAULT NULL,
				  `UMTS_CALL_SETUP_TIME_SUM` DOUBLE DEFAULT NULL,
				  `UMTS_CALL_SETUP_TIME_CNT` INT(11) DEFAULT NULL,
				  `UMTS_CS_CALL_SETUP_TIME_SUM` INT(11) DEFAULT NULL,
				  `UMTS_CS_CALL_SETUP_TIME_CNT` INT(11) DEFAULT NULL,
				  `UMTS_PS_CALL_SETUP_TIME_SUM` INT(11) DEFAULT NULL,
				  `UMTS_PS_CALL_SETUP_TIME_CNT` INT(11) DEFAULT NULL,					
				  `UMTS_CS_SETUP_FAILURE_CNT` INT(11) DEFAULT NULL,
				  `UMTS_PS_SETUP_FAILURE_CNT` INT(11) DEFAULT NULL,
				  `UMTS_MAX_UL_THROUPUT` DOUBLE DEFAULT NULL,
				  `UMTS_MAX_DL_THROUPUT` DOUBLE DEFAULT NULL,
				  `UMTS_IRAT_HO_ATMP` INT(11) DEFAULT NULL,
				  `UMTS_IRAT_HO_FAIL` INT(11) DEFAULT NULL,
				  `REG_1_ID` BIGINT(20) DEFAULT NULL,
				  `REG_2_ID` BIGINT(20) DEFAULT NULL,
				  `REG_3_ID` BIGINT(20) DEFAULT NULL,
				  PRIMARY KEY (`TILE_ID`,`DATA_DATE`,`DATA_HOUR`)
				) ENGINE=MYISAM DEFAULT CHARSET=latin1;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES('gt_gw_main','SP_Generate_Global_Statistic_DS_tile_umts',CONCAT(GT_DB,' INSERT INTO tbl_',GT_DB,'_',WORKER_ID), NOW());	
	 
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_tile_start_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_tile_end_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('CREATE TEMPORARY TABLE ',GT_DB,'.tmp_tile_start_',WORKER_ID,' ENGINE=MYISAM AS
				SELECT
					gt_geohash_ext(POS_FIRST_LOC,',@ZOOM_LEVEL3,') AS TILE_ID
					,DATA_DATE
					,DATA_HOUR
 					,gt_geohash_ext(POS_FIRST_LOC,',@ZOOM_LEVEL2,') AS ',@TILE_ID_LVL2,'
 					,gt_geohash_ext(POS_FIRST_LOC,',@ZOOM_LEVEL1,') AS ',@TILE_ID_LVL1,'
					,SUM(POS_FIRST_RSCP) AS RSCP_SUM
					,COUNT(POS_FIRST_RSCP) AS RSCP_CNT
					,SUM(POS_FIRST_ECN0) AS ECNO_SUM
					,COUNT(POS_FIRST_ECN0) AS ECNO_CNT
					,SUM(IF(CALL_TYPE IN (10,11),1,0)) AS UMTS_CS_CALL_CNT
					,SUM(IF(CALL_TYPE IN (12,13,14,18),1,0)) AS UMTS_PS_CALL_CNT
					,SUM(CS_CALL_DURA) AS UMTS_CS_CALL_DURATION
					,SUM(IF(CALL_STATUS=3 AND CALL_TYPE IN (10,11),1,0)) AS UMTS_CS_BLOCK_CNT
					,SUM(IF(CALL_STATUS=3 AND CALL_TYPE IN (12,13,14,18),1,0)) AS UMTS_PS_BLOCK_CNT
					,SUM(CALL_SETUP_TIME) AS UMTS_CALL_SETUP_TIME_SUM
					,SUM(IF(CALL_SETUP_TIME>=0,1,0)) AS UMTS_CALL_SETUP_TIME_CNT
					,IFNULL(SUM(IF(CALL_TYPE IN(10,11),CALL_SETUP_TIME,0)),0) AS UMTS_CS_CALL_SETUP_TIME_SUM
					,IFNULL(SUM(IF(CALL_SETUP_TIME>=0 AND CALL_TYPE IN(10,11),1,0)),0) AS UMTS_CS_CALL_SETUP_TIME_CNT
					,IFNULL(SUM(IF(CALL_TYPE IN(12,13,14,15,18),CALL_SETUP_TIME,0)),0) AS UMTS_PS_CALL_SETUP_TIME_SUM
					,IFNULL(SUM(IF(CALL_SETUP_TIME>=0 AND CALL_TYPE IN(12,13,14,15,18),1,0)),0) AS UMTS_PS_CALL_SETUP_TIME_CNT
					,SUM(IF(CALL_STATUS=6 AND CALL_TYPE IN (10,11),1,0)) AS UMTS_CS_SETUP_FAILURE_CNT
					,SUM(IF(CALL_STATUS=6 AND CALL_TYPE IN (12,13,14,18),1,0)) AS UMTS_PS_SETUP_FAILURE_CNT
				FROM ',GT_DB,'.table_call
				WHERE DATA_HOUR =',DATA_HOUR,' AND POS_FIRST_LOC IS NOT NULL 
-- 				AND POS_FIRST_RNC=',PU_ID,' 
				GROUP BY gt_geohash_ext(POS_FIRST_LOC,',@ZOOM_LEVEL3,'),`DATA_DATE`,`DATA_HOUR`				
				ORDER BY NULL;
				');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('CREATE TEMPORARY TABLE ',GT_DB,'.tmp_tile_end_',WORKER_ID,' ENGINE=MYISAM AS
				SELECT
					gt_geohash_ext(POS_LAST_LOC,',@ZOOM_LEVEL3,') AS TILE_ID
					,DATA_DATE
					,DATA_HOUR
 					,gt_geohash_ext(POS_LAST_LOC,',@ZOOM_LEVEL2,') AS ',@TILE_ID_LVL2,'
 					,gt_geohash_ext(POS_LAST_LOC,',@ZOOM_LEVEL1,') AS ',@TILE_ID_LVL1,'
					,SUM(IF(CALL_STATUS=2 AND CALL_TYPE IN(10,11),1,0)) AS UMTS_VOICE_DROP_CNT
					,SUM(IF(CALL_STATUS=2 AND CALL_TYPE IN(12,13,14,18),1,0)) AS UMTS_PS_DROP_CNT
					,IFNULL(SUM(IRAT_HHO_ATTEMPT),0) AS UMTS_IRAT_HO_ATMP
					,IFNULL(SUM(IRAT_HHO_FAIL),0) AS UMTS_IRAT_HO_FAIL	
				FROM ',GT_DB,'.table_call
				WHERE DATA_HOUR =',DATA_HOUR,' AND POS_LAST_LOC IS NOT NULL 
-- 				AND POS_LAST_RNC=',PU_ID,' 
 				GROUP BY gt_geohash_ext(POS_LAST_LOC,',@ZOOM_LEVEL3,'),`DATA_DATE`,`DATA_HOUR`				
				ORDER BY NULL;
				');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('CREATE INDEX `ix_tile_fq` ON ',GT_DB,'.tmp_tile_start_',WORKER_ID,' (TILE_ID,`DATA_DATE`,`DATA_HOUR`);');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('CREATE INDEX `ix_tile_fq` ON ',GT_DB,'.tmp_tile_end_',WORKER_ID,' (TILE_ID,`DATA_DATE`,`DATA_HOUR`);');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('INSERT INTO ',GT_DB,'.`tmp_materialization_',WORKER_ID,'` 
				( TILE_ID,DATA_DATE,DATA_HOUR,',@TILE_ID_LVL2,',',@TILE_ID_LVL1,'
					,UMTS_UL_VOLUME_SUM
					,UMTS_DL_VOLUME_SUM
					,UMTS_UL_THROUPUT_SUM
					,UMTS_UL_THROUPUT_CNT
					,UMTS_DL_THROUPUT_SUM
					,UMTS_DL_THROUPUT_CNT
					,UMTS_MAX_UL_THROUPUT
					,UMTS_MAX_DL_THROUPUT
				
				)
				SELECT
					`TILE_ID`
					,`DATA_DATE`
					,`DATA_HOUR`
 					,gt_geohash_ext(`TILE_ID`,',@ZOOM_LEVEL2,') AS ',@TILE_ID_LVL2,'
 					,gt_geohash_ext(`TILE_ID`,',@ZOOM_LEVEL1,') AS ',@TILE_ID_LVL1,'
					,IFNULL(SUM(IF(CALL_TYPE IN (12,13,14,18),UL_TRAFFIC_VOLUME,0)),0) AS `UL_VOLUME_SUM`
					,IFNULL(SUM(IF(CALL_TYPE IN (12,13,14,18),DL_TRAFFIC_VOLUME,0)),0) AS `DL_VOLUME_SUM`
					,IFNULL(SUM(IF(CALL_TYPE IN (12,13,14,18),UL_THROUGHPUT_SUM,0)),0) AS UL_THROUPUT_SUM
					,IFNULL(SUM(IF(CALL_TYPE IN (12,13,14,18),UL_THROUGHPUT_EVENT_CNT,0)),0) AS UL_THROUPUT_CNT
					,IFNULL(SUM(IF(CALL_TYPE IN (12,13,14,18),DL_THROUGHPUT_SUM,0)),0) AS DL_THROUPUT_SUM
					,IFNULL(SUM(IF(CALL_TYPE IN (12,13,14,18),DL_THROUGHPUT_EVENT_CNT,0)),0) AS DL_THROUPUT_CNT
					,MAX(IF(CALL_TYPE IN (12,13,14,18),UL_THROUGHPUT_SUM/UL_THROUGHPUT_EVENT_CNT,0)) AS UMTS_MAX_UL_THROUPUT
					,MAX(IF(CALL_TYPE IN (12,13,14,18),DL_THROUGHPUT_SUM/DL_THROUGHPUT_EVENT_CNT,0)) AS UMTS_MAX_DL_THROUPUT					
				FROM ',GT_DB,'.`table_tile_fp_t`
				WHERE DATA_HOUR =',DATA_HOUR,' 
-- 				AND RNC_ID=',PU_ID,'  
				GROUP BY `TILE_ID`,`DATA_DATE`,`DATA_HOUR` 
				HAVING SUM(`BEST_CNT`)>1
				ORDER BY NULL;
				');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('UPDATE ',GT_DB,'.`tmp_materialization_',WORKER_ID,'` a,',GT_DB,'.`tmp_tile_start_',WORKER_ID,'` B
				SET 
					A.',@TILE_ID_LVL2,'=CASE WHEN A.',@TILE_ID_LVL2,' IS NULL THEN B.',@TILE_ID_LVL2,' ELSE A.',@TILE_ID_LVL2,' END
					,A.',@TILE_ID_LVL1,'=CASE WHEN A.',@TILE_ID_LVL1,' IS NULL THEN B.',@TILE_ID_LVL1,' ELSE A.',@TILE_ID_LVL1,' END
					,A.RSCP_SUM=B.RSCP_SUM
					,A.RSCP_CNT=B.RSCP_CNT
					,A.ECNO_SUM=B.ECNO_SUM
					,A.ECNO_CNT=B.ECNO_CNT
					,A.UMTS_CS_CALL_CNT=B.UMTS_CS_CALL_CNT
					,A.UMTS_PS_CALL_CNT=B.UMTS_PS_CALL_CNT
					,A.UMTS_CS_CALL_DURATION=B.UMTS_CS_CALL_DURATION
					,A.UMTS_CS_BLOCK_CNT=B.UMTS_CS_BLOCK_CNT
					,A.UMTS_PS_BLOCK_CNT=B.UMTS_PS_BLOCK_CNT
					,A.UMTS_CALL_SETUP_TIME_SUM=B.UMTS_CALL_SETUP_TIME_SUM
					,A.UMTS_CALL_SETUP_TIME_CNT=B.UMTS_CALL_SETUP_TIME_CNT
					,A.UMTS_CS_CALL_SETUP_TIME_SUM=B.UMTS_CS_CALL_SETUP_TIME_SUM
					,A.UMTS_CS_CALL_SETUP_TIME_CNT=B.UMTS_CS_CALL_SETUP_TIME_CNT
					,A.UMTS_PS_CALL_SETUP_TIME_SUM=B.UMTS_PS_CALL_SETUP_TIME_SUM
					,A.UMTS_PS_CALL_SETUP_TIME_CNT=B.UMTS_PS_CALL_SETUP_TIME_CNT
					,A.UMTS_CS_SETUP_FAILURE_CNT=B.UMTS_CS_SETUP_FAILURE_CNT
					,A.UMTS_PS_SETUP_FAILURE_CNT=B.UMTS_PS_SETUP_FAILURE_CNT
				WHERE A.TILE_ID=B.TILE_ID AND A.DATA_DATE=B.DATA_DATE AND A.DATA_HOUR=B.DATA_HOUR
				;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('UPDATE ',GT_DB,'.`tmp_materialization_',WORKER_ID,'` a,',GT_DB,'.`tmp_tile_end_',WORKER_ID,'` B
				SET
					A.',@TILE_ID_LVL2,'=CASE WHEN A.',@TILE_ID_LVL2,' IS NULL THEN B.',@TILE_ID_LVL2,' ELSE A.',@TILE_ID_LVL2,' END
					,A.',@TILE_ID_LVL1,'=CASE WHEN A.',@TILE_ID_LVL1,' IS NULL THEN B.',@TILE_ID_LVL1,' ELSE A.',@TILE_ID_LVL1,' END
					,A.UMTS_VOICE_DROP_CNT=B.UMTS_VOICE_DROP_CNT
					,A.UMTS_PS_DROP_CNT=B.UMTS_PS_DROP_CNT
					,A.UMTS_IRAT_HO_ATMP=B.UMTS_IRAT_HO_ATMP
					,A.UMTS_IRAT_HO_FAIL=B.	UMTS_IRAT_HO_FAIL
				WHERE A.TILE_ID=B.TILE_ID AND A.DATA_DATE=B.DATA_DATE AND A.DATA_HOUR=B.DATA_HOUR
				;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('SELECT * FROM ',GT_DB,'.tmp_materialization_',WORKER_ID,' WHERE TILE_ID >0;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_materialization_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_tile_start_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_tile_end_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES('gt_gw_main','SP_Generate_Global_Statistic_DS_tile_umts',CONCAT(GT_DB,' END'), NOW());
	
    END
utf8
utf8_general_ci
latin1_swedish_ci

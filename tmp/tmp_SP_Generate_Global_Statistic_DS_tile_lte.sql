CREATE DEFINER=`covmo`@`%` PROCEDURE `SP_Generate_Global_Statistic_DS_tile_lte`(IN DATA_DATE DATE,IN DATA_HOUR TINYINT(2),IN PU_ID MEDIUMINT(9),IN TECH_MASK TINYINT(2), IN GT_DB VARCHAR(100),IN TileResolution VARCHAR(8))
BEGIN
	DECLARE WORKER_ID VARCHAR(10) DEFAULT CONNECTION_ID();
	DECLARE STR_START_END_LTE MEDIUMTEXT DEFAULT '';
	DECLARE STR_START_SUM_LTE MEDIUMTEXT DEFAULT '';
	DECLARE STR_END_SUM_LTE MEDIUMTEXT DEFAULT '';
	DECLARE STR_SEL_START_LTE MEDIUMTEXT DEFAULT '';
	DECLARE STR_SEL_END_LTE MEDIUMTEXT DEFAULT '';
	
	SET @ZOOM_LEVEL1 = gt_covmo_csv_get(TileResolution,1);
	SET @ZOOM_LEVEL2 = gt_covmo_csv_get(TileResolution,2);
	
	SELECT att_value INTO @ZOOM_LEVEL3 FROM gt_covmo.`sys_config` WHERE `group_name`='system' AND att_name = 'MapResolution';
	
	SET @TILE_ID_LVL1 = CONCAT('TILE_ID_',gt_covmo_csv_get(TileResolution,1));
	SET @TILE_ID_LVL2 = CONCAT('TILE_ID_',gt_covmo_csv_get(TileResolution,2));
	
	SET STR_START_END_LTE=CONCAT('POS_FIRST_TILE,
					DATA_DATE,
					DATA_HOUR,
 					POS_FIRST_LOC,					
					POS_FIRST_S_RSRP,					
					POS_FIRST_S_RSRQ,
					CALL_STATUS,
					LATENCY_DRB_DL_AVERAGE,
 					LATENCY_DRB_DL_SAMPLE,
					CALL_SETUP_TIME,
					POS_LAST_TILE,					
 					POS_LAST_LOC,
					SRVCC_ATTEMPT,
					SRVCC_FAILURE,
					IRAT_TO_UMTS_ATTEMPT,
					IRAT_TO_GERAN_ATTEMPT,
					IRAT_TO_CDMA_ATTEMPT,
					IRAT_TO_UMTS_FAILURE,
					IRAT_TO_GERAN_FAILURE,
					IRAT_TO_CDMA_FAILURE
					');
	
	SET STR_START_SUM_LTE=CONCAT('POS_FIRST_TILE AS TILE_ID,
					DATA_DATE,
					DATA_HOUR,
 					gt_geohash_ext(POS_FIRST_LOC,',@ZOOM_LEVEL2,') AS ',@TILE_ID_LVL2,',
 					gt_geohash_ext(POS_FIRST_LOC,',@ZOOM_LEVEL1,') AS ',@TILE_ID_LVL1,',
					SUM(POS_FIRST_S_RSRP) AS `RSRP_SUM`,
					COUNT(POS_FIRST_S_RSRP) AS `RSRP_CNT`,
					SUM(POS_FIRST_S_RSRQ) AS `RSRQ_SUM`,
					COUNT(POS_FIRST_S_RSRQ) AS `RSRQ_CNT`,
					COUNT(*) AS `LTE_CALL_CNT`,
					SUM(IF(CALL_STATUS=3,1,0)) AS `LTE_BLOCK_CNT`,
					SUM(LATENCY_DRB_DL_AVERAGE ) AS `LATENCY_SUM`,
 					SUM(LATENCY_DRB_DL_SAMPLE) AS `LATENCY_CNT`,
					SUM(CALL_SETUP_TIME) AS `LTE_CALL_SETUP_TIME_SUM`,
					COUNT(CALL_SETUP_TIME) AS `LTE_CALL_SETUP_TIME_CNT`,
					SUM(IF(CALL_STATUS=6,1,0)) AS `LTE_SETUP_FAILURE_CNT`');
	SET STR_END_SUM_LTE=CONCAT('POS_LAST_TILE AS TILE_ID,
					DATA_DATE,
					DATA_HOUR,
 					gt_geohash_ext(POS_LAST_LOC,',@ZOOM_LEVEL2,') AS ',@TILE_ID_LVL2,',
 					gt_geohash_ext(POS_LAST_LOC,',@ZOOM_LEVEL1,') AS ',@TILE_ID_LVL1,',
					SUM(IF(CALL_STATUS=2,1,0)) AS `LTE_DROP_CNT`,
					SUM(SRVCC_ATTEMPT) AS `SRVCC_ATTEMPT_CNT`,
					SUM(SRVCC_FAILURE) AS `SRVCC_FAILURE_CNT`,
					SUM(IFNULL(IRAT_TO_UMTS_ATTEMPT,0)) AS `LTE_IRAT_TO_UMTS_ATMP`,
					SUM(IFNULL(IRAT_TO_GERAN_ATTEMPT,0)) AS `LTE_IRAT_TO_GREEN_ATMP`,
					SUM(IFNULL(IRAT_TO_CDMA_ATTEMPT,0)) AS `LTE_IRAT_TO_CDMA_ATMP`,
					SUM(IFNULL(IRAT_TO_UMTS_FAILURE,0)) AS `LTE_IRAT_TO_UMTS_FAIL`,
					SUM(IFNULL(IRAT_TO_GERAN_FAILURE,0)) AS `LTE_IRAT_TO_GREEN_FAIL`,
					SUM(IFNULL(IRAT_TO_CDMA_FAILURE,0)) AS `LTE_IRAT_TO_CDMA_FAIL`');
				
		
	INSERT INTO gt_gw_main.sp_log VALUES('gt_gw_main','SP_Generate_Global_Statistic_DS_tile_lte',CONCAT(GT_DB,' CREATE TEMPORARY TABLE tmp_materialization_',WORKER_ID), NOW());	
	
	SET SESSION group_concat_max_len=102400; 
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_materialization_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('CREATE TEMPORARY TABLE ',GT_DB,'.tmp_materialization_',WORKER_ID,' (
				  `TILE_ID` BIGINT(20) NOT NULL,
				  `DATA_DATE` DATETIME NOT NULL,
				  `DATA_HOUR` TINYINT(2) NOT NULL,
				  `',@TILE_ID_LVL2,'` BIGINT(20)  NULL,
				  `',@TILE_ID_LVL1,'` BIGINT(20)  NULL,
				  `RSRP_SUM` DOUBLE DEFAULT NULL,
				  `RSRP_CNT` INT(11) DEFAULT NULL,
				  `RSRQ_SUM` DOUBLE DEFAULT NULL,
				  `RSRQ_CNT` INT(11) DEFAULT NULL,
				  `LTE_CALL_CNT` INT(11) DEFAULT NULL,
				  `LTE_DROP_CNT` INT(11) DEFAULT NULL,
				  `LTE_BLOCK_CNT` INT(11) DEFAULT NULL,
				  `LTE_UL_VOLUME_SUM` DOUBLE DEFAULT NULL,
				  `LTE_DL_VOLUME_SUM` DOUBLE DEFAULT NULL,
				  `LTE_UL_THROUPUT_SUM` DOUBLE DEFAULT NULL,
				  `LTE_UL_THROUPUT_CNT` INT(11) DEFAULT NULL,
				  `LTE_DL_THROUPUT_SUM` DOUBLE DEFAULT NULL,
				  `LTE_DL_THROUPUT_CNT` INT(11) DEFAULT NULL,
				  `LATENCY_SUM` DOUBLE DEFAULT NULL,
				  `LATENCY_CNT` INT(11) DEFAULT NULL,
				  `LTE_CALL_SETUP_TIME_SUM` INT(11) DEFAULT NULL,
				  `LTE_CALL_SETUP_TIME_CNT` INT(11) DEFAULT NULL,
				  `LTE_SETUP_FAILURE_CNT` INT(11) DEFAULT NULL,
				  `SRVCC_ATTEMPT_CNT` INT(11) DEFAULT NULL,
				  `SRVCC_FAILURE_CNT` INT(11) DEFAULT NULL,
				  `S1_HO_ATTEMPT` INT(11) DEFAULT NULL,
				  `S1_HO_FAILURE` INT(11) DEFAULT NULL,
				  `X2_HO_ATTEMPT` INT(11) DEFAULT NULL,
				  `X2_HO_FAILURE` INT(11) DEFAULT NULL,
				  `LTE_MAX_UL_THROUPUT` DOUBLE DEFAULT NULL,
				  `LTE_MAX_DL_THROUPUT` DOUBLE DEFAULT NULL,
				  `LTE_IRAT_TO_UMTS_ATMP` INT(11) DEFAULT NULL,
				  `LTE_IRAT_TO_GREEN_ATMP` INT(11) DEFAULT NULL,
				  `LTE_IRAT_TO_CDMA_ATMP` INT(11) DEFAULT NULL,
				  `LTE_IRAT_TO_UMTS_FAIL` INT(11) DEFAULT NULL,
				  `LTE_IRAT_TO_GREEN_FAIL` INT(11) DEFAULT NULL,
				  `LTE_IRAT_TO_CDMA_FAIL` INT(11) DEFAULT NULL,
				  `REG_1_ID` BIGINT(20) DEFAULT NULL,
				  `REG_2_ID` BIGINT(20) DEFAULT NULL,
				  `REG_3_ID` BIGINT(20) DEFAULT NULL
				  ,PRIMARY KEY (`TILE_ID`,`DATA_DATE`,`DATA_HOUR`)
				) ENGINE=MYISAM DEFAULT CHARSET=latin1;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES('gt_gw_main','SP_Generate_Global_Statistic_DS_tile_lte',CONCAT(GT_DB,' INSERT INTO tbl_',GT_DB,'_',WORKER_ID), NOW());	
	 
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_tile_start_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('CREATE TEMPORARY TABLE ',GT_DB,'.tmp_tile_start_',WORKER_ID,' (
				  `TILE_ID` BIGINT(20) NOT NULL,
				  `DATA_DATE` DATETIME NOT NULL,
				  `DATA_HOUR` TINYINT(4) NOT NULL,
				  `',@TILE_ID_LVL2,'` BIGINT(20) NOT NULL,
				  `',@TILE_ID_LVL1,'` BIGINT(20) NOT NULL,
				  `RSRP_SUM` DOUBLE DEFAULT NULL,
				  `RSRP_CNT` INT(11) DEFAULT NULL,
				  `RSRQ_SUM` DOUBLE DEFAULT NULL,
				  `RSRQ_CNT` INT(11) DEFAULT NULL,
				  `LTE_CALL_CNT` INT(11) DEFAULT NULL,
				  `LTE_BLOCK_CNT` INT(11) DEFAULT NULL,
				  `LATENCY_SUM` DOUBLE DEFAULT NULL,
				  `LATENCY_CNT` INT(11) DEFAULT NULL,
				  `LTE_CALL_SETUP_TIME_SUM` INT(11) DEFAULT NULL,
				  `LTE_CALL_SETUP_TIME_CNT` INT(11) DEFAULT NULL,
				  `LTE_SETUP_FAILURE_CNT` INT(11) DEFAULT NULL
				  ,PRIMARY KEY (`TILE_ID`,`DATA_DATE`,`DATA_HOUR`)
				) ENGINE=MYISAM DEFAULT CHARSET=latin1;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_tile_end_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('CREATE TEMPORARY TABLE ',GT_DB,'.tmp_tile_end_',WORKER_ID,' (
				  `TILE_ID` BIGINT(20) NOT NULL,
				  `DATA_DATE` DATETIME NOT NULL,
				  `DATA_HOUR` TINYINT(4) NOT NULL,
				  `',@TILE_ID_LVL2,'` BIGINT(20) NOT NULL,
				  `',@TILE_ID_LVL1,'` BIGINT(20) NOT NULL,
				  `LTE_DROP_CNT` INT(11) DEFAULT NULL,
				  `SRVCC_ATTEMPT_CNT` INT(11) DEFAULT NULL,
				  `SRVCC_FAILURE_CNT` INT(11) DEFAULT NULL,
				  `LTE_IRAT_TO_UMTS_ATMP` INT(11) DEFAULT NULL,
				  `LTE_IRAT_TO_GREEN_ATMP` INT(11) DEFAULT NULL,
				  `LTE_IRAT_TO_CDMA_ATMP` INT(11) DEFAULT NULL,
				  `LTE_IRAT_TO_UMTS_FAIL` INT(11) DEFAULT NULL,
				  `LTE_IRAT_TO_GREEN_FAIL` INT(11) DEFAULT NULL,
				  `LTE_IRAT_TO_CDMA_FAIL` INT(11) DEFAULT NULL
				  ,PRIMARY KEY (`TILE_ID`,`DATA_DATE`,`DATA_HOUR`)
				) ENGINE=MYISAM DEFAULT CHARSET=latin1;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;	
	
	SET @v_i=DATA_HOUR;
	SET @v_i_Max=DATA_HOUR+1;
	SET @v_j=0;
				
	WHILE @v_i < @v_i_Max DO
	BEGIN	
		WHILE @v_j<60  DO
		BEGIN		
			IF (@v_j=45) THEN 
				SET @UNION=' '; 
			ELSE
				SET @UNION=' UNION ALL '; 
			END IF;	
			SET STR_SEL_START_LTE=CONCAT(STR_SEL_START_LTE,'SELECT ',STR_START_END_LTE,' FROM ',GT_DB,'.table_call_lte',CONCAT('_',LPAD(@v_i,2,'0'),LPAD(@v_j,2,'0')),' WHERE DATA_HOUR=', @v_i, ' AND 1',@UNION); 
			SET STR_SEL_END_LTE=CONCAT(STR_SEL_END_LTE,'SELECT ',STR_START_END_LTE,' FROM ',GT_DB,'.table_call_lte',CONCAT('_',LPAD(@v_i,2,'0'),LPAD(@v_j,2,'0')),' WHERE DATA_HOUR=', @v_i,@UNION); 
			SET @v_j=@v_j+15;
		END;
		END WHILE;
			
		SET @v_j=0;
		SET @v_i=@v_i+1;
	END;
	END WHILE;
	
	SET @SqlCmd=CONCAT('INSERT INTO ',GT_DB,'.tmp_tile_start_',WORKER_ID,' 
				(
					TILE_ID,DATA_DATE,DATA_HOUR,',@TILE_ID_LVL2,',',@TILE_ID_LVL1,'
					,RSRP_SUM,RSRP_CNT,RSRQ_SUM,RSRQ_CNT
					,LTE_CALL_CNT,LTE_BLOCK_CNT,LATENCY_SUM,LATENCY_CNT
					,LTE_CALL_SETUP_TIME_SUM,LTE_CALL_SETUP_TIME_CNT,LTE_SETUP_FAILURE_CNT
				) 
				SELECT ',STR_START_SUM_LTE,' 
				FROM (',STR_SEL_START_LTE,') AA
				GROUP BY POS_FIRST_TILE,DATA_DATE,DATA_HOUR
				ORDER BY NULL;
				');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('INSERT INTO ',GT_DB,'.tmp_tile_end_',WORKER_ID,' 
				(TILE_ID,DATA_DATE,DATA_HOUR,',@TILE_ID_LVL2,',',@TILE_ID_LVL1,'
				,LTE_DROP_CNT,SRVCC_ATTEMPT_CNT,SRVCC_FAILURE_CNT,
				`LTE_IRAT_TO_UMTS_ATMP`,`LTE_IRAT_TO_GREEN_ATMP`,`LTE_IRAT_TO_CDMA_ATMP`,	
				 `LTE_IRAT_TO_UMTS_FAIL`,`LTE_IRAT_TO_GREEN_FAIL`,`LTE_IRAT_TO_CDMA_FAIL`       
				)
				SELECT ',STR_END_SUM_LTE,' 
				FROM (',STR_SEL_END_LTE,') AA
				GROUP BY POS_LAST_TILE,DATA_DATE,DATA_HOUR
				ORDER BY NULL;
				');
	
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('CREATE INDEX `ix_tile_fq` ON ',GT_DB,'.tmp_tile_start_',WORKER_ID,' (TILE_ID,DATA_DATE,DATA_HOUR);');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('CREATE INDEX `ix_tile_fq` ON ',GT_DB,'.tmp_tile_end_',WORKER_ID,' (TILE_ID,DATA_DATE,DATA_HOUR);');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('INSERT INTO ',GT_DB,'.`tmp_materialization_',WORKER_ID,'` 
				(
					`TILE_ID`,
					`DATA_DATE`,
					`DATA_HOUR`,
					`',@TILE_ID_LVL2,'`,
					`',@TILE_ID_LVL1,'`,
					`LTE_UL_VOLUME_SUM`,
					`LTE_DL_VOLUME_SUM`,
					`LTE_UL_THROUPUT_SUM`,
					`LTE_UL_THROUPUT_CNT`,
					`LTE_DL_THROUPUT_SUM`,
					`LTE_DL_THROUPUT_CNT`,
					`S1_HO_ATTEMPT`,
					`S1_HO_FAILURE`,
					`X2_HO_ATTEMPT`,
					`X2_HO_FAILURE`,
					`LTE_MAX_UL_THROUPUT`,
					`LTE_MAX_DL_THROUPUT`
				)
				SELECT 
					TILE_ID AS TILE_ID,
					DATA_DATE,
					DATA_HOUR,
					gt_geohash_ext(TILE_ID,',@ZOOM_LEVEL2,') AS ',@TILE_ID_LVL2,',
 					gt_geohash_ext(TILE_ID,',@ZOOM_LEVEL1,') AS ',@TILE_ID_LVL1,',
					SUM(UL_VOLUME_SUM) AS `LTE_UL_VOLUME_SUM`,
					SUM(DL_VOLUME_SUM) AS `LTE_DL_VOLUME_SUM`,
					SUM(UL_THROUPUT_SUM) AS `LTE_UL_THROUPUT_SUM`,
					SUM(UL_THROUPUT_CNT) AS `LTE_UL_THROUPUT_CNT`,
					SUM(DL_THROUPUT_SUM) AS `LTE_DL_THROUPUT_SUM`,
					SUM(DL_THROUPUT_CNT) AS `LTE_DL_THROUPUT_CNT`,
					SUM(HO_4G_S1_INTRA_ATT_CNT+HO_4G_S1_INTER_ATT_CNT) AS `S1_HO_ATTEMPT`,
					SUM(HO_4G_S1_INTRA_FAIL_CNT+HO_4G_S1_INTER_FAIL_CNT) AS `S1_HO_FAILURE`,
					SUM(HO_4G_X2_INTRA_ATT_CNT+HO_4G_X2_INTER_ATT_CNT) AS `X2_HO_ATTEMPT`,
					SUM(HO_4G_X2_INTRA_FAIL_CNT+HO_4G_X2_INTER_FAIL_CNT) AS `X2_HO_FAILURE`,
					MAX(UL_THROUPUT_SUM/UL_THROUPUT_CNT) AS `LTE_MAX_UL_THROUPUT`,
					MAX(DL_THROUPUT_SUM/DL_THROUPUT_CNT) AS `LTE_MAX_DL_THROUPUT`
				FROM ',GT_DB,'.rpt_tile_position
				WHERE DATA_HOUR =',DATA_HOUR,' 
				GROUP BY TILE_ID,DATA_DATE,DATA_HOUR
				ORDER BY NULL;
				');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('UPDATE ',GT_DB,'.`tmp_materialization_',WORKER_ID,'` a,',GT_DB,'.`tmp_tile_start_',WORKER_ID,'` B
				SET 
				A.',@TILE_ID_LVL2,'=CASE WHEN A.',@TILE_ID_LVL2,' IS NULL THEN B.',@TILE_ID_LVL2,' ELSE A.',@TILE_ID_LVL2,' END
				,A.',@TILE_ID_LVL1,'=CASE WHEN A.',@TILE_ID_LVL1,' IS NULL THEN B.',@TILE_ID_LVL1,' ELSE A.',@TILE_ID_LVL1,' END
				,A.RSRP_SUM=B.RSRP_SUM
				,A.RSRP_CNT=B.RSRP_CNT
				,A.RSRQ_SUM=B.RSRQ_SUM
				,A.RSRQ_CNT=B.RSRQ_CNT
				,A.LTE_CALL_CNT=B.LTE_CALL_CNT
				,A.LTE_BLOCK_CNT=B.LTE_BLOCK_CNT
				,A.LATENCY_SUM=B.LATENCY_SUM
				,A.LATENCY_CNT=B.LATENCY_CNT
				,A.LTE_CALL_SETUP_TIME_SUM=B.LTE_CALL_SETUP_TIME_SUM
				,A.LTE_CALL_SETUP_TIME_CNT=B.LTE_CALL_SETUP_TIME_CNT
				,A.LTE_SETUP_FAILURE_CNT=B.LTE_SETUP_FAILURE_CNT
				WHERE A.TILE_ID=B.TILE_ID AND A.DATA_DATE=B.DATA_DATE AND A.DATA_HOUR=B.DATA_HOUR
				;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('UPDATE ',GT_DB,'.`tmp_materialization_',WORKER_ID,'` a,',GT_DB,'.`tmp_tile_end_',WORKER_ID,'` B
				SET
				A.',@TILE_ID_LVL2,'=CASE WHEN A.',@TILE_ID_LVL2,' IS NULL THEN B.',@TILE_ID_LVL2,' ELSE A.',@TILE_ID_LVL2,' END
				,A.',@TILE_ID_LVL1,'=CASE WHEN A.',@TILE_ID_LVL1,' IS NULL THEN B.',@TILE_ID_LVL1,' ELSE A.',@TILE_ID_LVL1,' END
				,A.LTE_DROP_CNT=B.LTE_DROP_CNT
				,A.SRVCC_ATTEMPT_CNT=B.SRVCC_ATTEMPT_CNT
				,A.SRVCC_FAILURE_CNT=B.SRVCC_FAILURE_CNT
				,A.LTE_IRAT_TO_UMTS_ATMP=B.LTE_IRAT_TO_UMTS_ATMP
				,A.LTE_IRAT_TO_GREEN_ATMP=B.LTE_IRAT_TO_GREEN_ATMP
				,A.LTE_IRAT_TO_CDMA_ATMP=B.LTE_IRAT_TO_CDMA_ATMP
				,A.LTE_IRAT_TO_UMTS_FAIL=B.LTE_IRAT_TO_UMTS_FAIL
				,A.LTE_IRAT_TO_GREEN_FAIL=B.LTE_IRAT_TO_GREEN_FAIL
				,A.LTE_IRAT_TO_CDMA_FAIL=B.LTE_IRAT_TO_GREEN_FAIL
				WHERE A.TILE_ID=B.TILE_ID AND A.DATA_DATE=B.DATA_DATE AND A.DATA_HOUR=B.DATA_HOUR
				;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('SELECT * FROM ',GT_DB,'.tmp_materialization_',WORKER_ID,' WHERE TILE_ID >0 ;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_materialization_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_tile_start_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_tile_end_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;	
	
	INSERT INTO gt_gw_main.sp_log VALUES('gt_gw_main','SP_Generate_Global_Statistic_DS_tile_lte',CONCAT(GT_DB,' END'), NOW());
	

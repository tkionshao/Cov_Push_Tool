CREATE DEFINER=`covmo`@`%` PROCEDURE `SP_Sub_Generate_FP`(IN GT_DB VARCHAR(100), IN KIND VARCHAR(20), IN VENDOR_SOURCE VARCHAR(20))
BEGIN
       	DECLARE RNC_ID INT;
	DECLARE O_GT_DB VARCHAR(100) DEFAULT GT_DB;
	DECLARE SH_EH VARCHAR(9) DEFAULT RIGHT(GT_DB,9);
	DECLARE GT_DATE VARCHAR(18) DEFAULT RIGHT(GT_DB,18);
	DECLARE STARTHOUR VARCHAR(2) DEFAULT SUBSTRING(RIGHT(GT_DB,18),10,2);
	DECLARE ENDHOUR VARCHAR(2) DEFAULT IF(SUBSTRING(RIGHT(GT_DB,18),15,2)='00','24',SUBSTRING(RIGHT(GT_DB,18),15,2));
	DECLARE RUN VARCHAR(20);
	DECLARE WORKER_ID VARCHAR(10) DEFAULT CONNECTION_ID();
	
	DECLARE AS_CNT_UB SMALLINT;		
	DECLARE START_TIME DATETIME DEFAULT SYSDATE();
	DECLARE v_i SMALLINT;	
	DECLARE V_FP_NEW_THREAD_0 INT;	
	DECLARE V_FP_NEW_THREAD_1_TO_6 INT;
	
	DECLARE interfere_rscp SMALLINT;
	DECLARE interfere_ecn0 SMALLINT;
	DECLARE ZOOM_LEVEL INT;
	SELECT `att_value` INTO ZOOM_LEVEL FROM `gt_covmo`.`sys_config` WHERE `group_name`='system' AND att_name = 'MapResolution';
	SET AS_CNT_UB=3;
	
	INSERT INTO gt_gw_main.SP_LOG VALUES(O_GT_DB,'SP_Sub_Generate_FP','START', START_TIME);
	
	SELECT att_value INTO interfere_rscp FROM gt_covmo.`sys_config` WHERE `group_name`='interference' AND att_name = 'interfere_rscp';
	SELECT att_value INTO interfere_ecn0 FROM gt_covmo.`sys_config` WHERE `group_name`='interference' AND att_name = 'interfere_ecn0';
	SELECT gt_strtok(GT_DB,2,'_') INTO RNC_ID;		
	
	CALL SP_Sub_Set_Session_Param(GT_DB);       
	SELECT REPLACE(GT_DB,SH_EH,'0000_0000') INTO GT_DB;
	IF VENDOR_SOURCE = 'GW' THEN
		IF KIND = 'DAILY' THEN
			SET RUN = '_tmp';
		ELSEIF KIND = 'RERUN' THEN
			SET RUN = '_rerun';
		END IF;
	ELSEIF VENDOR_SOURCE = 'AP' THEN
		SET RUN = '';
	END IF;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS  ',GT_DB,RUN,'.tmp_tbl_b_a_m_cnt','_',WORKER_ID,' ;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;	
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS  ',GT_DB,RUN,'.tmp_tbl_b_a_m_cnt_with_filter','_',WORKER_ID,' ;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;	
			
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FP','CREATE TABLE `tmp_tbl_b_a_m_cnt`', NOW());
		
	SET @SqlCmd=CONCAT('CREATE TEMPORARY TABLE ',GT_DB,RUN,'.`tmp_tbl_b_a_m_cnt','_',WORKER_ID,'` 
				(
				`CALL_ID` BIGINT(20) DEFAULT NULL,
				`TILE_ID` BIGINT(21) DEFAULT NULL,
				`CELL_ID` VARCHAR(50) DEFAULT NULL,
				`RNC_ID` VARCHAR(50) DEFAULT NULL,
				`RSCP` DOUBLE DEFAULT NULL,
				`ECN0` DOUBLE DEFAULT NULL,
				`PILOT_CNT` DOUBLE DEFAULT NULL,
				`PP_CNT` DOUBLE DEFAULT NULL,
				`POLLUTER` DOUBLE DEFAULT NULL,
				`RSCP_GAP` DOUBLE DEFAULT NULL,
				`AS_CNT` SMALLINT DEFAULT NULL ,
				`IFHO_CNT` SMALLINT NULL ,
				`ACTIVE_CNT` SMALLINT NULL ,
				`MONITOR_CNT` SMALLINT NULL ,
				`NON_SERVING_PILOT_DOMINANCE` DOUBLE NULL,
				`EMPHASIZE_PILOT_DOMINANCE` DOUBLE NULL,
				`BEST_SERVER_RSCP` DOUBLE NULL,
				`CELL_INTERFERED_CNT` SMALLINT NULL,
				`CELL_ADDITION_CNT` DOUBLE NULL,
				`CELL_REMOVAL_CNT` DOUBLE NULL,
				`CELL_REPLACEMENT_CNT` DOUBLE NULL,
				KEY `IX_CALL_ID` (`CALL_ID`)
				) ENGINE=MYISAM DEFAULT CHARSET=latin1;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt; 	
			
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FP','CREATE TABLE `tmp_tbl_event`', NOW());
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS  ',GT_DB,RUN,'.tmp_tbl_event','_',WORKER_ID,' ;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
		
	SET @SqlCmd=CONCAT('CREATE TEMPORARY TABLE ',GT_DB,RUN,'.`tmp_tbl_event','_',WORKER_ID,'` 
				(
				`CALL_ID` BIGINT(20) DEFAULT NULL,
				`TILE_ID` BIGINT(21) DEFAULT NULL,
				`CELL_ID` VARCHAR(50) DEFAULT NULL,
				`RNC_ID` VARCHAR(50) DEFAULT NULL,
				`L3_e1a` DOUBLE DEFAULT NULL,
				`L3_e1b` DOUBLE DEFAULT NULL,
				`L3_e1c` DOUBLE DEFAULT NULL,
				`L3_e1d` DOUBLE DEFAULT NULL,
				`L3_e1e` DOUBLE DEFAULT NULL,
				`L3_e1f` DOUBLE DEFAULT NULL,
				`L3_e2a` DOUBLE DEFAULT NULL,
				`L3_e2b` DOUBLE DEFAULT NULL,
				`L3_e2d` DOUBLE DEFAULT NULL,
				`L3_e2f` DOUBLE DEFAULT NULL,
				`L3_e3a` DOUBLE DEFAULT NULL,
				`L3_e4a` DOUBLE DEFAULT NULL,
				`L3_e4b` DOUBLE DEFAULT NULL,
				`L3_e6a` DOUBLE DEFAULT NULL,
				KEY `IX_CALL_ID` (`CALL_ID`)
				) ENGINE=MYISAM DEFAULT CHARSET=latin1;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt; 
	
	CALL GT_GW_MAIN.SP_Sub_Generate_FP_Thread(O_GT_DB,1,KIND,VENDOR_SOURCE);
	CALL GT_GW_MAIN.SP_Sub_Generate_FP_Thread(O_GT_DB,2,KIND,VENDOR_SOURCE);
	CALL GT_GW_MAIN.SP_Sub_Generate_FP_Thread(O_GT_DB,3,KIND,VENDOR_SOURCE);
	CALL GT_GW_MAIN.SP_Sub_Generate_FP_Thread(O_GT_DB,4,KIND,VENDOR_SOURCE);
	CALL GT_GW_MAIN.SP_Sub_Generate_FP_Thread(O_GT_DB,5,KIND,VENDOR_SOURCE);
	CALL GT_GW_MAIN.SP_Sub_Generate_FP_Thread(O_GT_DB,6,KIND,VENDOR_SOURCE);
	
	CALL GT_GW_MAIN.SP_Sub_Generate_FP_Thread(O_GT_DB,0,KIND,VENDOR_SOURCE);
		
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FP','CREATE TABLE tmp_tbl_b_a_m_cnt_with_filter', NOW());
		
	SET @SqlCmd=CONCAT('CREATE TEMPORARY TABLE ',GT_DB,RUN,'.tmp_tbl_b_a_m_cnt_with_filter','_',WORKER_ID,' ENGINE=MYISAM
				SELECT 
				 DATA_DATE
				, DATA_HOUR
				, INDOOR
				, MOVING
				, TILE_ID
				, RNC_ID
				, CELL_ID
				, CALL_TYPE 
				, CALL_STATUS
				, COUNT(*) AS MMR_CNT
				, AVG(RSCP) AS FP_RSCP
				, AVG(ECN0) AS FP_ECN0
				, median(RSCP) AS FP_RSCP_MED
				, median(ECN0) AS FP_ECN0_MED
				, SUM(PILOT_CNT) AS PILOT_CNT
				, SUM(PP_CNT) AS PP_CNT
				, SUM(POLLUTER) AS POLLUTER
				, MAX(POLLUTER) AS POLLUTER_MAX
				, AVG(RSCP_GAP) AS RSCP_GAP
				, SUM(B.ACTIVE_CNT) AS ACTIVE_CNT
				, SUM(B.MONITOR_CNT) AS MONITOR_CNT
				, SUM(IFHO) AS IFHO_CNT
				, MAX(AS_CNT) AS MAX_AS_CNT
				, AVG(AS_CNT) AS AVG_AS_CNT
				, AVG(NON_SERVING_PILOT_DOMINANCE) AS NON_SERVING_PILOT_DOMINANCE
				, AVG(IF(EMPHASIZE_PILOT_DOMINANCE>15,15,EMPHASIZE_PILOT_DOMINANCE)) AS EMPHASIZE_PILOT_DOMINANCE
				, AVG(BEST_SERVER_RSCP) AS BEST_SERVER_RSCP
				, SUM(CELL_INTERFERED_CNT) AS CELL_INTERFERED_CNT
				, SUM(CELL_ADDITION_CNT) AS CELL_ADDITION_CNT
				, SUM(CELL_REMOVAL_CNT) AS CELL_REMOVAL_CNT
				, SUM(CELL_REPLACEMENT_CNT) AS CELL_REPLACEMENT_CNT
				FROM ',GT_DB,RUN,'.table_call A, ',GT_DB,RUN,'.tmp_tbl_b_a_m_cnt','_',WORKER_ID,'  B
				WHERE A.CALL_ID=B.CALL_ID
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,'
				GROUP BY 
					 A.DATA_DATE
					, A.DATA_HOUR
					, INDOOR
					, MOVING
					, TILE_ID
					, RNC_ID
					, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
				ORDER BY NULL;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FP','CREATE INDEX IX_CALL_ID ON tmp_tbl_b_a_m_cnt_with_filter', NOW());
	
	SET @SqlCmd=CONCAT('CREATE INDEX IX_CALL_ID ON ',GT_DB,RUN,'.tmp_tbl_b_a_m_cnt_with_filter','_',WORKER_ID,' (`RNC_ID`,`CELL_ID`,`DATA_DATE`,`DATA_HOUR`,`TILE_ID`,`CALL_TYPE`,`INDOOR`,`MOVING`,`CALL_STATUS`);');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FP','UPDATE table_tile_fp ', NOW());
	
	SET @SqlCmd=CONCAT('UPDATE ',GT_DB,RUN,'.tmp_table_tile_fp','_',WORKER_ID,' A, ',GT_DB,RUN,'.tmp_tbl_b_a_m_cnt_with_filter','_',WORKER_ID,' B
				SET  
					A.MMR_CNT=B.MMR_CNT
					,A.PILOT_CNT=B.PILOT_CNT
					,A.PP_CNT=B.PP_CNT
					,A.POLLUTER=B.POLLUTER 
					,A.POLLUTER_MAX=B.POLLUTER_MAX
					,A.RSCP_GAP=B.RSCP_GAP
					,A.MAX_AS_CNT=CASE WHEN B.MAX_AS_CNT>',AS_CNT_UB ,' THEN ', AS_CNT_UB ,' ELSE B.MAX_AS_CNT END   
					,A.AVG_AS_CNT=CASE WHEN B.AVG_AS_CNT>',AS_CNT_UB ,' THEN ', AS_CNT_UB ,' ELSE B.AVG_AS_CNT END 
					,A.FP_RSCP=B.FP_RSCP 
					,A.FP_ECN0=B.FP_ECN0
					,A.FP_RSCP_MED=B.FP_RSCP_MED
					,A.FP_ECN0_MED=B.FP_ECN0_MED
					,A.ACTIVE_CNT=B.ACTIVE_CNT
					,A.MONITOR_CNT=B.MONITOR_CNT
					,A.NON_SERVING_PILOT_DOMINANCE=B.NON_SERVING_PILOT_DOMINANCE
					,A.EMPHASIZE_PILOT_DOMINANCE =B.EMPHASIZE_PILOT_DOMINANCE
					,A.BEST_SERVER_RSCP=B.BEST_SERVER_RSCP
					,A.CELL_INTERFERED_CNT=B.CELL_INTERFERED_CNT
					,A.CELL_ADDITION_CNT=B.CELL_ADDITION_CNT
					,A.CELL_REMOVAL_CNT=B.CELL_REMOVAL_CNT
					,A.CELL_REPLACEMENT_CNT=B.CELL_REPLACEMENT_CNT
				WHERE A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID 
				AND A.DATA_DATE=B.DATA_DATE
				AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND IFNULL(A.CALL_TYPE,65535)=IFNULL(B.CALL_TYPE,65535)
				AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				AND IFNULL(A.INDOOR,65535)=IFNULL(B.INDOOR,65535)
				AND IFNULL(A.MOVING,65535)=IFNULL(B.MOVING,65535)
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt; 
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS  ',GT_DB,RUN,'.tmp_table_tile_fp_tmp','_',WORKER_ID,' ;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FP','CREATE temp TABLE tmp_table_tile_fp_tmp', NOW());
	SET @SqlCmd=CONCAT('CREATE TEMPORARY TABLE ',GT_DB,RUN,'.tmp_table_tile_fp_tmp','_',WORKER_ID,' ENGINE=MYISAM
				SELECT 
				 DATA_DATE
				, DATA_HOUR
				, TILE_ID
				, CELL_ID
				, RNC_ID
				, INDOOR
				, MOVING
				, CALL_TYPE 
				, CALL_STATUS
				FROM ',GT_DB,RUN,'.tmp_table_tile_fp','_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FP','CREATE INDEX temp TABLE tmp_table_tile_fp_tmp ', NOW());
	
	SET @SqlCmd=CONCAT('CREATE INDEX IX_CALL_ID_join ON ',GT_DB,RUN,'.tmp_table_tile_fp_tmp','_',WORKER_ID,' (`CELL_ID`,`RNC_ID`,`TILE_ID`,`INDOOR`,`MOVING`,`CALL_TYPE`,`CALL_STATUS`);');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FP','INSERT the non-best pilot SERVER cell TO table_tile_fp ', NOW());
	SET @SqlCmd=CONCAT('INSERT INTO ',GT_DB,RUN,'.tmp_table_tile_fp','_',WORKER_ID,'
				(DATA_DATE,DATA_HOUR,INDOOR,MOVING,TILE_ID,RNC_ID,CELL_ID,CALL_TYPE,CALL_STATUS,FP_RSCP,FP_ECN0,FP_RSCP_MED,FP_ECN0_MED,BEST_CNT,MMR_CNT,PILOT_CNT,PP_CNT,POLLUTER,POLLUTER_MAX,RSCP_GAP,ACTIVE_CNT,MONITOR_CNT,MAX_AS_CNT,AVG_AS_CNT,NON_SERVING_PILOT_DOMINANCE,EMPHASIZE_PILOT_DOMINANCE,BEST_SERVER_RSCP,CELL_INTERFERED_CNT,CELL_ADDITION_CNT,CELL_REMOVAL_CNT,CELL_REPLACEMENT_CNT)
				SELECT A.`DATA_DATE`,A.`DATA_HOUR`,A.`INDOOR`,A.`MOVING`,A.`TILE_ID`,A.`RNC_ID`,A.`CELL_ID`,A.`CALL_TYPE`,A.`CALL_STATUS`
				,A.`FP_RSCP`,A.`FP_ECN0`,A.`FP_RSCP_MED`,A.`FP_ECN0_MED`,0 AS BEST_CNT,A.`MMR_CNT`,A.`PILOT_CNT`,A.`PP_CNT`,A.`POLLUTER`,A.`POLLUTER_MAX`,A.`RSCP_GAP`,A.`ACTIVE_CNT`,A.`MONITOR_CNT`,A.`MAX_AS_CNT`,A.`AVG_AS_CNT`,A.`NON_SERVING_PILOT_DOMINANCE`,A.`EMPHASIZE_PILOT_DOMINANCE`,A.`BEST_SERVER_RSCP`,A.`CELL_INTERFERED_CNT`,A.`CELL_ADDITION_CNT`,A.`CELL_REMOVAL_CNT`,A.`CELL_REPLACEMENT_CNT`
				FROM ',GT_DB,RUN,'.`tmp_tbl_b_a_m_cnt_with_filter','_',WORKER_ID,'` A
				WHERE   NOT EXISTS 
				( 
					SELECT  NULL
					FROM ',GT_DB,RUN,'.tmp_table_tile_fp_tmp','_',WORKER_ID,' B
					WHERE   A.RNC_ID=B.RNC_ID
					AND A.CELL_ID=B.CELL_ID 
					AND A.DATA_DATE=B.DATA_DATE
					AND A.DATA_HOUR=B.DATA_HOUR
					AND A.TILE_ID=B.TILE_ID
					AND IFNULL(A.CALL_TYPE,65535)=IFNULL(B.CALL_TYPE,65535)
					AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
					AND IFNULL(A.INDOOR,65535)=IFNULL(B.INDOOR,65535)
					AND IFNULL(A.MOVING,65535)=IFNULL(B.MOVING,65535) 
-- 					AND DATA_HOUR >= ',STARTHOUR,' AND DATA_HOUR < ',ENDHOUR,'
				)
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FP','UPDATE table_tile_fp-FREQUENCY, SITE_ID, DL_UARFCN, CELL_LON, CELL_LAT ', NOW());
		
	SET @SqlCmd=CONCAT('UPDATE ',GT_DB,RUN,'.tmp_table_tile_fp','_',WORKER_ID,' A, ',GT_DB,RUN,'.nt_current B
			    SET A.FREQUENCY=B.FREQUENCY
				,A.UARFCN=B.DL_UARFCN
				,A.SITE_ID=B.SITE_ID
				,A.CELL_LON=B.LONGITUDE
				,A.CELL_LAT=B.LATITUDE
				,A.CLUSTER_ID=B.CLUSTER_ID
				,A.CELL_INDOOR=B.INDOOR
				,A.PSC=B.SCRAMBLING_CODE
				WHERE A.RNC_ID=B.RNC_ID 
				AND A.CELL_ID=B.CELL_ID AND A.FREQUENCY IS NULL 
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
				
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FP','CREATE TABLE tmp_tbl_event_with_filter', NOW());
		
	SET @SqlCmd=CONCAT('CREATE TEMPORARY TABLE ',GT_DB,RUN,'.`tmp_tbl_event_with_filter','_',WORKER_ID,'` ENGINE=MYISAM
				SELECT 
				 A.DATA_DATE
				, A.DATA_HOUR
				, A.INDOOR
				, A.MOVING
				, B.TILE_ID
				, B.RNC_ID
				, B.CELL_ID
				, A.CALL_TYPE 
				, A.CALL_STATUS
				, SUM(B.L3_e1a) AS L3_e1a
				, SUM(B.L3_e1b) AS L3_e1b
				, SUM(B.L3_e1c) AS L3_e1c
				, SUM(B.L3_e1d) AS L3_e1d
				, SUM(B.L3_e1e) AS L3_e1e
				, SUM(B.L3_e1f) AS L3_e1f
				, SUM(B.L3_e2a) AS L3_e2a
				, SUM(B.L3_e2b) AS L3_e2b
				, SUM(B.L3_e2d) AS L3_e2d
				, SUM(B.L3_e2f) AS L3_e2f
				, SUM(B.L3_e3a) AS L3_e3a
				, SUM(B.L3_e4a) AS L3_e4a
				, SUM(B.L3_e4b) AS L3_e4b
				, SUM(B.L3_e6a) AS L3_e6a
				FROM ',GT_DB,RUN,'.table_call A, ',GT_DB,RUN,'.`tmp_tbl_event','_',WORKER_ID,'`  B
				WHERE A.CALL_ID=B.CALL_ID
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,'
				GROUP BY 
					 A.DATA_DATE
					, A.DATA_HOUR
					, INDOOR
					, MOVING
					, B.TILE_ID
					, B.RNC_ID
					, B.CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
				ORDER BY NULL;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FP','CREATE INDEX IX_CALL_ID ON tmp_tbl_event_with_filter', NOW());
	
	SET @SqlCmd=CONCAT('CREATE INDEX IX_CALL_ID ON ',GT_DB,RUN,'.tmp_tbl_event_with_filter','_',WORKER_ID,' (`RNC_ID`,`CELL_ID`,`DATA_DATE`,`DATA_HOUR`,`TILE_ID`,`CALL_TYPE`,`INDOOR`,`MOVING`,`CALL_STATUS`);');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FP','UPDATE table_tile_fp EVENT', NOW());
	
	SET @SqlCmd=CONCAT('UPDATE ',GT_DB,RUN,'.tmp_table_tile_fp','_',WORKER_ID,' A, ',GT_DB,RUN,'.tmp_tbl_event_with_filter','_',WORKER_ID,' B
				SET  A.L3_e1a=B.L3_e1a,
					A.L3_e1b=B.L3_e1b,
					A.L3_e1c=B.L3_e1c,
					A.L3_e1d=B.L3_e1d,
					A.L3_e1e=B.L3_e1e,
					A.L3_e1f=B.L3_e1f,
					A.L3_e2a=B.L3_e2a,
					A.L3_e2b=B.L3_e2b,
					A.L3_e2d=B.L3_e2d,
					A.L3_e2f=B.L3_e2f,
					A.L3_e3a=B.L3_e3a,
					A.L3_e4a=B.L3_e4a,
					A.L3_e4b=B.L3_e4b,
					A.L3_e6a=B.L3_e6a
				WHERE A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID 
				AND A.DATA_DATE=B.DATA_DATE
				AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND IFNULL(A.CALL_TYPE,65535)=IFNULL(B.CALL_TYPE,65535)
				AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				AND IFNULL(A.INDOOR,65535)=IFNULL(B.INDOOR,65535)
				AND IFNULL(A.MOVING,65535)=IFNULL(B.MOVING,65535)
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt; 
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS  ',GT_DB,RUN,'.tmp_tbl_event','_',WORKER_ID,' ;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS  ',GT_DB,RUN,'.tmp_tbl_event_with_filter','_',WORKER_ID,' ;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS  ',GT_DB,RUN,'.tmp_tbl_b_a_m_cnt','_',WORKER_ID,' ;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS  ',GT_DB,RUN,'.tmp_tbl_b_a_m_cnt_with_filter','_',WORKER_ID,' ;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS  ',GT_DB,RUN,'.tmp_table_tile_fp_tmp','_',WORKER_ID,' ;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FP','DROP TABLE tmp_tile_interfere', NOW());
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,RUN,'.`tmp_tile_interfere','_',WORKER_ID,'`;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(GT_DB,'SP_Sub_Generate_FP','CREATE TABLE tmp_tile_interfere', NOW());
	
	SET @SqlCmd=CONCAT('CREATE TEMPORARY TABLE ',GT_DB,RUN,'.`tmp_tile_interfere','_',WORKER_ID,'` (
				  `DATA_DATE` DATE DEFAULT NULL,
				  `DATA_HOUR` TINYINT(4) DEFAULT NULL,
				  `TILE_ID` BIGINT(20) DEFAULT NULL,
				  `CALL_TYPE` TINYINT(4) DEFAULT NULL,
				  `INDOOR` TINYINT(4) DEFAULT NULL,
				  `MOVING` TINYINT(4) DEFAULT NULL,
				  `CALL_STATUS` TINYINT(4) DEFAULT NULL,
				  `TILE_INTERFERED_CNT` MEDIUMINT(9) DEFAULT 0,
				  `TILE_ADDITION_CNT` DOUBLE NULL,
				  `TILE_REMOVAL_CNT` DOUBLE NULL,
				  `TILE_REPLACEMENT_CNT` DOUBLE NULL
				) ENGINE=MYISAM DEFAULT CHARSET=latin1;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;		
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FP','INSERT DATA TO tmp_tile_interfere', NOW());
	
	SET @SqlCmd=CONCAT('INSERT INTO ',GT_DB,RUN,'.`tmp_tile_interfere','_',WORKER_ID,'` 
				(`DATA_DATE`,`DATA_HOUR`,`TILE_ID`,`CALL_TYPE`,`INDOOR`,`MOVING`,`CALL_STATUS`,`TILE_INTERFERED_CNT`,`TILE_ADDITION_CNT`,`TILE_REMOVAL_CNT`,`TILE_REPLACEMENT_CNT`)
				SELECT  
				 A.DATA_DATE
				, A.DATA_HOUR
				, gt_covmo_proj_geohash_to_hex_geohash(LOC_ID, ',ZOOM_LEVEL,') AS TILE_ID
				, CALL_TYPE
				, A.INDOOR
				, A.MOVING
				, CALL_STATUS
				, SUM(gt_covmo_interference(B.RSCP, B.ECN0,',interfere_rscp,',',interfere_ecn0,')) AS TILE_INTERFERED_CNT
				, SUM(CASE WHEN EVENT_ID =0 THEN 1 END) AS TILE_ADDITION_CNT
				, SUM(CASE WHEN EVENT_ID =1 THEN 1 END) AS TILE_REMOVAL_CNT
				, SUM(CASE WHEN EVENT_ID =2 THEN 1 END) AS TILE_REPLACEMENT_CNT
				FROM ',GT_DB,RUN,'.table_call A  FORCE INDEX (CALL_ID), ',GT_DB,RUN,'.table_position B FORCE INDEX (CALL_ID)
				WHERE A.CALL_ID=B.CALL_ID
				AND gt_covmo_csv_getnum(B.RNC_ID,1)=',RNC_ID,'
				AND RSCP IS NOT NULL
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,'
				AND B.DATA_HOUR >= ',STARTHOUR,' AND B.DATA_HOUR < ',ENDHOUR,'
				AND B.EVENT_ID NOT IN (''20'',''21'',''22'',''23'',''24'',''25'',''26'',''27'',''28'')
				GROUP BY 
					 A.DATA_DATE
					, A.DATA_HOUR
					, gt_covmo_proj_geohash_to_hex_geohash(LOC_ID, ',ZOOM_LEVEL,')
					, CALL_TYPE
					, A.INDOOR
					, A.MOVING
					, CALL_STATUS
				ORDER BY NULL	;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FP','CREATE INDEX of TABLE tmp_tile_interfere', NOW());
	
	SET @SqlCmd=CONCAT('CREATE INDEX `ix_tmp_tile_interfere` ON ',GT_DB,RUN,'.`tmp_tile_interfere','_',WORKER_ID,'` (`DATA_DATE`,`DATA_HOUR`,`TILE_ID`,`CALL_TYPE`,`INDOOR`,`MOVING`,`CALL_STATUS`);');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;	
		
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FP','UPDATE table_tile_fp -TILE_INTERFERED_CNT', NOW());
	
	SET @SqlCmd=CONCAT('UPDATE ',GT_DB,RUN,'.tmp_table_tile_fp','_',WORKER_ID,' A, ',GT_DB,RUN,'.tmp_tile_interfere','_',WORKER_ID,' B
			    SET A.TILE_INTERFERED_CNT=B.TILE_INTERFERED_CNT
				,A.TILE_ADDITION_CNT=B.TILE_ADDITION_CNT
				,A.TILE_REMOVAL_CNT=B.TILE_REMOVAL_CNT
				,A.TILE_REPLACEMENT_CNT=B.TILE_REPLACEMENT_CNT
			    WHERE A.DATA_DATE =B.DATA_DATE
				AND A.DATA_HOUR =B.DATA_HOUR
				AND A.TILE_ID =B.TILE_ID
				AND IFNULL(A.CALL_TYPE,65535)=IFNULL(B.CALL_TYPE,65535)
				AND IFNULL(A.INDOOR,65535)=IFNULL(B.INDOOR,65535)
				AND IFNULL(A.MOVING,65535)=IFNULL(B.MOVING,65535)
				AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
-- 				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,'
	;');
	
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;	
	
	SET @SqlCmd=CONCAT('INSERT INTO ',GT_DB,RUN,'.table_tile_fp  
				SELECT * FROM ',GT_DB,RUN,'.tmp_table_tile_fp','_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,RUN,'.tmp_table_tile_fp','_',WORKER_ID,' ;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;	
	
	INSERT INTO gt_gw_main.SP_LOG VALUES(O_GT_DB,'SP_Sub_Generate_FP',CONCAT('Done: ',TIMESTAMPDIFF(SECOND,START_TIME,SYSDATE()),' seconds.'), NOW());	
	

CREATE DEFINER=`covmo`@`%` PROCEDURE `SP_Sub_Generate_FAILURE_CNT_LTE`(IN GT_DB VARCHAR(100))
BEGIN
	DECLARE PU_ID INT;
	DECLARE O_GT_DB VARCHAR(100) DEFAULT GT_DB;
	DECLARE START_TIME DATETIME DEFAULT SYSDATE();	
	DECLARE STARTHOUR VARCHAR(2) DEFAULT SUBSTRING(RIGHT(GT_DB,18),10,2);
	DECLARE ENDHOUR VARCHAR(2) DEFAULT IF(SUBSTRING(RIGHT(GT_DB,18),15,2)='00','24',SUBSTRING(RIGHT(GT_DB,18),15,2));
	DECLARE SH_EH VARCHAR(9) DEFAULT RIGHT(GT_DB,9);
	DECLARE QRT CHAR(4);
	
	SELECT gt_strtok(GT_DB,2,'_') INTO PU_ID;
	SELECT gt_strtok(GT_DB,4,'_') INTO Qrt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FAILURE_CNT_LTE','START', NOW());
	
	SELECT REPLACE(GT_DB,SH_EH,'0000_0000') INTO GT_DB;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FAILURE_CNT_LTE','INSERT INTO table_failure_cnt', NOW());	
	
	SET @SqlCmd=CONCAT('DROP TABLE IF EXISTS ',O_GT_DB,'.tmp_evetn_cause;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('CREATE TABLE ',O_GT_DB,'.tmp_evetn_cause
				SELECT DISTINCT DATA_DATE, DATA_HOUR,
				',PU_ID,' AS PU_ID ,
				  `RRC_FAILURE_LAST`,
				  `RRC_FAILURE_CAUSE_LAST`,
				  `S1AP_FAILURE_LAST`,
				  `S1AP_FAILURE_CAUSE_LAST`,
				  `X2AP_FAILURE_LAST`,
				  `X2AP_FAILURE_CAUSE_LAST`,
				FROM ',O_GT_DB,'.table_call_lte
				WHERE DATA_HOUR >= ',STARTHOUR,' AND DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('INSERT INTO ',GT_DB,'.table_failure_cnt
					(DATA_DATE,DATA_HOUR,PU_ID,PROTOCOL,FAIL_EVENT,FAIL_CAUSE)	
				SELECT DISTINCT DATA_DATE
					, DATA_HOUR
					, PU_ID AS PU_ID
					, 1 AS PROTOCOL 
					, RRC_FAILURE_LAST AS FAIL_EVENT
					, RRC_FAILURE_CAUSE_LAST AS FAIL_CAUSE 
				FROM ',O_GT_DB,'.tmp_evetn_cause
				WHERE RRC_FAILURE_LAST IS NOT NULL
				UNION 	
				SELECT DISTINCT DATA_DATE
					, DATA_HOUR
					, PU_ID AS PU_ID
					, 2 AS PROTOCOL 
					, S1AP_FAILURE_LAST AS FAIL_EVENT
					, S1AP_FAILURE_CAUSE_LAST AS  FAIL_CAUSE 
				FROM ',O_GT_DB,'.tmp_evetn_cause
				WHERE S1AP_FAILURE_LAST  IS NOT NULL
				UNION 	
				SELECT DISTINCT DATA_DATE
					, DATA_HOUR
					, PU_ID AS PU_ID
					, 3 AS PROTOCOL 
					, X2AP_FAILURE_LAST AS FAIL_EVENT
					, X2AP_FAILURE_CAUSE_LAST AS FAIL_CAUSE 
				FROM ',O_GT_DB,'.tmp_evetn_cause
				WHERE X2AP_FAILURE_LAST IS NOT NULL
				ORDER BY NULL
				;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;	
	
	SET @SqlCmd=CONCAT('DROP TABLE IF EXISTS ',O_GT_DB,'.tmp_evetn_cause;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_FAILURE_CNT_LTE',CONCAT('Done: ',TIMESTAMPDIFF(SECOND,START_TIME,SYSDATE()),' seconds.'), NOW());
		

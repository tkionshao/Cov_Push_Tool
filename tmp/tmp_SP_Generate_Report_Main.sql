CREATE DEFINER=`covmo`@`%` PROCEDURE `SP_Generate_Report_Main`(IN GT_DB VARCHAR(100), IN KIND VARCHAR(20), IN VENDOR_SOURCE VARCHAR(20), IN note VARCHAR(500),IN GT_COVMO VARCHAR(100), IN EVENT_NUM TINYINT(2),IN POS_NUM TINYINT(2))
BEGIN
	DECLARE RNC_ID INT;
	DECLARE V_UPD_IMEI_GT_DB INT;
	DECLARE SH_EH VARCHAR(9) DEFAULT RIGHT(GT_DB,9);
	DECLARE O_GT_DB VARCHAR(100) DEFAULT GT_DB;
	DECLARE v_REPORT1 INT;
	DECLARE v_REPORT2 INT;
	DECLARE v_REPORT3 INT;
	DECLARE START_TIME DATETIME DEFAULT SYSDATE();
	DECLARE STARTHOUR VARCHAR(2) DEFAULT SUBSTRING(RIGHT(GT_DB,18),10,2);
	DECLARE ENDHOUR VARCHAR(2) DEFAULT IF(SUBSTRING(RIGHT(GT_DB,18),15,2)='00','24',SUBSTRING(RIGHT(GT_DB,18),15,2));
	DECLARE RUN VARCHAR(20);
	DECLARE ORG_NT_DATE VARCHAR(20) DEFAULT SUBSTRING(RIGHT(GT_DB,18),1,8);
	DECLARE NT_DATE VARCHAR(20) DEFAULT CONCAT(SUBSTRING(ORG_NT_DATE,1,4),'-',SUBSTRING(ORG_NT_DATE,5,2),'-',SUBSTRING(ORG_NT_DATE,7,2));
	DECLARE v_1 INT;
	DECLARE SP_Process VARCHAR(100);
	DECLARE TAC_REPORT_FLAG VARCHAR(10);
	
	SELECT LOWER(`value`) INTO TAC_REPORT_FLAG  FROM gt_gw_main.integration_param WHERE gt_group = 'sp' AND gt_name = '01.tac.report' ;
	
	
	CALL SP_Sub_Set_Session_Param(GT_DB);
	SELECT REPLACE(GT_DB,SH_EH,'0000_0000') INTO GT_DB;
	SELECT gt_strtok(GT_DB,2,'_') INTO RNC_ID;
	
	IF VENDOR_SOURCE = 'GW' THEN
		IF KIND = 'DAILY' THEN
			SET RUN = '_tmp';
		ELSEIF KIND = 'RERUN' THEN
			SET RUN = '_rerun';
		END IF;
	ELSEIF VENDOR_SOURCE = 'AP' THEN
		SET RUN = '';
	END IF;
				 
	INSERT INTO gt_gw_main.SP_LOG VALUES(O_GT_DB,'SP_Generate_Report_Main','Start', START_TIME);
	SET @SqlCmd=CONCAT('SELECT COUNT(*) INTO @TABLE_CALL_CNT FROM ',GT_DB,RUN,'.table_call WHERE DATA_HOUR >= ',STARTHOUR,' AND DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;	
	
	
	SET @SqlCmd =CONCAT('UPDATE gt_gw_main.session_information 
			     SET SP_STARTTIME=''',NOW(),'''
			     WHERE SESSION_DB=''',GT_DB,''' AND SP_STARTTIME IS NULL '
			     );	
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	CALL GT_GW_MAIN.Sp_Sub_Generate_Interface_Serverity(O_GT_DB,KIND,VENDOR_SOURCE,GT_COVMO);
	CALL GT_GW_MAIN.SP_Sub_Generate_UE_TX_POWER(O_GT_DB,KIND,VENDOR_SOURCE,GT_COVMO);
	CALL GT_GW_MAIN.SP_Sub_Generate_UL_SIR(O_GT_DB,KIND,VENDOR_SOURCE,GT_COVMO);
	CALL GT_GW_MAIN.SP_Sub_Generate_FAILURE_CNT(O_GT_DB,KIND,VENDOR_SOURCE);
	CALL GT_GW_MAIN.SP_Sub_Generate_RNC_Call_Count(O_GT_DB,KIND,VENDOR_SOURCE,GT_COVMO);
	CALL GT_GW_MAIN.SP_Sub_Generate_Dashboard_Summary_Tile(O_GT_DB,KIND,VENDOR_SOURCE);
	CALL GT_GW_MAIN.SP_Sub_Generate_TAC(O_GT_DB,KIND,VENDOR_SOURCE,GT_COVMO);
	CALL GT_GW_MAIN.SP_Sub_Generate_Dominat_Cell(O_GT_DB,KIND,VENDOR_SOURCE,GT_COVMO);
	CALL GT_GW_MAIN.SP_Sub_Generate_IMSI(O_GT_DB,KIND,VENDOR_SOURCE,GT_COVMO);
	
	
	IF TAC_REPORT_FLAG = 'true' THEN 
		CALL GT_GW_MAIN.SP_Sub_Generate_TAC_Start(O_GT_DB);
		CALL GT_GW_MAIN.SP_Sub_Generate_TAC_End(O_GT_DB);
	END IF;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Generate_Report_Main','update gt_gw_main table_call_cnt', NOW());
	SET @SqlCmd=CONCAT(' DELETE FROM  ',GT_DB,RUN,'.table_call_cnt
			WHERE PU_ID = ',RNC_ID,' AND 
			DATA_HOUR >= ',STARTHOUR,' AND DATA_HOUR < ',ENDHOUR,';
			');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT(' INSERT INTO  ',GT_DB,RUN,'.table_call_cnt
			(DATA_DATE,DATA_HOUR,PU_ID,SERVICETYPE,TOT_CALL_CNT,TECH_MASK,NOTE)
			SELECT DATA_DATE,DATA_HOUR,',RNC_ID, ' AS PU_ID ,
			CASE
			 WHEN CALL_TYPE = ''10'' THEN ''voice'' 
			 WHEN CALL_TYPE = ''11'' THEN ''video'' 
			 WHEN CALL_TYPE = ''12'' THEN ''PS R99'' 
			 WHEN CALL_TYPE = ''13'' THEN ''PS HSPA'' 
			 WHEN CALL_TYPE = ''14'' THEN ''multi-RAB'' 
			 WHEN CALL_TYPE = ''15'' THEN ''signaling'' 
			 WHEN CALL_TYPE = ''16'' THEN ''sms'' 
			 WHEN CALL_TYPE = ''17'' THEN ''cellUpdate'' 
			 WHEN CALL_TYPE = ''18'' THEN ''ps other'' 
			 WHEN CALL_TYPE = ''19'' THEN ''unknow'' 
			  ELSE '' Other '' 
			END AS CALL_TYPE 
			,COUNT(*) AS TOT_CALL_CNT
			,2 AS TECH_MASK
			,''',note,'''
			FROM  ',GT_DB,RUN,'.table_call A
			WHERE DATA_HOUR >= ',STARTHOUR,' AND DATA_HOUR < ',ENDHOUR,'
			GROUP BY  DATA_DATE,DATA_HOUR,
				CASE
				 WHEN CALL_TYPE = ''10'' THEN ''voice'' 
				 WHEN CALL_TYPE = ''11'' THEN ''video'' 
				 WHEN CALL_TYPE = ''12'' THEN ''PS R99'' 
				 WHEN CALL_TYPE = ''13'' THEN ''PS HSPA'' 
				 WHEN CALL_TYPE = ''14'' THEN ''multi-RAB'' 
				 WHEN CALL_TYPE = ''15'' THEN ''signaling'' 
				 WHEN CALL_TYPE = ''16'' THEN ''sms'' 
				 WHEN CALL_TYPE = ''17'' THEN ''cellUpdate'' 
				 WHEN CALL_TYPE = ''18'' THEN ''ps other'' 
				 WHEN CALL_TYPE = ''19'' THEN ''unknow'' 
				  ELSE '' Other '' 
				END 	
	;
			');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	SET @SqlCmd=CONCAT(' INSERT INTO  ',GT_DB,RUN,'.table_call_cnt 
				( DATA_DATE,DATA_HOUR,PU_ID,SERVICETYPE,TOT_CALL_CNT,NOTE)
				SELECT DATA_DATE,DATA_HOUR,',RNC_ID, ',
				CASE WHEN CALL_TYPE=12 THEN ''PT'' 
				     WHEN CALL_TYPE=13 THEN ''PT'' 
				     WHEN CALL_TYPE=14 THEN ''PT'' 
				     WHEN CALL_TYPE=18 THEN ''PT'' 
				END AS SERVICETYPE
				,SUM(DL_TRAFFIC_VOLUME+UL_TRAFFIC_VOLUME) AS TRAFFIC
				,''',note,'''
				FROM  ',GT_DB,RUN,'.table_call
				WHERE POS_FIRST_RNC=',RNC_ID,'
				AND DATA_HOUR >= ',STARTHOUR,' AND DATA_HOUR < ',ENDHOUR,'
				GROUP BY  DATA_DATE,DATA_HOUR,POS_FIRST_RNC
					,CASE WHEN CALL_TYPE=12 THEN ''PT'' 
					     WHEN CALL_TYPE=13 THEN ''PT''
					     WHEN CALL_TYPE=14 THEN ''PT''
					     WHEN CALL_TYPE=18 THEN ''PT''
					END
				HAVING SERVICETYPE IS NOT NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;	
	
	SET @SqlCmd=CONCAT(' INSERT INTO  ',GT_DB,RUN,'.table_call_cnt 
				( DATA_DATE,DATA_HOUR,PU_ID,SERVICETYPE,TOT_CALL_CNT,NOTE)
				SELECT DATA_DATE,DATA_HOUR,',RNC_ID, ',''CS_MOU'' AS SERVICETYPE
				,SUM(RRC_CONNECT_DURATION/60) AS MOU
				,''',note,'''
				FROM  ',GT_DB,RUN,'.table_call
				WHERE POS_FIRST_RNC=',RNC_ID,' AND CALL_TYPE IN (10,11)
				AND DATA_HOUR >= ',STARTHOUR,' AND DATA_HOUR < ',ENDHOUR,'
				GROUP BY  DATA_DATE,DATA_HOUR,POS_FIRST_RNC');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;	
	
	SET @SqlCmd=CONCAT('
			REPLACE INTO gt_gw_main.table_call_cnt
			(DATA_DATE,DATA_HOUR,PU_ID,SERVICETYPE,TOT_CALL_CNT,TECH_MASK,NOTE)
			SELECT DATA_DATE,DATA_HOUR,PU_ID,SERVICETYPE,TOT_CALL_CNT,TECH_MASK,NOTE
			FROM  ',GT_DB,RUN,'.table_call_cnt
			WHERE PU_ID = ',RNC_ID,' 
			AND DATA_HOUR >= ',STARTHOUR,' AND DATA_HOUR < ',ENDHOUR,';
			');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SELECT COUNT(*) INTO @CHECK_CNT FROM `gt_schedule`.`job_task`;
	
	IF @CHECK_CNT = 0 THEN
		ALTER EVENT gt_schedule.job_worker DISABLE  ;
	END IF;
	
	
	INSERT INTO gt_gw_main.SP_LOG VALUES(O_GT_DB,'SP_Generate_Report_Main',CONCAT('Done: ',TIMESTAMPDIFF(SECOND,START_TIME,SYSDATE()),' seconds.'), NOW());
	
	
	
	
	

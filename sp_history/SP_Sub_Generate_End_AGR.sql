DELIMITER $$
USE `gt_gw_main`$$
DROP PROCEDURE IF EXISTS `SP_CreateDB_LTE`$$
CREATE DEFINER=`covmo`@`%` PROCEDURE `SP_Sub_Generate_End_AGR`(IN GT_DB VARCHAR(100), IN KIND VARCHAR(20), IN VENDOR_SOURCE VARCHAR(20),IN GT_COVMO VARCHAR(100))
BEGIN
	DECLARE RNC_ID INT;
	DECLARE O_GT_DB VARCHAR(100) DEFAULT GT_DB;
	DECLARE START_TIME DATETIME DEFAULT SYSDATE();
	DECLARE PARTITION_ID INT DEFAULT SUBSTRING(RIGHT(GT_DB,18),10,2) ;
	DECLARE SH_EH VARCHAR(9) DEFAULT RIGHT(GT_DB,9);
	DECLARE STARTHOUR VARCHAR(2) DEFAULT SUBSTRING(RIGHT(GT_DB,18),10,2);
	DECLARE ENDHOUR VARCHAR(2) DEFAULT IF(SUBSTRING(RIGHT(GT_DB,18),15,2)='00','24',SUBSTRING(RIGHT(GT_DB,18),15,2));
	DECLARE RUN VARCHAR(20);
	DECLARE WORKER_ID VARCHAR(10) DEFAULT CONNECTION_ID();
	
	DECLARE CURRENT_NT_DB VARCHAR(50) DEFAULT CONCAT('gt_nt_',gt_strtok(GT_DB,3,'_'));
 	SELECT gt_strtok(GT_DB,2,'_') INTO RNC_ID;
	
	
	CALL SP_Sub_Set_Session_Param(GT_DB);
	SELECT REPLACE(GT_DB,SH_EH,'0000_0000') INTO GT_DB;
	
	IF VENDOR_SOURCE = 'GW' THEN
		IF KIND = 'DAILY' THEN
			SET RUN = '_tmp';
		ELSEIF KIND = 'RERUN' THEN
			SET RUN = '_rerun';
		END IF;
	ELSEIF VENDOR_SOURCE = 'AP' THEN
		SET RUN = '';
	END IF;
	
	SET @SqlCmd=CONCAT('SELECT att_value INTO @ZOOM_LEVEL FROM ',GT_DB,RUN,'.`sys_config` WHERE `group_name`=''system'' AND att_name = ''MapResolution'';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('ALTER TABLE ',GT_DB,RUN,'.table_tile_end TRUNCATE PARTITION h',PARTITION_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('ALTER TABLE ',GT_DB,RUN,'.table_tile_end_t TRUNCATE PARTITION h',PARTITION_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('ALTER TABLE ',GT_DB,RUN,'.table_tile_end_c TRUNCATE PARTITION h',PARTITION_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('ALTER TABLE ',GT_DB,RUN,'.table_tile_end_def TRUNCATE PARTITION h',PARTITION_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('ALTER TABLE ',GT_DB,RUN,'.table_tile_end_t_def TRUNCATE PARTITION h',PARTITION_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('ALTER TABLE ',GT_DB,RUN,'.table_tile_end_c_def TRUNCATE PARTITION h',PARTITION_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_End_AGR','CREATE temp TABLE tmp_table_tile_end ', NOW());
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE  IF EXISTS ',GT_DB,RUN,'.tmp_table_tile_end_',WORKER_ID,';');
	PREPARE stmt FROM @sqlcmd;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @SqlCmd=CONCAT('CREATE TEMPORARY TABLE ',GT_DB,RUN,'.`tmp_table_tile_end_',WORKER_ID,'` (
					`DATA_DATE` DATE DEFAULT NULL,
					`DATA_HOUR` TINYINT(4) DEFAULT NULL,
					`INDOOR` TINYINT(4) DEFAULT NULL,
					`MOVING` TINYINT(4) DEFAULT NULL,
					`TILE_ID` BIGINT(20) DEFAULT NULL,
					`RNC_ID` MEDIUMINT(9) DEFAULT NULL,
					`CELL_INDOOR` TINYINT(4) DEFAULT NULL,
					`CLUSTER_ID` MEDIUMINT(9) DEFAULT NULL,
					`SITE_ID` VARCHAR(20) DEFAULT NULL,
					`FREQUENCY` SMALLINT(6) DEFAULT NULL,
					`UARFCN` MEDIUMINT(9) DEFAULT NULL,
					`CELL_ID` MEDIUMINT(9) DEFAULT NULL,
					`CALL_TYPE` TINYINT(4) DEFAULT NULL,
					`CALL_STATUS` TINYINT(4) DEFAULT NULL,
					`CALL_CNT` MEDIUMINT(9) DEFAULT ''0'',
					`CAUSE_14_CNT` SMALLINT(6) DEFAULT ''0'',
					`CAUSE_15_CNT` SMALLINT(6) DEFAULT ''0'',
					`CAUSE_46_CNT` SMALLINT(6) DEFAULT ''0'',
					`CAUSE_115_CNT` SMALLINT(6) DEFAULT ''0'',
					`CAUSE_OTHERS_CNT` SMALLINT(6) DEFAULT ''0'',
					`CAUSE_53_CNT` SMALLINT(6) DEFAULT 0,
					`CAUSE_65_CNT` SMALLINT(6) DEFAULT 0,
					`CAUSE_114_CNT` SMALLINT(6) DEFAULT 0,
					`CAUSE_263_CNT` SMALLINT(6) DEFAULT 0,
					`CAUSE_CAPACITY` SMALLINT(6) DEFAULT 0,
					`BEST_RSCP_1` DOUBLE DEFAULT NULL,
					`BEST_ECN0_1` DOUBLE DEFAULT NULL,
					`BEST_RSCP_1_MED` DOUBLE DEFAULT NULL,
					`BEST_ECN0_1_MED` DOUBLE DEFAULT NULL,
					`IRAT_HHO_ATTEMPT` MEDIUMINT(9) DEFAULT ''0'',
					`IRAT_HHO_SUCCESS` MEDIUMINT(9) DEFAULT ''0'',
					-- CALC FOR TILE AND CELL
					`POS_LAST_RSCP_CNT` DOUBLE DEFAULT NULL,
					`POS_LAST_ECN0_CNT` DOUBLE DEFAULT NULL,
					-- update
					`CELL_LON` DOUBLE DEFAULT NULL,
					`CELL_LAT` DOUBLE DEFAULT NULL,
-- 					  CALL_STATUS_BLOCK MEDIUMINT(9) DEFAULT 0,
-- 					  CALL_STATUS_SUCCESS MEDIUMINT(9) DEFAULT 0,
-- 					  CALL_STATUS_DROP MEDIUMINT(9) DEFAULT 0,
-- 					  CALL_TYPE_SMS MEDIUMINT(9) DEFAULT 0,
-- 					  CALL_TYPE_VOICE MEDIUMINT(9) DEFAULT 0,
-- 					  CALL_TYPE_VEDIO MEDIUMINT(9) DEFAULT 0,
-- 					  CALL_TYPE_PS99 MEDIUMINT(9) DEFAULT 0,
-- 					  CALL_TYPE_HSPA MEDIUMINT(9) DEFAULT 0,
-- 					  CALL_TYPE_MRAB MEDIUMINT(9) DEFAULT 0,
-- 					  CALL_TYPE_PSOTHERS MEDIUMINT(9) DEFAULT 0,
-- 					  CALL_TYPE_CS MEDIUMINT(9) DEFAULT 0,
-- 					  CALL_TYPE_PS MEDIUMINT(9) DEFAULT 0
					  `NAS_CAUSE_SM_SUM` DOUBLE DEFAULT NULL,
					  `NAS_GPRS_MM_DETACH_SUM` DOUBLE DEFAULT NULL
				) ENGINE=MYISAM DEFAULT CHARSET=latin1;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt; 
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_End_AGR','INSERT DATA TO tmp_table_tile_end', NOW());
	
	SET @SqlCmd=CONCAT('INSERT INTO  ',GT_DB,RUN,'.`tmp_table_tile_end_',WORKER_ID,'`
				(DATA_DATE,DATA_HOUR,INDOOR,MOVING,TILE_ID,RNC_ID,CELL_INDOOR,CLUSTER_ID,SITE_ID,FREQUENCY, UARFCN, 
				CELL_ID,CALL_TYPE,CALL_STATUS,CALL_CNT,CAUSE_14_CNT,CAUSE_15_CNT,CAUSE_46_CNT,CAUSE_115_CNT,CAUSE_OTHERS_CNT,
				CAUSE_53_CNT,CAUSE_65_CNT,CAUSE_114_CNT,CAUSE_263_CNT,
				CAUSE_CAPACITY,BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,IRAT_HHO_ATTEMPT,IRAT_HHO_SUCCESS,
				POS_LAST_RSCP_CNT,POS_LAST_ECN0_CNT, CELL_LON,CELL_LAT
-- 				,CALL_STATUS_BLOCK,CALL_STATUS_SUCCESS,CALL_STATUS_DROP,CALL_TYPE_SMS,CALL_TYPE_VOICE,CALL_TYPE_VEDIO
-- 				,CALL_TYPE_PS99,CALL_TYPE_HSPA,CALL_TYPE_MRAB,CALL_TYPE_PSOTHERS,CALL_TYPE_CS,CALL_TYPE_PS
				,NAS_CAUSE_SM_SUM,NAS_GPRS_MM_DETACH_SUM
	)
				SELECT
				 DATA_DATE
				, DATA_HOUR
				, INDOOR
				, MOVING
				, gt_covmo_proj_geohash_to_hex_geohash(POS_LAST_LOC, ',@ZOOM_LEVEL,') AS TILE_ID
				, POS_LAST_RNC AS RNC_ID
				, POS_LAST_CELL_INDOOR AS CELL_INDOOR
				, POS_LAST_CLUSTER AS CLUSTER_ID
				, POS_LAST_SITE AS SITE_ID
				, POS_LAST_FREQUENCY AS FREQUENCY 
				, POS_LAST_UARFCN AS UARFCN 
				, POS_LAST_CELL AS CELL_ID
				, CALL_TYPE 
				, CALL_STATUS
				, COUNT(POS_LAST_CELL) AS CALL_CNT
				, SUM(IF(IU_RELEASE_CAUSE = 14 AND CALL_STATUS =2,1,0)) AS CAUSE_14_CNT
				, SUM(IF(IU_RELEASE_CAUSE = 15 AND CALL_STATUS =2,1,0)) AS CAUSE_15_CNT
				, SUM(IF(IU_RELEASE_CAUSE = 46 AND CALL_STATUS =2,1,0)) AS CAUSE_46_CNT
				, SUM(IF(IU_RELEASE_CAUSE = 115 AND CALL_STATUS =2,1,0)) AS CAUSE_115_CNT
				, SUM(IF(IU_RELEASE_CAUSE NOT IN (14,15,46,115) AND CALL_STATUS =2,1,0)) AS CAUSE_OTHERS_CNT
				, SUM(IF(IU_RELEASE_CAUSE = 53 AND CALL_STATUS =2,1,0)) AS CAUSE_53_CNT
				, SUM(IF(IU_RELEASE_CAUSE = 65 AND CALL_STATUS =2,1,0)) AS CAUSE_65_CNT
				, SUM(IF(IU_RELEASE_CAUSE = 114 AND CALL_STATUS =2,1,0)) AS CAUSE_114_CNT
				, SUM(IF(IU_RELEASE_CAUSE = 263 AND CALL_STATUS =2,1,0)) AS CAUSE_263_CNT
				, SUM(IF(IU_RELEASE_CAUSE IN (53,65,114,263) AND CALL_STATUS =2,1,0)) AS CAUSE_CAPACITY
				, SUM(POS_LAST_RSCP) AS BEST_RSCP_1
				, SUM(POS_LAST_ECN0) AS BEST_ECN0_1
				, median(POS_LAST_RSCP) AS BEST_RSCP_1_MED
				, median(POS_LAST_ECN0) AS BEST_ECN0_1_MED
				, SUM(IRAT_HHO_ATTEMPT) AS IRAT_HHO_ATTEMPT
				, SUM(IRAT_HHO_SUCCESS) AS IRAT_HHO_SUCCESS
				-- CALC FOR TILE AND CELL
				, COUNT(POS_LAST_RSCP) AS POS_LAST_RSCP_CNT
				, COUNT(POS_LAST_ECN0) AS POS_LAST_ECN0_CNT
				,NULL AS CELL_LON 
				,NULL AS CELL_LAT
-- 				, SUM(IF(CALL_STATUS = 3,1,0)) AS CALL_STATUS_BLOCK
-- 				, SUM(IF(CALL_STATUS IN (1,2,4),1,0)) AS CALL_STATUS_SUCCESS
-- 				, SUM(IF(CALL_STATUS = 2,1,0)) AS CALL_STATUS_DROP
-- 				, SUM(IF(CALL_TYPE = 16,1,0)) AS CALL_TYPE_SMS
-- 				, SUM(IF(CALL_TYPE = 10,1,0)) AS CALL_TYPE_VOICE
-- 				, SUM(IF(CALL_TYPE = 11,1,0)) AS CALL_TYPE_VEDIO
-- 				, SUM(IF(CALL_TYPE = 12,1,0)) AS CALL_TYPE_PS99
-- 				, SUM(IF(CALL_TYPE = 13,1,0)) AS CALL_TYPE_HSPA
-- 				, SUM(IF(CALL_TYPE = 14,1,0)) AS CALL_TYPE_MRAB
-- 				, SUM(IF(CALL_TYPE = 18,1,0)) AS CALL_TYPE_PSOTHERS
-- 				, SUM(IF(CALL_TYPE IN (10,11),1,0)) AS CALL_TYPE_CS
-- 				, SUM(IF(CALL_TYPE IN (12,13,14,18),1,0)) AS CALL_TYPE_PS
				, SUM(NAS_CAUSE_SM) AS NAS_CAUSE_SM_SUM
				, SUM(NAS_GPRS_MM_DETACH) AS NAS_GPRS_MM_DETACH_SUM
				FROM ',GT_DB,RUN,'.table_call
				WHERE POS_LAST_RNC=',RNC_ID,'
				AND DATA_HOUR >= ',STARTHOUR,' AND DATA_HOUR < ',ENDHOUR,'
				GROUP BY 
						DATA_DATE
						, DATA_HOUR
						, INDOOR
						, MOVING
						, gt_covmo_proj_geohash_to_hex_geohash(POS_LAST_LOC, ',@ZOOM_LEVEL,')
						, POS_LAST_RNC
-- 						, POS_LAST_CELL_INDOOR
-- 						, POS_LAST_CLUSTER
-- 						, POS_LAST_SITE
-- 						, POS_LAST_FREQUENCY
-- 						, POS_LAST_UARFCN
						, POS_LAST_CELL
						, CALL_TYPE 
						, CALL_STATUS
				ORDER BY NULL;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_End_AGR','UPDATE the VALUE of CELL_LON, CELL_LAT IN table_tile_end', NOW());
	
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.`tmp_table_tile_end_',WORKER_ID,'` A, 
				    ',CURRENT_NT_DB,'.nt_current B
			     SET A.CELL_LON=B.LONGITUDE
				,A.CELL_LAT=B.LATITUDE
				WHERE A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				AND DATA_HOUR >= ',STARTHOUR,' AND DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;	
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_End_AGR','INSERT DATA TO table_tile_end', NOW());
	SET @SqlCmd=CONCAT('INSERT INTO  ',GT_DB,RUN,'.`table_tile_end`	
					(DATA_DATE,DATA_HOUR,INDOOR,MOVING,TILE_ID,RNC_ID,CELL_INDOOR,CLUSTER_ID,SITE_ID,FREQUENCY, UARFCN, 
					CELL_ID,CALL_TYPE,CALL_STATUS,CALL_CNT,CAUSE_14_CNT,CAUSE_15_CNT,CAUSE_46_CNT,CAUSE_115_CNT,CAUSE_OTHERS_CNT,
					CAUSE_53_CNT,CAUSE_65_CNT,CAUSE_114_CNT,CAUSE_263_CNT,
					CAUSE_CAPACITY,BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,IRAT_HHO_ATTEMPT,IRAT_HHO_SUCCESS, CELL_LON,CELL_LAT,
					POS_LAST_RSCP_CNT,POS_LAST_ECN0_CNT
-- 					,CALL_STATUS_BLOCK,CALL_STATUS_SUCCESS,CALL_STATUS_DROP,CALL_TYPE_SMS,CALL_TYPE_VOICE,CALL_TYPE_VEDIO
-- 					,CALL_TYPE_PS99,CALL_TYPE_HSPA,CALL_TYPE_MRAB,CALL_TYPE_PSOTHERS,CALL_TYPE_CS,CALL_TYPE_PS
					,NAS_CAUSE_SM_SUM,NAS_GPRS_MM_DETACH_SUM
	)
				SELECT
					 DATA_DATE,DATA_HOUR,INDOOR,MOVING,TILE_ID,RNC_ID,CELL_INDOOR,CLUSTER_ID,SITE_ID,FREQUENCY, UARFCN, 
					CELL_ID,CALL_TYPE,CALL_STATUS,CALL_CNT,CAUSE_14_CNT,CAUSE_15_CNT,CAUSE_46_CNT,CAUSE_115_CNT,CAUSE_OTHERS_CNT,
					CAUSE_53_CNT,CAUSE_65_CNT,CAUSE_114_CNT,CAUSE_263_CNT,
					CAUSE_CAPACITY,BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,IRAT_HHO_ATTEMPT,IRAT_HHO_SUCCESS, CELL_LON,CELL_LAT,
					POS_LAST_RSCP_CNT,POS_LAST_ECN0_CNT
-- 					,CALL_STATUS_BLOCK,CALL_STATUS_SUCCESS,CALL_STATUS_DROP,CALL_TYPE_SMS,CALL_TYPE_VOICE,CALL_TYPE_VEDIO
-- 					,CALL_TYPE_PS99,CALL_TYPE_HSPA,CALL_TYPE_MRAB,CALL_TYPE_PSOTHERS,CALL_TYPE_CS,CALL_TYPE_PS
					,NAS_CAUSE_SM_SUM,NAS_GPRS_MM_DETACH_SUM
				FROM ',GT_DB,RUN,'.`tmp_table_tile_end_',WORKER_ID,'`;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_End_AGR','INSERT DATA TO table_tile_end_t', NOW());
	SET @SqlCmd=CONCAT('INSERT INTO  ',GT_DB,RUN,'.`table_tile_end_t`
				(DATA_DATE,DATA_HOUR,INDOOR,MOVING,TILE_ID,RNC_ID,FREQUENCY, UARFCN, 
				CALL_TYPE,CALL_STATUS,CALL_CNT,CAUSE_14_CNT,CAUSE_15_CNT,CAUSE_46_CNT,CAUSE_115_CNT,CAUSE_OTHERS_CNT,
				CAUSE_53_CNT,CAUSE_65_CNT,CAUSE_114_CNT,CAUSE_263_CNT,CAUSE_CAPACITY,
				BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,IRAT_HHO_ATTEMPT,IRAT_HHO_SUCCESS,POS_LAST_RSCP_CNT,POS_LAST_ECN0_CNT
-- 				,CALL_STATUS_BLOCK,CALL_STATUS_SUCCESS,CALL_STATUS_DROP,CALL_TYPE_SMS,CALL_TYPE_VOICE,CALL_TYPE_VEDIO
-- 				,CALL_TYPE_PS99,CALL_TYPE_HSPA,CALL_TYPE_MRAB,CALL_TYPE_PSOTHERS,CALL_TYPE_CS,CALL_TYPE_PS
				,NAS_CAUSE_SM_SUM,NAS_GPRS_MM_DETACH_SUM
	)
				SELECT
				 DATA_DATE
				, DATA_HOUR
				, INDOOR
				, MOVING
				, TILE_ID
				, RNC_ID
				#, CELL_INDOOR
				#, CLUSTER_ID
				#, SITE_ID
				, FREQUENCY 
				, UARFCN 
				#, CELL_ID
				, CALL_TYPE 
				, CALL_STATUS
				, SUM(CALL_CNT)
				, SUM(CAUSE_14_CNT)
				, SUM(CAUSE_15_CNT)
				, SUM(CAUSE_46_CNT)
				, SUM(CAUSE_115_CNT)
				, SUM(CAUSE_OTHERS_CNT)
				, SUM(CAUSE_53_CNT)
				, SUM(CAUSE_65_CNT)
				, SUM(CAUSE_114_CNT)
				, SUM(CAUSE_263_CNT)
				, SUM(CAUSE_CAPACITY)
				, SUM(BEST_RSCP_1) AS BEST_RSCP_1
				, SUM(BEST_ECN0_1) AS BEST_ECN0_1
				, NULL #median(BEST_RSCP_1_MED)
				, NULL #median(BEST_ECN0_1_MED)
				, SUM(IRAT_HHO_ATTEMPT)
				, SUM(IRAT_HHO_SUCCESS)
				, SUM(POS_LAST_RSCP_CNT)
				, SUM(POS_LAST_ECN0_CNT)
-- 				,SUM(CALL_STATUS_BLOCK) AS CALL_STATUS_BLOCK
-- 				,SUM(CALL_STATUS_SUCCESS) AS CALL_STATUS_SUCCESS
-- 				,SUM(CALL_STATUS_DROP) AS CALL_STATUS_DROP
-- 				,SUM(CALL_TYPE_SMS) AS CALL_TYPE_SMS
-- 				,SUM(CALL_TYPE_VOICE) AS CALL_TYPE_VOICE
-- 				,SUM(CALL_TYPE_VEDIO) AS CALL_TYPE_VEDIO
-- 				,SUM(CALL_TYPE_PS99) AS CALL_TYPE_PS99
-- 				,SUM(CALL_TYPE_HSPA) AS CALL_TYPE_HSPA
-- 				,SUM(CALL_TYPE_MRAB) AS CALL_TYPE_MRAB
-- 				,SUM(CALL_TYPE_PSOTHERS) AS CALL_TYPE_PSOTHERS
-- 				,SUM(CALL_TYPE_CS) AS CALL_TYPE_CS
-- 				,SUM(CALL_TYPE_PS) AS CALL_TYPE_PS
				,SUM(NAS_CAUSE_SM_SUM) AS NAS_CAUSE_SM_SUM
				,SUM(NAS_GPRS_MM_DETACH_SUM) AS NAS_GPRS_MM_DETACH_SUM
				FROM ',GT_DB,RUN,'.`tmp_table_tile_end_',WORKER_ID,'`
				WHERE TILE_ID IS NOT NULL	
				GROUP BY 
					DATA_DATE
					, DATA_HOUR
					, INDOOR
					, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_INDOOR
					#, CLUSTER_ID
					#, SITE_ID
-- 					, FREQUENCY
-- 					, UARFCN
					#, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
				ORDER BY NULL;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_End_AGR','INSERT DATA TO table_tile_end_c', NOW());
	SET @SqlCmd=CONCAT('INSERT INTO  ',GT_DB,RUN,'.`table_tile_end_c`
				(DATA_DATE,DATA_HOUR,INDOOR,MOVING,RNC_ID,CELL_INDOOR,CLUSTER_ID,SITE_ID,FREQUENCY, UARFCN, 
				CELL_ID,CALL_TYPE,CALL_STATUS,CALL_CNT,CAUSE_14_CNT,CAUSE_15_CNT,CAUSE_46_CNT,CAUSE_115_CNT,CAUSE_OTHERS_CNT,
				CAUSE_53_CNT,CAUSE_65_CNT,CAUSE_114_CNT,CAUSE_263_CNT,CAUSE_CAPACITY,
				BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,IRAT_HHO_ATTEMPT,IRAT_HHO_SUCCESS, CELL_LON,CELL_LAT,POS_LAST_RSCP_CNT,POS_LAST_ECN0_CNT
-- 				,CALL_STATUS_BLOCK,CALL_STATUS_SUCCESS,CALL_STATUS_DROP,CALL_TYPE_SMS,CALL_TYPE_VOICE,CALL_TYPE_VEDIO
-- 				,CALL_TYPE_PS99,CALL_TYPE_HSPA,CALL_TYPE_MRAB,CALL_TYPE_PSOTHERS,CALL_TYPE_CS,CALL_TYPE_PS
				,NAS_CAUSE_SM_SUM,NAS_GPRS_MM_DETACH_SUM
	)
				SELECT
				 DATA_DATE
				, DATA_HOUR
				, INDOOR
				, MOVING
				#, TILE_ID
				, RNC_ID
				, CELL_INDOOR
				, CLUSTER_ID
				, SITE_ID
				, FREQUENCY 
				, UARFCN 
				, CELL_ID
				, CALL_TYPE 
				, CALL_STATUS
				, SUM(CALL_CNT)
				, SUM(CAUSE_14_CNT)
				, SUM(CAUSE_15_CNT)
				, SUM(CAUSE_46_CNT)
				, SUM(CAUSE_115_CNT)
				, SUM(CAUSE_OTHERS_CNT)
				, SUM(CAUSE_53_CNT)
				, SUM(CAUSE_65_CNT)
				, SUM(CAUSE_114_CNT)
				, SUM(CAUSE_263_CNT)
				, SUM(CAUSE_CAPACITY)
				, SUM(BEST_RSCP_1) AS BEST_RSCP_1
				, SUM(BEST_ECN0_1) AS BEST_ECN0_1
				, NULL #median(BEST_RSCP_1_MED)
				, NULL #median(BEST_ECN0_1_MED)
				, SUM(IRAT_HHO_ATTEMPT)
				, SUM(IRAT_HHO_SUCCESS)
				, CELL_LON,CELL_LAT
				, SUM(POS_LAST_RSCP_CNT)
				, SUM(POS_LAST_ECN0_CNT)
-- 				,SUM(CALL_STATUS_BLOCK) AS CALL_STATUS_BLOCK
-- 				,SUM(CALL_STATUS_SUCCESS) AS CALL_STATUS_SUCCESS
-- 				,SUM(CALL_STATUS_DROP) AS CALL_STATUS_DROP
-- 				,SUM(CALL_TYPE_SMS) AS CALL_TYPE_SMS
-- 				,SUM(CALL_TYPE_VOICE) AS CALL_TYPE_VOICE
-- 				,SUM(CALL_TYPE_VEDIO) AS CALL_TYPE_VEDIO
-- 				,SUM(CALL_TYPE_PS99) AS CALL_TYPE_PS99
-- 				,SUM(CALL_TYPE_HSPA) AS CALL_TYPE_HSPA
-- 				,SUM(CALL_TYPE_MRAB) AS CALL_TYPE_MRAB
-- 				,SUM(CALL_TYPE_PSOTHERS) AS CALL_TYPE_PSOTHERS
-- 				,SUM(CALL_TYPE_CS) AS CALL_TYPE_CS
-- 				,SUM(CALL_TYPE_PS) AS CALL_TYPE_PS
				,SUM(NAS_CAUSE_SM_SUM) AS NAS_CAUSE_SM_SUM
				,SUM(NAS_GPRS_MM_DETACH_SUM) AS NAS_GPRS_MM_DETACH_SUM
				FROM ',GT_DB,RUN,'.`tmp_table_tile_end_',WORKER_ID,'`
				GROUP BY 
						DATA_DATE
						, DATA_HOUR
						, INDOOR
						, MOVING
						#, TILE_ID
						, RNC_ID
-- 						, CELL_INDOOR
-- 						, CLUSTER_ID
-- 						, SITE_ID
-- 						, FREQUENCY
-- 						, UARFCN
						, CELL_ID
						, CALL_TYPE 
						, CALL_STATUS
				ORDER BY NULL;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_End_AGR','INSERT DATA TO table_tile_end_def', NOW());
	SET @SqlCmd=CONCAT('INSERT INTO  ',GT_DB,RUN,'.`table_tile_end_def`
				(DATA_DATE,DATA_HOUR,TILE_ID,RNC_ID, 
				CELL_ID,CALL_CNT,CAUSE_14_CNT,CAUSE_15_CNT,CAUSE_46_CNT,CAUSE_115_CNT,CAUSE_OTHERS_CNT,
				CAUSE_53_CNT,CAUSE_65_CNT,CAUSE_114_CNT,CAUSE_263_CNT,CAUSE_CAPACITY,
				BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,IRAT_HHO_ATTEMPT,IRAT_HHO_SUCCESS, CELL_LON,CELL_LAT,POS_LAST_RSCP_CNT,POS_LAST_ECN0_CNT
-- 				,CALL_STATUS_BLOCK,CALL_STATUS_SUCCESS,CALL_STATUS_DROP,CALL_TYPE_SMS,CALL_TYPE_VOICE,CALL_TYPE_VEDIO
-- 				,CALL_TYPE_PS99,CALL_TYPE_HSPA,CALL_TYPE_MRAB,CALL_TYPE_PSOTHERS,CALL_TYPE_CS,CALL_TYPE_PS
				,NAS_CAUSE_SM_SUM,NAS_GPRS_MM_DETACH_SUM
	)
				SELECT
				 DATA_DATE
				, DATA_HOUR
				#, INDOOR
				#, MOVING
				, TILE_ID
				, RNC_ID
				#, CELL_INDOOR
				#, CLUSTER_ID
				#, SITE_ID
				#, FREQUENCY 
				#, UARFCN 
				, CELL_ID
				#, CALL_TYPE 
				#, CALL_STATUS
				, SUM(CALL_CNT)
				, SUM(CAUSE_14_CNT)
				, SUM(CAUSE_15_CNT)
				, SUM(CAUSE_46_CNT)
				, SUM(CAUSE_115_CNT)
				, SUM(CAUSE_OTHERS_CNT)
				, SUM(CAUSE_53_CNT)
				, SUM(CAUSE_65_CNT)
				, SUM(CAUSE_114_CNT)
				, SUM(CAUSE_263_CNT)
				, SUM(CAUSE_CAPACITY)
				, SUM(BEST_RSCP_1) AS BEST_RSCP_1
				, SUM(BEST_ECN0_1) AS BEST_ECN0_1
				, NULL #median(BEST_RSCP_1_MED)
				, NULL #median(BEST_ECN0_1_MED)
				, SUM(IRAT_HHO_ATTEMPT)
				, SUM(IRAT_HHO_SUCCESS)
				, CELL_LON,CELL_LAT
				, SUM(POS_LAST_RSCP_CNT)
				, SUM(POS_LAST_ECN0_CNT)
-- 				,SUM(CALL_STATUS_BLOCK) AS CALL_STATUS_BLOCK
-- 				,SUM(CALL_STATUS_SUCCESS) AS CALL_STATUS_SUCCESS
-- 				,SUM(CALL_STATUS_DROP) AS CALL_STATUS_DROP
-- 				,SUM(CALL_TYPE_SMS) AS CALL_TYPE_SMS
-- 				,SUM(CALL_TYPE_VOICE) AS CALL_TYPE_VOICE
-- 				,SUM(CALL_TYPE_VEDIO) AS CALL_TYPE_VEDIO
-- 				,SUM(CALL_TYPE_PS99) AS CALL_TYPE_PS99
-- 				,SUM(CALL_TYPE_HSPA) AS CALL_TYPE_HSPA
-- 				,SUM(CALL_TYPE_MRAB) AS CALL_TYPE_MRAB
-- 				,SUM(CALL_TYPE_PSOTHERS) AS CALL_TYPE_PSOTHERS
-- 				,SUM(CALL_TYPE_CS) AS CALL_TYPE_CS
-- 				,SUM(CALL_TYPE_PS) AS CALL_TYPE_PS
				,SUM(NAS_CAUSE_SM_SUM) AS NAS_CAUSE_SM_SUM
				,SUM(NAS_GPRS_MM_DETACH_SUM) AS NAS_GPRS_MM_DETACH_SUM
				FROM ',GT_DB,RUN,'.`tmp_table_tile_end_',WORKER_ID,'`
				GROUP BY 
						DATA_DATE
						, DATA_HOUR
						#, INDOOR
						#, MOVING
						, TILE_ID
						, RNC_ID
						#, CELL_INDOOR
						#, CLUSTER_ID
						#, SITE_ID
						#, FREQUENCY
						#, UARFCN
						, CELL_ID
						#, CALL_TYPE 
						#, CALL_STATUS
				ORDER BY NULL;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_End_AGR','INSERT DATA TO table_tile_end_t_def', NOW());
	SET @SqlCmd=CONCAT('INSERT INTO  ',GT_DB,RUN,'.`table_tile_end_t_def`
				(DATA_DATE,DATA_HOUR,TILE_ID,RNC_ID, 
				CALL_CNT,CAUSE_14_CNT,CAUSE_15_CNT,CAUSE_46_CNT,CAUSE_115_CNT,CAUSE_OTHERS_CNT,
				CAUSE_53_CNT,CAUSE_65_CNT,CAUSE_114_CNT,CAUSE_263_CNT,CAUSE_CAPACITY,
				BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,IRAT_HHO_ATTEMPT,IRAT_HHO_SUCCESS, CELL_LON,CELL_LAT,POS_LAST_RSCP_CNT,POS_LAST_ECN0_CNT
-- 				,CALL_STATUS_BLOCK,CALL_STATUS_SUCCESS,CALL_STATUS_DROP,CALL_TYPE_SMS,CALL_TYPE_VOICE,CALL_TYPE_VEDIO
-- 				,CALL_TYPE_PS99,CALL_TYPE_HSPA,CALL_TYPE_MRAB,CALL_TYPE_PSOTHERS,CALL_TYPE_CS,CALL_TYPE_PS
				,NAS_CAUSE_SM_SUM,NAS_GPRS_MM_DETACH_SUM
	)
				SELECT
				 DATA_DATE
				, DATA_HOUR
				#, INDOOR
				#, MOVING
				, TILE_ID
				, RNC_ID
				#, CELL_INDOOR
				#, CLUSTER_ID
				#, SITE_ID
				#, FREQUENCY 
				#, UARFCN 
				#, CELL_ID
				#, CALL_TYPE 
				#, CALL_STATUS
				, SUM(CALL_CNT)
				, SUM(CAUSE_14_CNT)
				, SUM(CAUSE_15_CNT)
				, SUM(CAUSE_46_CNT)
				, SUM(CAUSE_115_CNT)
				, SUM(CAUSE_OTHERS_CNT)
				, SUM(CAUSE_53_CNT)
				, SUM(CAUSE_65_CNT)
				, SUM(CAUSE_114_CNT)
				, SUM(CAUSE_263_CNT)
				, SUM(CAUSE_CAPACITY)
				, SUM(BEST_RSCP_1) AS BEST_RSCP_1
				, SUM(BEST_ECN0_1) AS BEST_ECN0_1
				, NULL #median(BEST_RSCP_1_MED)
				, NULL #median(BEST_ECN0_1_MED)
				, SUM(IRAT_HHO_ATTEMPT)
				, SUM(IRAT_HHO_SUCCESS)
				, CELL_LON,CELL_LAT
				, SUM(POS_LAST_RSCP_CNT)
				, SUM(POS_LAST_ECN0_CNT)
-- 				,SUM(CALL_STATUS_BLOCK) AS CALL_STATUS_BLOCK
-- 				,SUM(CALL_STATUS_SUCCESS) AS CALL_STATUS_SUCCESS
-- 				,SUM(CALL_STATUS_DROP) AS CALL_STATUS_DROP
-- 				,SUM(CALL_TYPE_SMS) AS CALL_TYPE_SMS
-- 				,SUM(CALL_TYPE_VOICE) AS CALL_TYPE_VOICE
-- 				,SUM(CALL_TYPE_VEDIO) AS CALL_TYPE_VEDIO
-- 				,SUM(CALL_TYPE_PS99) AS CALL_TYPE_PS99
-- 				,SUM(CALL_TYPE_HSPA) AS CALL_TYPE_HSPA
-- 				,SUM(CALL_TYPE_MRAB) AS CALL_TYPE_MRAB
-- 				,SUM(CALL_TYPE_PSOTHERS) AS CALL_TYPE_PSOTHERS
-- 				,SUM(CALL_TYPE_CS) AS CALL_TYPE_CS
-- 				,SUM(CALL_TYPE_PS) AS CALL_TYPE_PS
				,SUM(NAS_CAUSE_SM_SUM) AS NAS_CAUSE_SM_SUM
				,SUM(NAS_GPRS_MM_DETACH_SUM) AS NAS_GPRS_MM_DETACH_SUM
				FROM ',GT_DB,RUN,'.`tmp_table_tile_end_',WORKER_ID,'`
				WHERE TILE_ID IS NOT NULL
				GROUP BY 
						DATA_DATE
						, DATA_HOUR
						#, INDOOR
						#, MOVING
						, TILE_ID
						, RNC_ID
						#, CELL_INDOOR
						#, CLUSTER_ID
						#, SITE_ID
						#, FREQUENCY
						#, UARFCN
						#, CELL_ID
						#, CALL_TYPE 
						#, CALL_STATUS
				ORDER BY NULL;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_End_AGR','INSERT DATA TO table_tile_end_c_def', NOW());
	SET @SqlCmd=CONCAT('INSERT INTO  ',GT_DB,RUN,'.`table_tile_end_c_def`
				(DATA_DATE,DATA_HOUR,RNC_ID, 
				CELL_ID,CALL_CNT,CAUSE_14_CNT,CAUSE_15_CNT,CAUSE_46_CNT,CAUSE_115_CNT,CAUSE_OTHERS_CNT,
				CAUSE_53_CNT,CAUSE_65_CNT,CAUSE_114_CNT,CAUSE_263_CNT,CAUSE_CAPACITY,
				BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,IRAT_HHO_ATTEMPT,IRAT_HHO_SUCCESS, CELL_LON,CELL_LAT,POS_LAST_RSCP_CNT,POS_LAST_ECN0_CNT
-- 				,CALL_STATUS_BLOCK,CALL_STATUS_SUCCESS,CALL_STATUS_DROP,CALL_TYPE_SMS,CALL_TYPE_VOICE,CALL_TYPE_VEDIO
-- 				,CALL_TYPE_PS99,CALL_TYPE_HSPA,CALL_TYPE_MRAB,CALL_TYPE_PSOTHERS,CALL_TYPE_CS,CALL_TYPE_PS
				,NAS_CAUSE_SM_SUM,NAS_GPRS_MM_DETACH_SUM
	)
				SELECT
				 DATA_DATE
				, DATA_HOUR
				#, INDOOR
				#, MOVING
				#, TILE_ID
				, RNC_ID
				#, CELL_INDOOR
				#, CLUSTER_ID
				#, SITE_ID
				#, FREQUENCY 
				#, UARFCN 
				, CELL_ID
				#, CALL_TYPE 
				#, CALL_STATUS
				, SUM(CALL_CNT)
				, SUM(CAUSE_14_CNT)
				, SUM(CAUSE_15_CNT)
				, SUM(CAUSE_46_CNT)
				, SUM(CAUSE_115_CNT)
				, SUM(CAUSE_OTHERS_CNT)
				, SUM(CAUSE_53_CNT)
				, SUM(CAUSE_65_CNT)
				, SUM(CAUSE_114_CNT)
				, SUM(CAUSE_263_CNT)
				, SUM(CAUSE_CAPACITY)
				, SUM(BEST_RSCP_1) AS BEST_RSCP_1
				, SUM(BEST_ECN0_1) AS BEST_ECN0_1
				, NULL #median(BEST_RSCP_1_MED)
				, NULL #median(BEST_ECN0_1_MED)
				, SUM(IRAT_HHO_ATTEMPT)
				, SUM(IRAT_HHO_SUCCESS)
				, CELL_LON,CELL_LAT
				, SUM(POS_LAST_RSCP_CNT)
				, SUM(POS_LAST_ECN0_CNT)
-- 				,SUM(CALL_STATUS_BLOCK) AS CALL_STATUS_BLOCK
-- 				,SUM(CALL_STATUS_SUCCESS) AS CALL_STATUS_SUCCESS
-- 				,SUM(CALL_STATUS_DROP) AS CALL_STATUS_DROP
-- 				,SUM(CALL_TYPE_SMS) AS CALL_TYPE_SMS
-- 				,SUM(CALL_TYPE_VOICE) AS CALL_TYPE_VOICE
-- 				,SUM(CALL_TYPE_VEDIO) AS CALL_TYPE_VEDIO
-- 				,SUM(CALL_TYPE_PS99) AS CALL_TYPE_PS99
-- 				,SUM(CALL_TYPE_HSPA) AS CALL_TYPE_HSPA
-- 				,SUM(CALL_TYPE_MRAB) AS CALL_TYPE_MRAB
-- 				,SUM(CALL_TYPE_PSOTHERS) AS CALL_TYPE_PSOTHERS
-- 				,SUM(CALL_TYPE_CS) AS CALL_TYPE_CS
-- 				,SUM(CALL_TYPE_PS) AS CALL_TYPE_PS
				,SUM(NAS_CAUSE_SM_SUM) AS NAS_CAUSE_SM_SUM
				,SUM(NAS_GPRS_MM_DETACH_SUM) AS NAS_GPRS_MM_DETACH_SUM
				FROM ',GT_DB,RUN,'.`tmp_table_tile_end_',WORKER_ID,'`
				GROUP BY 
						DATA_DATE
						, DATA_HOUR
						#, INDOOR
						#, MOVING
						#, TILE_ID
						, RNC_ID
						#, CELL_INDOOR
						#, CLUSTER_ID
						#, SITE_ID
						#, FREQUENCY
						#, UARFCN
						, CELL_ID
						#, CALL_TYPE 
						#, CALL_STATUS
				ORDER BY NULL;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_End_AGR','INSERT DATA TO table_tile_end_dy', NOW());
	SET @SqlCmd=CONCAT('REPLACE INTO ',GT_DB,'.table_tile_end_dy
 		(DATA_DATE,INDOOR,MOVING,TILE_ID,RNC_ID,CELL_INDOOR,CLUSTER_ID,SITE_ID,FREQUENCY, UARFCN, 
				CELL_ID,CALL_TYPE,CALL_STATUS,CALL_CNT,CAUSE_14_CNT,CAUSE_15_CNT,CAUSE_46_CNT,CAUSE_115_CNT,CAUSE_OTHERS_CNT,
				CAUSE_53_CNT,CAUSE_65_CNT,CAUSE_114_CNT,CAUSE_263_CNT,CAUSE_CAPACITY,
				BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,IRAT_HHO_ATTEMPT,IRAT_HHO_SUCCESS, CELL_LON,CELL_LAT,POS_LAST_RSCP_CNT,POS_LAST_ECN0_CNT
-- 				,CALL_STATUS_BLOCK,CALL_STATUS_SUCCESS,CALL_STATUS_DROP,CALL_TYPE_SMS,CALL_TYPE_VOICE,CALL_TYPE_VEDIO
-- 				,CALL_TYPE_PS99,CALL_TYPE_HSPA,CALL_TYPE_MRAB,CALL_TYPE_PSOTHERS,CALL_TYPE_CS,CALL_TYPE_PS
				,NAS_CAUSE_SM_SUM,NAS_GPRS_MM_DETACH_SUM
	)
 		SELECT
			 B.DATA_DATE
			#, B.DATA_HOUR
			, B.INDOOR
			, B.MOVING
			, B.TILE_ID
			, B.RNC_ID
			, B.CELL_INDOOR
			, B.CLUSTER_ID
			, B.SITE_ID
			, B.FREQUENCY 
			, B.UARFCN 
			, B.CELL_ID
			, B.CALL_TYPE 
			, B.CALL_STATUS
 			, CASE WHEN A.CALL_CNT IS NULL AND B.CALL_CNT IS NULL THEN NULL ELSE IFNULL(A.CALL_CNT,0) + IFNULL(B.CALL_CNT,0) END AS CALL_CNT
			, CASE WHEN A.CAUSE_14_CNT IS NULL AND B.CAUSE_14_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_14_CNT,0) + IFNULL(B.CAUSE_14_CNT,0) END AS CAUSE_14_CNT
			, CASE WHEN A.CAUSE_15_CNT IS NULL AND B.CAUSE_15_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_15_CNT,0) + IFNULL(B.CAUSE_15_CNT,0) END AS CAUSE_15_CNT
			, CASE WHEN A.CAUSE_46_CNT IS NULL AND B.CAUSE_46_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_46_CNT,0) + IFNULL(B.CAUSE_46_CNT,0) END AS CAUSE_46_CNT
			, CASE WHEN A.CAUSE_115_CNT IS NULL AND B.CAUSE_115_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_115_CNT,0) + IFNULL(B.CAUSE_115_CNT,0) END AS CAUSE_115_CNT
			, CASE WHEN A.CAUSE_OTHERS_CNT IS NULL AND B.CAUSE_OTHERS_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_OTHERS_CNT,0) + IFNULL(B.CAUSE_OTHERS_CNT,0) END AS CAUSE_OTHERS_CNT
			, CASE WHEN A.CAUSE_53_CNT IS NULL AND B.CAUSE_53_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_53_CNT,0) + IFNULL(B.CAUSE_53_CNT,0) END AS CAUSE_53_CNT
			, CASE WHEN A.CAUSE_65_CNT IS NULL AND B.CAUSE_65_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_65_CNT,0) + IFNULL(B.CAUSE_65_CNT,0) END AS CAUSE_65_CNT
			, CASE WHEN A.CAUSE_114_CNT IS NULL AND B.CAUSE_114_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_114_CNT,0) + IFNULL(B.CAUSE_114_CNT,0) END AS CAUSE_114_CNT
			, CASE WHEN A.CAUSE_263_CNT IS NULL AND B.CAUSE_263_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_263_CNT,0) + IFNULL(B.CAUSE_263_CNT,0) END AS CAUSE_263_CNT
			, CASE WHEN A.CAUSE_CAPACITY IS NULL AND B.CAUSE_CAPACITY IS NULL THEN NULL ELSE IFNULL(A.CAUSE_CAPACITY,0) + IFNULL(B.CAUSE_CAPACITY,0) END AS CAUSE_CAPACITY
 			, CASE WHEN A.BEST_RSCP_1 IS NULL AND B.BEST_RSCP_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1,0) + IFNULL(B.BEST_RSCP_1,0) END AS BEST_RSCP_1
			, CASE WHEN A.BEST_ECN0_1 IS NULL AND B.BEST_ECN0_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1,0) + IFNULL(B.BEST_ECN0_1,0) END AS BEST_ECN0_1
 			, CASE WHEN A.BEST_RSCP_1_MED IS NULL THEN B.BEST_RSCP_1_MED WHEN B.BEST_RSCP_1_MED IS NULL THEN A.BEST_RSCP_1_MED ELSE (A.BEST_RSCP_1_MED + B.BEST_RSCP_1_MED)/2 END AS BEST_RSCP_1_MED
			, CASE WHEN A.BEST_ECN0_1_MED IS NULL THEN B.BEST_ECN0_1_MED WHEN B.BEST_ECN0_1_MED IS NULL THEN A.BEST_ECN0_1_MED ELSE (A.BEST_ECN0_1_MED + B.BEST_ECN0_1_MED)/2 END AS BEST_ECN0_1_MED
			, CASE WHEN A.IRAT_HHO_ATTEMPT IS NULL AND B.IRAT_HHO_ATTEMPT IS NULL THEN NULL ELSE IFNULL(A.IRAT_HHO_ATTEMPT,0) + IFNULL(B.IRAT_HHO_ATTEMPT,0) END AS IRAT_HHO_ATTEMPT
			, CASE WHEN A.IRAT_HHO_SUCCESS IS NULL AND B.IRAT_HHO_SUCCESS IS NULL THEN NULL ELSE IFNULL(A.IRAT_HHO_SUCCESS,0) + IFNULL(B.IRAT_HHO_SUCCESS,0) END AS IRAT_HHO_SUCCESS
			, B.CELL_LON,B.CELL_LAT
			, CASE WHEN A.POS_LAST_RSCP_CNT IS NULL AND B.POS_LAST_RSCP_CNT IS NULL THEN NULL ELSE IFNULL(A.POS_LAST_RSCP_CNT,0) + IFNULL(B.POS_LAST_RSCP_CNT,0) END AS POS_LAST_RSCP_CNT
			, CASE WHEN A.POS_LAST_ECN0_CNT IS NULL AND B.POS_LAST_ECN0_CNT IS NULL THEN NULL ELSE IFNULL(A.POS_LAST_ECN0_CNT,0) + IFNULL(B.POS_LAST_ECN0_CNT,0) END AS POS_LAST_ECN0_CNT
-- 			, CASE WHEN A.CALL_STATUS_BLOCK IS NULL AND B.CALL_STATUS_BLOCK IS NULL THEN NULL ELSE IFNULL(A.CALL_STATUS_BLOCK,0) + IFNULL(B.CALL_STATUS_BLOCK,0) END AS CALL_STATUS_BLOCK
-- 			, CASE WHEN A.CALL_STATUS_SUCCESS IS NULL AND B.CALL_STATUS_SUCCESS IS NULL THEN NULL ELSE IFNULL(A.CALL_STATUS_SUCCESS,0) + IFNULL(B.CALL_STATUS_SUCCESS,0) END AS CALL_STATUS_SUCCESS
-- 			, CASE WHEN A.CALL_STATUS_DROP IS NULL AND B.CALL_STATUS_DROP IS NULL THEN NULL ELSE IFNULL(A.CALL_STATUS_DROP,0) + IFNULL(B.CALL_STATUS_DROP,0) END AS CALL_STATUS_DROP
-- 			, CASE WHEN A.CALL_TYPE_SMS IS NULL AND B.CALL_TYPE_SMS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_SMS,0) + IFNULL(B.CALL_TYPE_SMS,0) END AS CALL_TYPE_SMS
-- 			, CASE WHEN A.CALL_TYPE_VOICE IS NULL AND B.CALL_TYPE_VOICE IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_VOICE,0) + IFNULL(B.CALL_TYPE_VOICE,0) END AS CALL_TYPE_VOICE
-- 			, CASE WHEN A.CALL_TYPE_VEDIO IS NULL AND B.CALL_TYPE_VEDIO IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_VEDIO,0) + IFNULL(B.CALL_TYPE_VEDIO,0) END AS CALL_TYPE_VEDIO
-- 			, CASE WHEN A.CALL_TYPE_PS99 IS NULL AND B.CALL_TYPE_PS99 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_PS99,0) + IFNULL(B.CALL_TYPE_PS99,0) END AS CALL_TYPE_PS99
-- 			, CASE WHEN A.CALL_TYPE_HSPA IS NULL AND B.CALL_TYPE_HSPA IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_HSPA,0) + IFNULL(B.CALL_TYPE_HSPA,0) END AS CALL_TYPE_HSPA
-- 			, CASE WHEN A.CALL_TYPE_MRAB IS NULL AND B.CALL_TYPE_MRAB IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_MRAB,0) + IFNULL(B.CALL_TYPE_MRAB,0) END AS CALL_TYPE_MRAB
-- 			, CASE WHEN A.CALL_TYPE_PSOTHERS IS NULL AND B.CALL_TYPE_PSOTHERS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_PSOTHERS,0) + IFNULL(B.CALL_TYPE_PSOTHERS,0) END AS CALL_TYPE_PSOTHERS
-- 			, CASE WHEN A.CALL_TYPE_CS IS NULL AND B.CALL_TYPE_CS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_CS,0) + IFNULL(B.CALL_TYPE_CS,0) END AS CALL_TYPE_CS
-- 			, CASE WHEN A.CALL_TYPE_PS IS NULL AND B.CALL_TYPE_PS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_PS,0) + IFNULL(B.CALL_TYPE_PS,0) END AS CALL_TYPE_PS
			, CASE WHEN A.NAS_CAUSE_SM_SUM IS NULL AND B.NAS_CAUSE_SM_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_CAUSE_SM_SUM,0) + IFNULL(B.NAS_CAUSE_SM_SUM,0) END AS NAS_CAUSE_SM_SUM
			, CASE WHEN A.NAS_GPRS_MM_DETACH_SUM IS NULL AND B.NAS_GPRS_MM_DETACH_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_GPRS_MM_DETACH_SUM,0) + IFNULL(B.NAS_GPRS_MM_DETACH_SUM,0) END AS NAS_GPRS_MM_DETACH_SUM
		FROM ',GT_DB,'.table_tile_end_dy a RIGHT JOIN 
		(
		 	SELECT
				 DATA_DATE AS DATA_DATE
				#, DATA_HOUR
				, INDOOR AS INDOOR
				, MOVING AS MOVING
				, TILE_ID AS TILE_ID
				, RNC_ID AS RNC_ID
				, CELL_INDOOR AS CELL_INDOOR
				, CLUSTER_ID AS CLUSTER_ID
				, SITE_ID AS SITE_ID
				, FREQUENCY AS FREQUENCY
				, UARFCN AS UARFCN
				, CELL_ID AS CELL_ID
				, CALL_TYPE AS CALL_TYPE
				, CALL_STATUS AS CALL_STATUS	
				, SUM(CALL_CNT) AS CALL_CNT
				, SUM(CAUSE_14_CNT) AS CAUSE_14_CNT
				, SUM(CAUSE_15_CNT) AS CAUSE_15_CNT
				, SUM(CAUSE_46_CNT) AS CAUSE_46_CNT
				, SUM(CAUSE_115_CNT) AS CAUSE_115_CNT
				, SUM(CAUSE_OTHERS_CNT) AS CAUSE_OTHERS_CNT
				, SUM(CAUSE_53_CNT) AS CAUSE_53_CNT
				, SUM(CAUSE_65_CNT) AS CAUSE_65_CNT
				, SUM(CAUSE_114_CNT) AS CAUSE_114_CNT
				, SUM(CAUSE_263_CNT) AS CAUSE_263_CNT
				, SUM(CAUSE_CAPACITY) AS CAUSE_CAPACITY
				, SUM(BEST_RSCP_1) AS BEST_RSCP_1
				, SUM(BEST_ECN0_1) AS BEST_ECN0_1
				, NULL AS BEST_RSCP_1_MED #median(BEST_RSCP_1_MED) AS BEST_RSCP_1_MED
				, NULL AS BEST_ECN0_1_MED #median(BEST_ECN0_1_MED) AS BEST_ECN0_1_MED
				, SUM(IRAT_HHO_ATTEMPT) AS IRAT_HHO_ATTEMPT
				, SUM(IRAT_HHO_SUCCESS) AS IRAT_HHO_SUCCESS
				, CELL_LON,CELL_LAT
				, SUM(POS_LAST_RSCP_CNT) AS POS_LAST_RSCP_CNT
				, SUM(POS_LAST_ECN0_CNT) AS POS_LAST_ECN0_CNT
-- 				,SUM(CALL_STATUS_BLOCK) AS CALL_STATUS_BLOCK
-- 				,SUM(CALL_STATUS_SUCCESS) AS CALL_STATUS_SUCCESS
-- 				,SUM(CALL_STATUS_DROP) AS CALL_STATUS_DROP
-- 				,SUM(CALL_TYPE_SMS) AS CALL_TYPE_SMS     
-- 				,SUM(CALL_TYPE_VOICE) AS CALL_TYPE_VOICE   
-- 				,SUM(CALL_TYPE_VEDIO) AS CALL_TYPE_VEDIO   
-- 				,SUM(CALL_TYPE_PS99) AS CALL_TYPE_PS99    
-- 				,SUM(CALL_TYPE_HSPA) AS CALL_TYPE_HSPA    
-- 				,SUM(CALL_TYPE_MRAB) AS CALL_TYPE_MRAB    
-- 				,SUM(CALL_TYPE_PSOTHERS) AS CALL_TYPE_PSOTHERS
-- 				,SUM(CALL_TYPE_CS) AS CALL_TYPE_CS      
-- 				,SUM(CALL_TYPE_PS) AS CALL_TYPE_PS
				,SUM(NAS_CAUSE_SM_SUM) AS NAS_CAUSE_SM_SUM
				,SUM(NAS_GPRS_MM_DETACH_SUM) AS NAS_GPRS_MM_DETACH_SUM
			FROM ',GT_DB,RUN,'.`tmp_table_tile_end_',WORKER_ID,'`
			GROUP BY 
				DATA_DATE
				#, DATA_HOUR
				, INDOOR
				, MOVING
				, TILE_ID
				, RNC_ID
-- 				, CELL_INDOOR
-- 				, CLUSTER_ID
-- 				, SITE_ID
-- 				, FREQUENCY
-- 				, UARFCN
				, CELL_ID
				, CALL_TYPE 
				, CALL_STATUS
		) B
		ON  A.DATA_DATE=B.DATA_DATE
		AND A.INDOOR=B.INDOOR
		AND A.MOVING=B.MOVING
		AND A.TILE_ID=B.TILE_ID
		AND A.RNC_ID=B.RNC_ID
-- 		AND A.CELL_INDOOR=B.CELL_INDOOR
-- 		AND A.CLUSTER_ID=B.CLUSTER_ID
-- 		AND A.SITE_ID=B.SITE_ID
-- 		AND A.FREQUENCY=B.FREQUENCY
-- 		AND A.UARFCN=B.UARFCN
		AND A.CELL_ID=B.CELL_ID
		AND A.CALL_TYPE=B.CALL_TYPE
		AND A.CALL_STATUS=B.CALL_STATUS
		;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_End_AGR','INSERT DATA TO table_tile_end_dy_t', NOW());
	SET @SqlCmd=CONCAT('REPLACE INTO ',GT_DB,'.table_tile_end_dy_t
 		(DATA_DATE,INDOOR,MOVING,TILE_ID,RNC_ID,FREQUENCY, UARFCN, 
				CALL_TYPE,CALL_STATUS,CALL_CNT,CAUSE_14_CNT,CAUSE_15_CNT,CAUSE_46_CNT,CAUSE_115_CNT,CAUSE_OTHERS_CNT,
				CAUSE_53_CNT,CAUSE_65_CNT,CAUSE_114_CNT,CAUSE_263_CNT,CAUSE_CAPACITY,
				BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,IRAT_HHO_ATTEMPT,IRAT_HHO_SUCCESS,POS_LAST_RSCP_CNT,POS_LAST_ECN0_CNT
-- 				,CALL_STATUS_BLOCK,CALL_STATUS_SUCCESS,CALL_STATUS_DROP,CALL_TYPE_SMS,CALL_TYPE_VOICE,CALL_TYPE_VEDIO
-- 				,CALL_TYPE_PS99,CALL_TYPE_HSPA,CALL_TYPE_MRAB,CALL_TYPE_PSOTHERS,CALL_TYPE_CS,CALL_TYPE_PS
				,NAS_CAUSE_SM_SUM,NAS_GPRS_MM_DETACH_SUM
	)
 		SELECT
			 B.DATA_DATE
			#, B.DATA_HOUR
			, B.INDOOR
			, B.MOVING
			, B.TILE_ID
			, B.RNC_ID
			#, B.CELL_INDOOR
			#, B.CLUSTER_ID
			#, B.SITE_ID
			, B.FREQUENCY 
			, B.UARFCN 
			#, B.CELL_ID
			, B.CALL_TYPE 
			, B.CALL_STATUS
 			, CASE WHEN A.CALL_CNT IS NULL AND B.CALL_CNT IS NULL THEN NULL ELSE IFNULL(A.CALL_CNT,0) + IFNULL(B.CALL_CNT,0) END AS CALL_CNT
			, CASE WHEN A.CAUSE_14_CNT IS NULL AND B.CAUSE_14_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_14_CNT,0) + IFNULL(B.CAUSE_14_CNT,0) END AS CAUSE_14_CNT
			, CASE WHEN A.CAUSE_15_CNT IS NULL AND B.CAUSE_15_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_15_CNT,0) + IFNULL(B.CAUSE_15_CNT,0) END AS CAUSE_15_CNT
			, CASE WHEN A.CAUSE_46_CNT IS NULL AND B.CAUSE_46_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_46_CNT,0) + IFNULL(B.CAUSE_46_CNT,0) END AS CAUSE_46_CNT
			, CASE WHEN A.CAUSE_115_CNT IS NULL AND B.CAUSE_115_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_115_CNT,0) + IFNULL(B.CAUSE_115_CNT,0) END AS CAUSE_115_CNT
			, CASE WHEN A.CAUSE_OTHERS_CNT IS NULL AND B.CAUSE_OTHERS_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_OTHERS_CNT,0) + IFNULL(B.CAUSE_OTHERS_CNT,0) END AS CAUSE_OTHERS_CNT
			, CASE WHEN A.CAUSE_53_CNT IS NULL AND B.CAUSE_53_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_53_CNT,0) + IFNULL(B.CAUSE_53_CNT,0) END AS CAUSE_53_CNT
			, CASE WHEN A.CAUSE_65_CNT IS NULL AND B.CAUSE_65_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_65_CNT,0) + IFNULL(B.CAUSE_65_CNT,0) END AS CAUSE_65_CNT
			, CASE WHEN A.CAUSE_114_CNT IS NULL AND B.CAUSE_114_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_114_CNT,0) + IFNULL(B.CAUSE_114_CNT,0) END AS CAUSE_114_CNT
			, CASE WHEN A.CAUSE_263_CNT IS NULL AND B.CAUSE_263_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_263_CNT,0) + IFNULL(B.CAUSE_263_CNT,0) END AS CAUSE_263_CNT
			, CASE WHEN A.CAUSE_CAPACITY IS NULL AND B.CAUSE_CAPACITY IS NULL THEN NULL ELSE IFNULL(A.CAUSE_CAPACITY,0) + IFNULL(B.CAUSE_CAPACITY,0) END AS CAUSE_CAPACITY
 			, CASE WHEN A.BEST_RSCP_1 IS NULL AND B.BEST_RSCP_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1,0) + IFNULL(B.BEST_RSCP_1,0) END AS BEST_RSCP_1
			, CASE WHEN A.BEST_ECN0_1 IS NULL AND B.BEST_ECN0_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1,0) + IFNULL(B.BEST_ECN0_1,0) END AS BEST_ECN0_1
 			, CASE WHEN A.BEST_RSCP_1_MED IS NULL THEN B.BEST_RSCP_1_MED WHEN B.BEST_RSCP_1_MED IS NULL THEN A.BEST_RSCP_1_MED ELSE (A.BEST_RSCP_1_MED + B.BEST_RSCP_1_MED)/2 END AS BEST_RSCP_1_MED
			, CASE WHEN A.BEST_ECN0_1_MED IS NULL THEN B.BEST_ECN0_1_MED WHEN B.BEST_ECN0_1_MED IS NULL THEN A.BEST_ECN0_1_MED ELSE (A.BEST_ECN0_1_MED + B.BEST_ECN0_1_MED)/2 END AS BEST_ECN0_1_MED
			, CASE WHEN A.IRAT_HHO_ATTEMPT IS NULL AND B.IRAT_HHO_ATTEMPT IS NULL THEN NULL ELSE IFNULL(A.IRAT_HHO_ATTEMPT,0) + IFNULL(B.IRAT_HHO_ATTEMPT,0) END AS IRAT_HHO_ATTEMPT
			, CASE WHEN A.IRAT_HHO_SUCCESS IS NULL AND B.IRAT_HHO_SUCCESS IS NULL THEN NULL ELSE IFNULL(A.IRAT_HHO_SUCCESS,0) + IFNULL(B.IRAT_HHO_SUCCESS,0) END AS IRAT_HHO_SUCCESS
			, CASE WHEN A.POS_LAST_RSCP_CNT IS NULL AND B.POS_LAST_RSCP_CNT IS NULL THEN NULL ELSE IFNULL(A.POS_LAST_RSCP_CNT,0) + IFNULL(B.POS_LAST_RSCP_CNT,0) END AS POS_LAST_RSCP_CNT
			, CASE WHEN A.POS_LAST_ECN0_CNT IS NULL AND B.POS_LAST_ECN0_CNT IS NULL THEN NULL ELSE IFNULL(A.POS_LAST_ECN0_CNT,0) + IFNULL(B.POS_LAST_ECN0_CNT,0) END AS POS_LAST_ECN0_CNT
-- 			, CASE WHEN A.CALL_STATUS_BLOCK IS NULL AND B.CALL_STATUS_BLOCK IS NULL THEN NULL ELSE IFNULL(A.CALL_STATUS_BLOCK,0) + IFNULL(B.CALL_STATUS_BLOCK,0) END AS CALL_STATUS_BLOCK
-- 			, CASE WHEN A.CALL_STATUS_SUCCESS IS NULL AND B.CALL_STATUS_SUCCESS IS NULL THEN NULL ELSE IFNULL(A.CALL_STATUS_SUCCESS,0) + IFNULL(B.CALL_STATUS_SUCCESS,0) END AS CALL_STATUS_SUCCESS
-- 			, CASE WHEN A.CALL_STATUS_DROP IS NULL AND B.CALL_STATUS_DROP IS NULL THEN NULL ELSE IFNULL(A.CALL_STATUS_DROP,0) + IFNULL(B.CALL_STATUS_DROP,0) END AS CALL_STATUS_DROP
-- 			, CASE WHEN A.CALL_TYPE_SMS IS NULL AND B.CALL_TYPE_SMS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_SMS,0) + IFNULL(B.CALL_TYPE_SMS,0) END AS CALL_TYPE_SMS
-- 			, CASE WHEN A.CALL_TYPE_VOICE IS NULL AND B.CALL_TYPE_VOICE IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_VOICE,0) + IFNULL(B.CALL_TYPE_VOICE,0) END AS CALL_TYPE_VOICE
-- 			, CASE WHEN A.CALL_TYPE_VEDIO IS NULL AND B.CALL_TYPE_VEDIO IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_VEDIO,0) + IFNULL(B.CALL_TYPE_VEDIO,0) END AS CALL_TYPE_VEDIO
-- 			, CASE WHEN A.CALL_TYPE_PS99 IS NULL AND B.CALL_TYPE_PS99 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_PS99,0) + IFNULL(B.CALL_TYPE_PS99,0) END AS CALL_TYPE_PS99
-- 			, CASE WHEN A.CALL_TYPE_HSPA IS NULL AND B.CALL_TYPE_HSPA IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_HSPA,0) + IFNULL(B.CALL_TYPE_HSPA,0) END AS CALL_TYPE_HSPA
-- 			, CASE WHEN A.CALL_TYPE_MRAB IS NULL AND B.CALL_TYPE_MRAB IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_MRAB,0) + IFNULL(B.CALL_TYPE_MRAB,0) END AS CALL_TYPE_MRAB
-- 			, CASE WHEN A.CALL_TYPE_PSOTHERS IS NULL AND B.CALL_TYPE_PSOTHERS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_PSOTHERS,0) + IFNULL(B.CALL_TYPE_PSOTHERS,0) END AS CALL_TYPE_PSOTHERS
-- 			, CASE WHEN A.CALL_TYPE_CS IS NULL AND B.CALL_TYPE_CS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_CS,0) + IFNULL(B.CALL_TYPE_CS,0) END AS CALL_TYPE_CS
-- 			, CASE WHEN A.CALL_TYPE_PS IS NULL AND B.CALL_TYPE_PS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_PS,0) + IFNULL(B.CALL_TYPE_PS,0) END AS CALL_TYPE_PS
			, CASE WHEN A.NAS_CAUSE_SM_SUM IS NULL AND B.NAS_CAUSE_SM_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_CAUSE_SM_SUM,0) + IFNULL(B.NAS_CAUSE_SM_SUM,0) END AS NAS_CAUSE_SM_SUM
			, CASE WHEN A.NAS_GPRS_MM_DETACH_SUM IS NULL AND B.NAS_GPRS_MM_DETACH_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_GPRS_MM_DETACH_SUM,0) + IFNULL(B.NAS_GPRS_MM_DETACH_SUM,0) END AS NAS_GPRS_MM_DETACH_SUM
		FROM ',GT_DB,'.table_tile_end_dy_t a RIGHT JOIN 
		(
		 	SELECT
				 DATA_DATE AS DATA_DATE
				#, DATA_HOUR
				, INDOOR AS INDOOR
				, MOVING AS MOVING
				, TILE_ID AS TILE_ID
				, RNC_ID AS RNC_ID
				#, CELL_INDOOR AS CELL_INDOOR
				#, CLUSTER_ID AS CLUSTER_ID
				#, SITE_ID AS SITE_ID
				, FREQUENCY AS FREQUENCY
				, UARFCN AS UARFCN
				#, CELL_ID AS CELL_ID
				, CALL_TYPE AS CALL_TYPE
				, CALL_STATUS AS CALL_STATUS	
				, SUM(CALL_CNT) AS CALL_CNT
				, SUM(CAUSE_14_CNT) AS CAUSE_14_CNT
				, SUM(CAUSE_15_CNT) AS CAUSE_15_CNT
				, SUM(CAUSE_46_CNT) AS CAUSE_46_CNT
				, SUM(CAUSE_115_CNT) AS CAUSE_115_CNT
				, SUM(CAUSE_OTHERS_CNT) AS CAUSE_OTHERS_CNT
				, SUM(CAUSE_53_CNT) AS CAUSE_53_CNT
				, SUM(CAUSE_65_CNT) AS CAUSE_65_CNT
				, SUM(CAUSE_114_CNT) AS CAUSE_114_CNT
				, SUM(CAUSE_263_CNT) AS CAUSE_263_CNT
				, SUM(CAUSE_CAPACITY) AS CAUSE_CAPACITY
				, SUM(BEST_RSCP_1) AS BEST_RSCP_1
				, SUM(BEST_ECN0_1) AS BEST_ECN0_1
				, NULL AS BEST_RSCP_1_MED #median(BEST_RSCP_1_MED) AS BEST_RSCP_1_MED
				, NULL AS BEST_ECN0_1_MED #median(BEST_ECN0_1_MED) AS BEST_ECN0_1_MED
				, SUM(IRAT_HHO_ATTEMPT) AS IRAT_HHO_ATTEMPT
				, SUM(IRAT_HHO_SUCCESS) AS IRAT_HHO_SUCCESS
				, SUM(POS_LAST_RSCP_CNT) AS POS_LAST_RSCP_CNT
				, SUM(POS_LAST_ECN0_CNT) AS POS_LAST_ECN0_CNT
-- 				,SUM(CALL_STATUS_BLOCK) AS CALL_STATUS_BLOCK
-- 				,SUM(CALL_STATUS_SUCCESS) AS CALL_STATUS_SUCCESS
-- 				,SUM(CALL_STATUS_DROP) AS CALL_STATUS_DROP
-- 				,SUM(CALL_TYPE_SMS) AS CALL_TYPE_SMS     
-- 				,SUM(CALL_TYPE_VOICE) AS CALL_TYPE_VOICE   
-- 				,SUM(CALL_TYPE_VEDIO) AS CALL_TYPE_VEDIO   
-- 				,SUM(CALL_TYPE_PS99) AS CALL_TYPE_PS99    
-- 				,SUM(CALL_TYPE_HSPA) AS CALL_TYPE_HSPA    
-- 				,SUM(CALL_TYPE_MRAB) AS CALL_TYPE_MRAB    
-- 				,SUM(CALL_TYPE_PSOTHERS) AS CALL_TYPE_PSOTHERS
-- 				,SUM(CALL_TYPE_CS) AS CALL_TYPE_CS      
-- 				,SUM(CALL_TYPE_PS) AS CALL_TYPE_PS
				,SUM(NAS_CAUSE_SM_SUM) AS NAS_CAUSE_SM_SUM
				,SUM(NAS_GPRS_MM_DETACH_SUM) AS NAS_GPRS_MM_DETACH_SUM
			FROM ',GT_DB,RUN,'.`tmp_table_tile_end_',WORKER_ID,'`
			WHERE TILE_ID IS NOT NULL	
			GROUP BY 
				DATA_DATE
				#, DATA_HOUR
				, INDOOR
				, MOVING
				, TILE_ID
				, RNC_ID
				#, CELL_INDOOR
				#, CLUSTER_ID
				#, SITE_ID
-- 				, FREQUENCY
-- 				, UARFCN
				#, CELL_ID
				, CALL_TYPE 
				, CALL_STATUS
		) B
		ON  A.DATA_DATE=B.DATA_DATE
		AND A.INDOOR=B.INDOOR
		AND A.MOVING=B.MOVING
		AND A.TILE_ID=B.TILE_ID
		AND A.RNC_ID=B.RNC_ID
		#AND A.CELL_INDOOR=B.CELL_INDOOR
		#AND A.CLUSTER_ID=B.CLUSTER_ID
		#AND A.SITE_ID=B.SITE_ID
-- 		AND A.FREQUENCY=B.FREQUENCY
-- 		AND A.UARFCN=B.UARFCN
		#AND A.CELL_ID=B.CELL_ID
		AND A.CALL_TYPE=B.CALL_TYPE
		AND A.CALL_STATUS=B.CALL_STATUS
		;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_End_AGR','INSERT DATA TO table_tile_end_dy_c', NOW());
	SET @SqlCmd=CONCAT('REPLACE INTO ',GT_DB,'.table_tile_end_dy_c
 		(DATA_DATE,INDOOR,MOVING,RNC_ID,CELL_INDOOR,CLUSTER_ID,SITE_ID,FREQUENCY, UARFCN, 
				CELL_ID,CALL_TYPE,CALL_STATUS,CALL_CNT,CAUSE_14_CNT,CAUSE_15_CNT,CAUSE_46_CNT,CAUSE_115_CNT,CAUSE_OTHERS_CNT,
				CAUSE_53_CNT,CAUSE_65_CNT,CAUSE_114_CNT,CAUSE_263_CNT,CAUSE_CAPACITY,
				BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,IRAT_HHO_ATTEMPT,IRAT_HHO_SUCCESS, CELL_LON,CELL_LAT,POS_LAST_RSCP_CNT,POS_LAST_ECN0_CNT
-- 				,CALL_STATUS_BLOCK,CALL_STATUS_SUCCESS,CALL_STATUS_DROP,CALL_TYPE_SMS,CALL_TYPE_VOICE,CALL_TYPE_VEDIO
-- 				,CALL_TYPE_PS99,CALL_TYPE_HSPA,CALL_TYPE_MRAB,CALL_TYPE_PSOTHERS,CALL_TYPE_CS,CALL_TYPE_PS
				,NAS_CAUSE_SM_SUM,NAS_GPRS_MM_DETACH_SUM
	)
 		SELECT
			 B.DATA_DATE
			#, B.DATA_HOUR
			, B.INDOOR
			, B.MOVING
			#, B.TILE_ID
			, B.RNC_ID
			, B.CELL_INDOOR
			, B.CLUSTER_ID
			, B.SITE_ID
			, B.FREQUENCY 
			, B.UARFCN 
			, B.CELL_ID
			, B.CALL_TYPE 
			, B.CALL_STATUS
 			, CASE WHEN A.CALL_CNT IS NULL AND B.CALL_CNT IS NULL THEN NULL ELSE IFNULL(A.CALL_CNT,0) + IFNULL(B.CALL_CNT,0) END AS CALL_CNT
			, CASE WHEN A.CAUSE_14_CNT IS NULL AND B.CAUSE_14_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_14_CNT,0) + IFNULL(B.CAUSE_14_CNT,0) END AS CAUSE_14_CNT
			, CASE WHEN A.CAUSE_15_CNT IS NULL AND B.CAUSE_15_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_15_CNT,0) + IFNULL(B.CAUSE_15_CNT,0) END AS CAUSE_15_CNT
			, CASE WHEN A.CAUSE_46_CNT IS NULL AND B.CAUSE_46_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_46_CNT,0) + IFNULL(B.CAUSE_46_CNT,0) END AS CAUSE_46_CNT
			, CASE WHEN A.CAUSE_115_CNT IS NULL AND B.CAUSE_115_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_115_CNT,0) + IFNULL(B.CAUSE_115_CNT,0) END AS CAUSE_115_CNT
			, CASE WHEN A.CAUSE_OTHERS_CNT IS NULL AND B.CAUSE_OTHERS_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_OTHERS_CNT,0) + IFNULL(B.CAUSE_OTHERS_CNT,0) END AS CAUSE_OTHERS_CNT
			, CASE WHEN A.CAUSE_53_CNT IS NULL AND B.CAUSE_53_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_53_CNT,0) + IFNULL(B.CAUSE_53_CNT,0) END AS CAUSE_53_CNT
			, CASE WHEN A.CAUSE_65_CNT IS NULL AND B.CAUSE_65_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_65_CNT,0) + IFNULL(B.CAUSE_65_CNT,0) END AS CAUSE_65_CNT
			, CASE WHEN A.CAUSE_114_CNT IS NULL AND B.CAUSE_114_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_114_CNT,0) + IFNULL(B.CAUSE_114_CNT,0) END AS CAUSE_114_CNT
			, CASE WHEN A.CAUSE_263_CNT IS NULL AND B.CAUSE_263_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_263_CNT,0) + IFNULL(B.CAUSE_263_CNT,0) END AS CAUSE_263_CNT
			, CASE WHEN A.CAUSE_CAPACITY IS NULL AND B.CAUSE_CAPACITY IS NULL THEN NULL ELSE IFNULL(A.CAUSE_CAPACITY,0) + IFNULL(B.CAUSE_CAPACITY,0) END AS CAUSE_CAPACITY
 			, CASE WHEN A.BEST_RSCP_1 IS NULL AND B.BEST_RSCP_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1,0) + IFNULL(B.BEST_RSCP_1,0) END AS BEST_RSCP_1
			, CASE WHEN A.BEST_ECN0_1 IS NULL AND B.BEST_ECN0_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1,0) + IFNULL(B.BEST_ECN0_1,0) END AS BEST_ECN0_1
 			, CASE WHEN A.BEST_RSCP_1_MED IS NULL THEN B.BEST_RSCP_1_MED WHEN B.BEST_RSCP_1_MED IS NULL THEN A.BEST_RSCP_1_MED ELSE (A.BEST_RSCP_1_MED + B.BEST_RSCP_1_MED)/2 END AS BEST_RSCP_1_MED
			, CASE WHEN A.BEST_ECN0_1_MED IS NULL THEN B.BEST_ECN0_1_MED WHEN B.BEST_ECN0_1_MED IS NULL THEN A.BEST_ECN0_1_MED ELSE (A.BEST_ECN0_1_MED + B.BEST_ECN0_1_MED)/2 END AS BEST_ECN0_1_MED
			, CASE WHEN A.IRAT_HHO_ATTEMPT IS NULL AND B.IRAT_HHO_ATTEMPT IS NULL THEN NULL ELSE IFNULL(A.IRAT_HHO_ATTEMPT,0) + IFNULL(B.IRAT_HHO_ATTEMPT,0) END AS IRAT_HHO_ATTEMPT
			, CASE WHEN A.IRAT_HHO_SUCCESS IS NULL AND B.IRAT_HHO_SUCCESS IS NULL THEN NULL ELSE IFNULL(A.IRAT_HHO_SUCCESS,0) + IFNULL(B.IRAT_HHO_SUCCESS,0) END AS IRAT_HHO_SUCCESS
			, B.CELL_LON,B.CELL_LAT
			, CASE WHEN A.POS_LAST_RSCP_CNT IS NULL AND B.POS_LAST_RSCP_CNT IS NULL THEN NULL ELSE IFNULL(A.POS_LAST_RSCP_CNT,0) + IFNULL(B.POS_LAST_RSCP_CNT,0) END AS POS_LAST_RSCP_CNT
			, CASE WHEN A.POS_LAST_ECN0_CNT IS NULL AND B.POS_LAST_ECN0_CNT IS NULL THEN NULL ELSE IFNULL(A.POS_LAST_ECN0_CNT,0) + IFNULL(B.POS_LAST_ECN0_CNT,0) END AS POS_LAST_ECN0_CNT
-- 			, CASE WHEN A.CALL_STATUS_BLOCK IS NULL AND B.CALL_STATUS_BLOCK IS NULL THEN NULL ELSE IFNULL(A.CALL_STATUS_BLOCK,0) + IFNULL(B.CALL_STATUS_BLOCK,0) END AS CALL_STATUS_BLOCK
-- 			, CASE WHEN A.CALL_STATUS_SUCCESS IS NULL AND B.CALL_STATUS_SUCCESS IS NULL THEN NULL ELSE IFNULL(A.CALL_STATUS_SUCCESS,0) + IFNULL(B.CALL_STATUS_SUCCESS,0) END AS CALL_STATUS_SUCCESS
-- 			, CASE WHEN A.CALL_STATUS_DROP IS NULL AND B.CALL_STATUS_DROP IS NULL THEN NULL ELSE IFNULL(A.CALL_STATUS_DROP,0) + IFNULL(B.CALL_STATUS_DROP,0) END AS CALL_STATUS_DROP
-- 			, CASE WHEN A.CALL_TYPE_SMS IS NULL AND B.CALL_TYPE_SMS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_SMS,0) + IFNULL(B.CALL_TYPE_SMS,0) END AS CALL_TYPE_SMS
-- 			, CASE WHEN A.CALL_TYPE_VOICE IS NULL AND B.CALL_TYPE_VOICE IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_VOICE,0) + IFNULL(B.CALL_TYPE_VOICE,0) END AS CALL_TYPE_VOICE
-- 			, CASE WHEN A.CALL_TYPE_VEDIO IS NULL AND B.CALL_TYPE_VEDIO IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_VEDIO,0) + IFNULL(B.CALL_TYPE_VEDIO,0) END AS CALL_TYPE_VEDIO
-- 			, CASE WHEN A.CALL_TYPE_PS99 IS NULL AND B.CALL_TYPE_PS99 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_PS99,0) + IFNULL(B.CALL_TYPE_PS99,0) END AS CALL_TYPE_PS99
-- 			, CASE WHEN A.CALL_TYPE_HSPA IS NULL AND B.CALL_TYPE_HSPA IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_HSPA,0) + IFNULL(B.CALL_TYPE_HSPA,0) END AS CALL_TYPE_HSPA
-- 			, CASE WHEN A.CALL_TYPE_MRAB IS NULL AND B.CALL_TYPE_MRAB IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_MRAB,0) + IFNULL(B.CALL_TYPE_MRAB,0) END AS CALL_TYPE_MRAB
-- 			, CASE WHEN A.CALL_TYPE_PSOTHERS IS NULL AND B.CALL_TYPE_PSOTHERS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_PSOTHERS,0) + IFNULL(B.CALL_TYPE_PSOTHERS,0) END AS CALL_TYPE_PSOTHERS
-- 			, CASE WHEN A.CALL_TYPE_CS IS NULL AND B.CALL_TYPE_CS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_CS,0) + IFNULL(B.CALL_TYPE_CS,0) END AS CALL_TYPE_CS
-- 			, CASE WHEN A.CALL_TYPE_PS IS NULL AND B.CALL_TYPE_PS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_PS,0) + IFNULL(B.CALL_TYPE_PS,0) END AS CALL_TYPE_PS
			, CASE WHEN A.NAS_CAUSE_SM_SUM IS NULL AND B.NAS_CAUSE_SM_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_CAUSE_SM_SUM,0) + IFNULL(B.NAS_CAUSE_SM_SUM,0) END AS NAS_CAUSE_SM_SUM
			, CASE WHEN A.NAS_GPRS_MM_DETACH_SUM IS NULL AND B.NAS_GPRS_MM_DETACH_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_GPRS_MM_DETACH_SUM,0) + IFNULL(B.NAS_GPRS_MM_DETACH_SUM,0) END AS NAS_GPRS_MM_DETACH_SUM
		FROM ',GT_DB,'.table_tile_end_dy_c a RIGHT JOIN 
		(
		 	SELECT
				 DATA_DATE AS DATA_DATE
				#, DATA_HOUR
				, INDOOR AS INDOOR
				, MOVING AS MOVING
				#, TILE_ID AS TILE_ID
				, RNC_ID AS RNC_ID
				, CELL_INDOOR AS CELL_INDOOR
				, CLUSTER_ID AS CLUSTER_ID
				, SITE_ID AS SITE_ID
				, FREQUENCY AS FREQUENCY
				, UARFCN AS UARFCN
				, CELL_ID AS CELL_ID
				, CALL_TYPE AS CALL_TYPE
				, CALL_STATUS AS CALL_STATUS	
				, SUM(CALL_CNT) AS CALL_CNT
				, SUM(CAUSE_14_CNT) AS CAUSE_14_CNT
				, SUM(CAUSE_15_CNT) AS CAUSE_15_CNT
				, SUM(CAUSE_46_CNT) AS CAUSE_46_CNT
				, SUM(CAUSE_115_CNT) AS CAUSE_115_CNT
				, SUM(CAUSE_OTHERS_CNT) AS CAUSE_OTHERS_CNT
				, SUM(CAUSE_53_CNT) AS CAUSE_53_CNT
				, SUM(CAUSE_65_CNT) AS CAUSE_65_CNT
				, SUM(CAUSE_114_CNT) AS CAUSE_114_CNT
				, SUM(CAUSE_263_CNT) AS CAUSE_263_CNT
				, SUM(CAUSE_CAPACITY) AS CAUSE_CAPACITY
				, SUM(BEST_RSCP_1) AS BEST_RSCP_1
				, SUM(BEST_ECN0_1) AS BEST_ECN0_1
				, NULL AS BEST_RSCP_1_MED #median(BEST_RSCP_1_MED) AS BEST_RSCP_1_MED
				, NULL AS BEST_ECN0_1_MED #median(BEST_ECN0_1_MED) AS BEST_ECN0_1_MED
				, SUM(IRAT_HHO_ATTEMPT) AS IRAT_HHO_ATTEMPT
				, SUM(IRAT_HHO_SUCCESS) AS IRAT_HHO_SUCCESS
				, CELL_LON,CELL_LAT
				, SUM(POS_LAST_RSCP_CNT) AS POS_LAST_RSCP_CNT
				, SUM(POS_LAST_ECN0_CNT) AS POS_LAST_ECN0_CNT
-- 				,SUM(CALL_STATUS_BLOCK) AS CALL_STATUS_BLOCK
-- 				,SUM(CALL_STATUS_SUCCESS) AS CALL_STATUS_SUCCESS
-- 				,SUM(CALL_STATUS_DROP) AS CALL_STATUS_DROP
-- 				,SUM(CALL_TYPE_SMS) AS CALL_TYPE_SMS     
-- 				,SUM(CALL_TYPE_VOICE) AS CALL_TYPE_VOICE   
-- 				,SUM(CALL_TYPE_VEDIO) AS CALL_TYPE_VEDIO   
-- 				,SUM(CALL_TYPE_PS99) AS CALL_TYPE_PS99    
-- 				,SUM(CALL_TYPE_HSPA) AS CALL_TYPE_HSPA    
-- 				,SUM(CALL_TYPE_MRAB) AS CALL_TYPE_MRAB    
-- 				,SUM(CALL_TYPE_PSOTHERS) AS CALL_TYPE_PSOTHERS
-- 				,SUM(CALL_TYPE_CS) AS CALL_TYPE_CS      
-- 				,SUM(CALL_TYPE_PS) AS CALL_TYPE_PS
				,SUM(NAS_CAUSE_SM_SUM) AS NAS_CAUSE_SM_SUM
				,SUM(NAS_GPRS_MM_DETACH_SUM) AS NAS_GPRS_MM_DETACH_SUM
			FROM ',GT_DB,RUN,'.`tmp_table_tile_end_',WORKER_ID,'`
			GROUP BY 
				DATA_DATE
				#, DATA_HOUR
				, INDOOR
				, MOVING
				#, TILE_ID
				, RNC_ID
-- 				, CELL_INDOOR
-- 				, CLUSTER_ID
-- 				, SITE_ID
-- 				, FREQUENCY
-- 				, UARFCN
				, CELL_ID
				, CALL_TYPE 
				, CALL_STATUS
		) B
		ON  A.DATA_DATE=B.DATA_DATE
		AND A.INDOOR=B.INDOOR
		AND A.MOVING=B.MOVING
		#AND A.TILE_ID=B.TILE_ID
		AND A.RNC_ID=B.RNC_ID
-- 		AND A.CELL_INDOOR=B.CELL_INDOOR
-- 		AND A.CLUSTER_ID=B.CLUSTER_ID
-- 		AND A.SITE_ID=B.SITE_ID
-- 		AND A.FREQUENCY=B.FREQUENCY
-- 		AND A.UARFCN=B.UARFCN
		AND A.CELL_ID=B.CELL_ID
		AND A.CALL_TYPE=B.CALL_TYPE
		AND A.CALL_STATUS=B.CALL_STATUS
		;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_End_AGR','INSERT DATA TO table_tile_end_dy_def', NOW());
	SET @SqlCmd=CONCAT('REPLACE INTO ',GT_DB,'.table_tile_end_dy_def
 		(DATA_DATE,TILE_ID,RNC_ID,
				CELL_ID,CALL_CNT,CAUSE_14_CNT,CAUSE_15_CNT,CAUSE_46_CNT,CAUSE_115_CNT,CAUSE_OTHERS_CNT,
				CAUSE_53_CNT,CAUSE_65_CNT,CAUSE_114_CNT,CAUSE_263_CNT,CAUSE_CAPACITY,
				BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,IRAT_HHO_ATTEMPT,IRAT_HHO_SUCCESS, CELL_LON,CELL_LAT,POS_LAST_RSCP_CNT,POS_LAST_ECN0_CNT
-- 				,CALL_STATUS_BLOCK,CALL_STATUS_SUCCESS,CALL_STATUS_DROP,CALL_TYPE_SMS,CALL_TYPE_VOICE,CALL_TYPE_VEDIO
-- 				,CALL_TYPE_PS99,CALL_TYPE_HSPA,CALL_TYPE_MRAB,CALL_TYPE_PSOTHERS,CALL_TYPE_CS,CALL_TYPE_PS
				,NAS_CAUSE_SM_SUM,NAS_GPRS_MM_DETACH_SUM
	)
 		SELECT
			 B.DATA_DATE
			#, B.DATA_HOUR
			#, B.INDOOR
			#, B.MOVING
			, B.TILE_ID
			, B.RNC_ID
			#, B.CELL_INDOOR
			#, B.CLUSTER_ID
			#, B.SITE_ID
			#, B.FREQUENCY 
			#, B.UARFCN 
			, B.CELL_ID
			#, B.CALL_TYPE 
			#, B.CALL_STATUS
 			, CASE WHEN A.CALL_CNT IS NULL AND B.CALL_CNT IS NULL THEN NULL ELSE IFNULL(A.CALL_CNT,0) + IFNULL(B.CALL_CNT,0) END AS CALL_CNT
			, CASE WHEN A.CAUSE_14_CNT IS NULL AND B.CAUSE_14_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_14_CNT,0) + IFNULL(B.CAUSE_14_CNT,0) END AS CAUSE_14_CNT
			, CASE WHEN A.CAUSE_15_CNT IS NULL AND B.CAUSE_15_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_15_CNT,0) + IFNULL(B.CAUSE_15_CNT,0) END AS CAUSE_15_CNT
			, CASE WHEN A.CAUSE_46_CNT IS NULL AND B.CAUSE_46_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_46_CNT,0) + IFNULL(B.CAUSE_46_CNT,0) END AS CAUSE_46_CNT
			, CASE WHEN A.CAUSE_115_CNT IS NULL AND B.CAUSE_115_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_115_CNT,0) + IFNULL(B.CAUSE_115_CNT,0) END AS CAUSE_115_CNT
			, CASE WHEN A.CAUSE_OTHERS_CNT IS NULL AND B.CAUSE_OTHERS_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_OTHERS_CNT,0) + IFNULL(B.CAUSE_OTHERS_CNT,0) END AS CAUSE_OTHERS_CNT
			, CASE WHEN A.CAUSE_53_CNT IS NULL AND B.CAUSE_53_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_53_CNT,0) + IFNULL(B.CAUSE_53_CNT,0) END AS CAUSE_53_CNT
			, CASE WHEN A.CAUSE_65_CNT IS NULL AND B.CAUSE_65_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_65_CNT,0) + IFNULL(B.CAUSE_65_CNT,0) END AS CAUSE_65_CNT
			, CASE WHEN A.CAUSE_114_CNT IS NULL AND B.CAUSE_114_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_114_CNT,0) + IFNULL(B.CAUSE_114_CNT,0) END AS CAUSE_114_CNT
			, CASE WHEN A.CAUSE_263_CNT IS NULL AND B.CAUSE_263_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_263_CNT,0) + IFNULL(B.CAUSE_263_CNT,0) END AS CAUSE_263_CNT
			, CASE WHEN A.CAUSE_CAPACITY IS NULL AND B.CAUSE_CAPACITY IS NULL THEN NULL ELSE IFNULL(A.CAUSE_CAPACITY,0) + IFNULL(B.CAUSE_CAPACITY,0) END AS CAUSE_CAPACITY
 			, CASE WHEN A.BEST_RSCP_1 IS NULL AND B.BEST_RSCP_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1,0) + IFNULL(B.BEST_RSCP_1,0) END AS BEST_RSCP_1
			, CASE WHEN A.BEST_ECN0_1 IS NULL AND B.BEST_ECN0_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1,0) + IFNULL(B.BEST_ECN0_1,0) END AS BEST_ECN0_1
 			, CASE WHEN A.BEST_RSCP_1_MED IS NULL THEN B.BEST_RSCP_1_MED WHEN B.BEST_RSCP_1_MED IS NULL THEN A.BEST_RSCP_1_MED ELSE (A.BEST_RSCP_1_MED + B.BEST_RSCP_1_MED)/2 END AS BEST_RSCP_1_MED
			, CASE WHEN A.BEST_ECN0_1_MED IS NULL THEN B.BEST_ECN0_1_MED WHEN B.BEST_ECN0_1_MED IS NULL THEN A.BEST_ECN0_1_MED ELSE (A.BEST_ECN0_1_MED + B.BEST_ECN0_1_MED)/2 END AS BEST_ECN0_1_MED
			, CASE WHEN A.IRAT_HHO_ATTEMPT IS NULL AND B.IRAT_HHO_ATTEMPT IS NULL THEN NULL ELSE IFNULL(A.IRAT_HHO_ATTEMPT,0) + IFNULL(B.IRAT_HHO_ATTEMPT,0) END AS IRAT_HHO_ATTEMPT
			, CASE WHEN A.IRAT_HHO_SUCCESS IS NULL AND B.IRAT_HHO_SUCCESS IS NULL THEN NULL ELSE IFNULL(A.IRAT_HHO_SUCCESS,0) + IFNULL(B.IRAT_HHO_SUCCESS,0) END AS IRAT_HHO_SUCCESS
			, B.CELL_LON,B.CELL_LAT
			, CASE WHEN A.POS_LAST_RSCP_CNT IS NULL AND B.POS_LAST_RSCP_CNT IS NULL THEN NULL ELSE IFNULL(A.POS_LAST_RSCP_CNT,0) + IFNULL(B.POS_LAST_RSCP_CNT,0) END AS POS_LAST_RSCP_CNT
			, CASE WHEN A.POS_LAST_ECN0_CNT IS NULL AND B.POS_LAST_ECN0_CNT IS NULL THEN NULL ELSE IFNULL(A.POS_LAST_ECN0_CNT,0) + IFNULL(B.POS_LAST_ECN0_CNT,0) END AS POS_LAST_ECN0_CNT
-- 			, CASE WHEN A.CALL_STATUS_BLOCK IS NULL AND B.CALL_STATUS_BLOCK IS NULL THEN NULL ELSE IFNULL(A.CALL_STATUS_BLOCK,0) + IFNULL(B.CALL_STATUS_BLOCK,0) END AS CALL_STATUS_BLOCK
-- 			, CASE WHEN A.CALL_STATUS_SUCCESS IS NULL AND B.CALL_STATUS_SUCCESS IS NULL THEN NULL ELSE IFNULL(A.CALL_STATUS_SUCCESS,0) + IFNULL(B.CALL_STATUS_SUCCESS,0) END AS CALL_STATUS_SUCCESS
-- 			, CASE WHEN A.CALL_STATUS_DROP IS NULL AND B.CALL_STATUS_DROP IS NULL THEN NULL ELSE IFNULL(A.CALL_STATUS_DROP,0) + IFNULL(B.CALL_STATUS_DROP,0) END AS CALL_STATUS_DROP
-- 			, CASE WHEN A.CALL_TYPE_SMS IS NULL AND B.CALL_TYPE_SMS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_SMS,0) + IFNULL(B.CALL_TYPE_SMS,0) END AS CALL_TYPE_SMS
-- 			, CASE WHEN A.CALL_TYPE_VOICE IS NULL AND B.CALL_TYPE_VOICE IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_VOICE,0) + IFNULL(B.CALL_TYPE_VOICE,0) END AS CALL_TYPE_VOICE
-- 			, CASE WHEN A.CALL_TYPE_VEDIO IS NULL AND B.CALL_TYPE_VEDIO IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_VEDIO,0) + IFNULL(B.CALL_TYPE_VEDIO,0) END AS CALL_TYPE_VEDIO
-- 			, CASE WHEN A.CALL_TYPE_PS99 IS NULL AND B.CALL_TYPE_PS99 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_PS99,0) + IFNULL(B.CALL_TYPE_PS99,0) END AS CALL_TYPE_PS99
-- 			, CASE WHEN A.CALL_TYPE_HSPA IS NULL AND B.CALL_TYPE_HSPA IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_HSPA,0) + IFNULL(B.CALL_TYPE_HSPA,0) END AS CALL_TYPE_HSPA
-- 			, CASE WHEN A.CALL_TYPE_MRAB IS NULL AND B.CALL_TYPE_MRAB IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_MRAB,0) + IFNULL(B.CALL_TYPE_MRAB,0) END AS CALL_TYPE_MRAB
-- 			, CASE WHEN A.CALL_TYPE_PSOTHERS IS NULL AND B.CALL_TYPE_PSOTHERS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_PSOTHERS,0) + IFNULL(B.CALL_TYPE_PSOTHERS,0) END AS CALL_TYPE_PSOTHERS
-- 			, CASE WHEN A.CALL_TYPE_CS IS NULL AND B.CALL_TYPE_CS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_CS,0) + IFNULL(B.CALL_TYPE_CS,0) END AS CALL_TYPE_CS
-- 			, CASE WHEN A.CALL_TYPE_PS IS NULL AND B.CALL_TYPE_PS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_PS,0) + IFNULL(B.CALL_TYPE_PS,0) END AS CALL_TYPE_PS
			, CASE WHEN A.NAS_CAUSE_SM_SUM IS NULL AND B.NAS_CAUSE_SM_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_CAUSE_SM_SUM,0) + IFNULL(B.NAS_CAUSE_SM_SUM,0) END AS NAS_CAUSE_SM_SUM
			, CASE WHEN A.NAS_GPRS_MM_DETACH_SUM IS NULL AND B.NAS_GPRS_MM_DETACH_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_GPRS_MM_DETACH_SUM,0) + IFNULL(B.NAS_GPRS_MM_DETACH_SUM,0) END AS NAS_GPRS_MM_DETACH_SUM
		FROM ',GT_DB,'.table_tile_end_dy_def a RIGHT JOIN 
		(
		 	SELECT
				 DATA_DATE AS DATA_DATE
				#, DATA_HOUR
				#, INDOOR AS INDOOR
				#, MOVING AS MOVING
				, TILE_ID AS TILE_ID
				, RNC_ID AS RNC_ID
				#, CELL_INDOOR AS CELL_INDOOR
				#, CLUSTER_ID AS CLUSTER_ID
				#, SITE_ID AS SITE_ID
				#, FREQUENCY AS FREQUENCY
				#, UARFCN AS UARFCN
				, CELL_ID AS CELL_ID
				#, CALL_TYPE AS CALL_TYPE
				#, CALL_STATUS AS CALL_STATUS	
				, SUM(CALL_CNT) AS CALL_CNT
				, SUM(CAUSE_14_CNT) AS CAUSE_14_CNT
				, SUM(CAUSE_15_CNT) AS CAUSE_15_CNT
				, SUM(CAUSE_46_CNT) AS CAUSE_46_CNT
				, SUM(CAUSE_115_CNT) AS CAUSE_115_CNT
				, SUM(CAUSE_OTHERS_CNT) AS CAUSE_OTHERS_CNT
				, SUM(CAUSE_53_CNT) AS CAUSE_53_CNT
				, SUM(CAUSE_65_CNT) AS CAUSE_65_CNT
				, SUM(CAUSE_114_CNT) AS CAUSE_114_CNT
				, SUM(CAUSE_263_CNT) AS CAUSE_263_CNT	
				, SUM(CAUSE_CAPACITY) AS CAUSE_CAPACITY
				, SUM(BEST_RSCP_1) AS BEST_RSCP_1
				, SUM(BEST_ECN0_1) AS BEST_ECN0_1
				, NULL AS BEST_RSCP_1_MED #median(BEST_RSCP_1_MED) AS BEST_RSCP_1_MED
				, NULL AS BEST_ECN0_1_MED #median(BEST_ECN0_1_MED) AS BEST_ECN0_1_MED
				, SUM(IRAT_HHO_ATTEMPT) AS IRAT_HHO_ATTEMPT
				, SUM(IRAT_HHO_SUCCESS) AS IRAT_HHO_SUCCESS
				, CELL_LON,CELL_LAT
				, SUM(POS_LAST_RSCP_CNT) AS POS_LAST_RSCP_CNT
				, SUM(POS_LAST_ECN0_CNT) AS POS_LAST_ECN0_CNT
-- 				,SUM(CALL_STATUS_BLOCK) AS CALL_STATUS_BLOCK
-- 				,SUM(CALL_STATUS_SUCCESS) AS CALL_STATUS_SUCCESS
-- 				,SUM(CALL_STATUS_DROP) AS CALL_STATUS_DROP
-- 				,SUM(CALL_TYPE_SMS) AS CALL_TYPE_SMS     
-- 				,SUM(CALL_TYPE_VOICE) AS CALL_TYPE_VOICE   
-- 				,SUM(CALL_TYPE_VEDIO) AS CALL_TYPE_VEDIO   
-- 				,SUM(CALL_TYPE_PS99) AS CALL_TYPE_PS99    
-- 				,SUM(CALL_TYPE_HSPA) AS CALL_TYPE_HSPA    
-- 				,SUM(CALL_TYPE_MRAB) AS CALL_TYPE_MRAB    
-- 				,SUM(CALL_TYPE_PSOTHERS) AS CALL_TYPE_PSOTHERS
-- 				,SUM(CALL_TYPE_CS) AS CALL_TYPE_CS      
-- 				,SUM(CALL_TYPE_PS) AS CALL_TYPE_PS
				,SUM(NAS_CAUSE_SM_SUM) AS NAS_CAUSE_SM_SUM
				,SUM(NAS_GPRS_MM_DETACH_SUM) AS NAS_GPRS_MM_DETACH_SUM
			FROM ',GT_DB,RUN,'.`tmp_table_tile_end_',WORKER_ID,'`
			GROUP BY 
				DATA_DATE
				#, DATA_HOUR
				#, INDOOR
				#, MOVING
				, TILE_ID
				, RNC_ID
				#, CELL_INDOOR
				#, CLUSTER_ID
				#, SITE_ID
				#, FREQUENCY
				#, UARFCN
				, CELL_ID
				#, CALL_TYPE 
				#, CALL_STATUS
		) B
		ON  A.DATA_DATE=B.DATA_DATE
		#AND A.INDOOR=B.INDOOR
		#AND A.MOVING=B.MOVING
		AND A.TILE_ID=B.TILE_ID
		AND A.RNC_ID=B.RNC_ID
		#AND A.CELL_INDOOR=B.CELL_INDOOR
		#AND A.CLUSTER_ID=B.CLUSTER_ID
		#AND A.SITE_ID=B.SITE_ID
		#AND A.FREQUENCY=B.FREQUENCY
		#AND A.UARFCN=B.UARFCN
		AND A.CELL_ID=B.CELL_ID
		#AND A.CALL_TYPE=B.CALL_TYPE
		#AND A.CALL_STATUS=B.CALL_STATUS
		;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_End_AGR','INSERT DATA TO table_tile_end_dy_t_def', NOW());
	SET @SqlCmd=CONCAT('REPLACE INTO ',GT_DB,'.table_tile_end_dy_t_def
 		(DATA_DATE,TILE_ID,RNC_ID,
				CALL_CNT,CAUSE_14_CNT,CAUSE_15_CNT,CAUSE_46_CNT,CAUSE_115_CNT,CAUSE_OTHERS_CNT,
				CAUSE_53_CNT,CAUSE_65_CNT,CAUSE_114_CNT,CAUSE_263_CNT,CAUSE_CAPACITY,
				BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,IRAT_HHO_ATTEMPT,IRAT_HHO_SUCCESS,POS_LAST_RSCP_CNT,POS_LAST_ECN0_CNT
-- 				,CALL_STATUS_BLOCK,CALL_STATUS_SUCCESS,CALL_STATUS_DROP,CALL_TYPE_SMS,CALL_TYPE_VOICE,CALL_TYPE_VEDIO
-- 				,CALL_TYPE_PS99,CALL_TYPE_HSPA,CALL_TYPE_MRAB,CALL_TYPE_PSOTHERS,CALL_TYPE_CS,CALL_TYPE_PS
				,NAS_CAUSE_SM_SUM,NAS_GPRS_MM_DETACH_SUM
	)
 		SELECT
			 B.DATA_DATE
			#, B.DATA_HOUR
			#, B.INDOOR
			#, B.MOVING
			, B.TILE_ID
			, B.RNC_ID
			#, B.CELL_INDOOR
			#, B.CLUSTER_ID
			#, B.SITE_ID
			#, B.FREQUENCY 
			#, B.UARFCN 
			#, B.CELL_ID
			#, B.CALL_TYPE 
			#, B.CALL_STATUS
 			, CASE WHEN A.CALL_CNT IS NULL AND B.CALL_CNT IS NULL THEN NULL ELSE IFNULL(A.CALL_CNT,0) + IFNULL(B.CALL_CNT,0) END AS CALL_CNT
			, CASE WHEN A.CAUSE_14_CNT IS NULL AND B.CAUSE_14_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_14_CNT,0) + IFNULL(B.CAUSE_14_CNT,0) END AS CAUSE_14_CNT
			, CASE WHEN A.CAUSE_15_CNT IS NULL AND B.CAUSE_15_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_15_CNT,0) + IFNULL(B.CAUSE_15_CNT,0) END AS CAUSE_15_CNT
			, CASE WHEN A.CAUSE_46_CNT IS NULL AND B.CAUSE_46_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_46_CNT,0) + IFNULL(B.CAUSE_46_CNT,0) END AS CAUSE_46_CNT
			, CASE WHEN A.CAUSE_115_CNT IS NULL AND B.CAUSE_115_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_115_CNT,0) + IFNULL(B.CAUSE_115_CNT,0) END AS CAUSE_115_CNT
			, CASE WHEN A.CAUSE_OTHERS_CNT IS NULL AND B.CAUSE_OTHERS_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_OTHERS_CNT,0) + IFNULL(B.CAUSE_OTHERS_CNT,0) END AS CAUSE_OTHERS_CNT
			, CASE WHEN A.CAUSE_53_CNT IS NULL AND B.CAUSE_53_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_53_CNT,0) + IFNULL(B.CAUSE_53_CNT,0) END AS CAUSE_53_CNT
			, CASE WHEN A.CAUSE_65_CNT IS NULL AND B.CAUSE_65_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_65_CNT,0) + IFNULL(B.CAUSE_65_CNT,0) END AS CAUSE_65_CNT
			, CASE WHEN A.CAUSE_114_CNT IS NULL AND B.CAUSE_114_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_114_CNT,0) + IFNULL(B.CAUSE_114_CNT,0) END AS CAUSE_114_CNT
			, CASE WHEN A.CAUSE_263_CNT IS NULL AND B.CAUSE_263_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_263_CNT,0) + IFNULL(B.CAUSE_263_CNT,0) END AS CAUSE_263_CNT	
			, CASE WHEN A.CAUSE_CAPACITY IS NULL AND B.CAUSE_CAPACITY IS NULL THEN NULL ELSE IFNULL(A.CAUSE_CAPACITY,0) + IFNULL(B.CAUSE_CAPACITY,0) END AS CAUSE_CAPACITY
 			, CASE WHEN A.BEST_RSCP_1 IS NULL AND B.BEST_RSCP_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1,0) + IFNULL(B.BEST_RSCP_1,0) END AS BEST_RSCP_1
			, CASE WHEN A.BEST_ECN0_1 IS NULL AND B.BEST_ECN0_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1,0) + IFNULL(B.BEST_ECN0_1,0) END AS BEST_ECN0_1
 			, CASE WHEN A.BEST_RSCP_1_MED IS NULL THEN B.BEST_RSCP_1_MED WHEN B.BEST_RSCP_1_MED IS NULL THEN A.BEST_RSCP_1_MED ELSE (A.BEST_RSCP_1_MED + B.BEST_RSCP_1_MED)/2 END AS BEST_RSCP_1_MED
			, CASE WHEN A.BEST_ECN0_1_MED IS NULL THEN B.BEST_ECN0_1_MED WHEN B.BEST_ECN0_1_MED IS NULL THEN A.BEST_ECN0_1_MED ELSE (A.BEST_ECN0_1_MED + B.BEST_ECN0_1_MED)/2 END AS BEST_ECN0_1_MED
			, CASE WHEN A.IRAT_HHO_ATTEMPT IS NULL AND B.IRAT_HHO_ATTEMPT IS NULL THEN NULL ELSE IFNULL(A.IRAT_HHO_ATTEMPT,0) + IFNULL(B.IRAT_HHO_ATTEMPT,0) END AS IRAT_HHO_ATTEMPT
			, CASE WHEN A.IRAT_HHO_SUCCESS IS NULL AND B.IRAT_HHO_SUCCESS IS NULL THEN NULL ELSE IFNULL(A.IRAT_HHO_SUCCESS,0) + IFNULL(B.IRAT_HHO_SUCCESS,0) END AS IRAT_HHO_SUCCESS
			, CASE WHEN A.POS_LAST_RSCP_CNT IS NULL AND B.POS_LAST_RSCP_CNT IS NULL THEN NULL ELSE IFNULL(A.POS_LAST_RSCP_CNT,0) + IFNULL(B.POS_LAST_RSCP_CNT,0) END AS POS_LAST_RSCP_CNT
			, CASE WHEN A.POS_LAST_ECN0_CNT IS NULL AND B.POS_LAST_ECN0_CNT IS NULL THEN NULL ELSE IFNULL(A.POS_LAST_ECN0_CNT,0) + IFNULL(B.POS_LAST_ECN0_CNT,0) END AS POS_LAST_ECN0_CNT
-- 			, CASE WHEN A.CALL_STATUS_BLOCK IS NULL AND B.CALL_STATUS_BLOCK IS NULL THEN NULL ELSE IFNULL(A.CALL_STATUS_BLOCK,0) + IFNULL(B.CALL_STATUS_BLOCK,0) END AS CALL_STATUS_BLOCK
-- 			, CASE WHEN A.CALL_STATUS_SUCCESS IS NULL AND B.CALL_STATUS_SUCCESS IS NULL THEN NULL ELSE IFNULL(A.CALL_STATUS_SUCCESS,0) + IFNULL(B.CALL_STATUS_SUCCESS,0) END AS CALL_STATUS_SUCCESS
-- 			, CASE WHEN A.CALL_STATUS_DROP IS NULL AND B.CALL_STATUS_DROP IS NULL THEN NULL ELSE IFNULL(A.CALL_STATUS_DROP,0) + IFNULL(B.CALL_STATUS_DROP,0) END AS CALL_STATUS_DROP
-- 			, CASE WHEN A.CALL_TYPE_SMS IS NULL AND B.CALL_TYPE_SMS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_SMS,0) + IFNULL(B.CALL_TYPE_SMS,0) END AS CALL_TYPE_SMS
-- 			, CASE WHEN A.CALL_TYPE_VOICE IS NULL AND B.CALL_TYPE_VOICE IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_VOICE,0) + IFNULL(B.CALL_TYPE_VOICE,0) END AS CALL_TYPE_VOICE
-- 			, CASE WHEN A.CALL_TYPE_VEDIO IS NULL AND B.CALL_TYPE_VEDIO IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_VEDIO,0) + IFNULL(B.CALL_TYPE_VEDIO,0) END AS CALL_TYPE_VEDIO
-- 			, CASE WHEN A.CALL_TYPE_PS99 IS NULL AND B.CALL_TYPE_PS99 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_PS99,0) + IFNULL(B.CALL_TYPE_PS99,0) END AS CALL_TYPE_PS99
-- 			, CASE WHEN A.CALL_TYPE_HSPA IS NULL AND B.CALL_TYPE_HSPA IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_HSPA,0) + IFNULL(B.CALL_TYPE_HSPA,0) END AS CALL_TYPE_HSPA
-- 			, CASE WHEN A.CALL_TYPE_MRAB IS NULL AND B.CALL_TYPE_MRAB IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_MRAB,0) + IFNULL(B.CALL_TYPE_MRAB,0) END AS CALL_TYPE_MRAB
-- 			, CASE WHEN A.CALL_TYPE_PSOTHERS IS NULL AND B.CALL_TYPE_PSOTHERS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_PSOTHERS,0) + IFNULL(B.CALL_TYPE_PSOTHERS,0) END AS CALL_TYPE_PSOTHERS
-- 			, CASE WHEN A.CALL_TYPE_CS IS NULL AND B.CALL_TYPE_CS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_CS,0) + IFNULL(B.CALL_TYPE_CS,0) END AS CALL_TYPE_CS
-- 			, CASE WHEN A.CALL_TYPE_PS IS NULL AND B.CALL_TYPE_PS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_PS,0) + IFNULL(B.CALL_TYPE_PS,0) END AS CALL_TYPE_PS
			, CASE WHEN A.NAS_CAUSE_SM_SUM IS NULL AND B.NAS_CAUSE_SM_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_CAUSE_SM_SUM,0) + IFNULL(B.NAS_CAUSE_SM_SUM,0) END AS NAS_CAUSE_SM_SUM
			, CASE WHEN A.NAS_GPRS_MM_DETACH_SUM IS NULL AND B.NAS_GPRS_MM_DETACH_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_GPRS_MM_DETACH_SUM,0) + IFNULL(B.NAS_GPRS_MM_DETACH_SUM,0) END AS NAS_GPRS_MM_DETACH_SUM
		FROM ',GT_DB,'.table_tile_end_dy_t_def a RIGHT JOIN 
		(
		 	SELECT
				 DATA_DATE AS DATA_DATE
				#, DATA_HOUR
				#, INDOOR AS INDOOR
				#, MOVING AS MOVING
				, TILE_ID AS TILE_ID
				, RNC_ID AS RNC_ID
				#, CELL_INDOOR AS CELL_INDOOR
				#, CLUSTER_ID AS CLUSTER_ID
				#, SITE_ID AS SITE_ID
				#, FREQUENCY AS FREQUENCY
				#, UARFCN AS UARFCN
				#, CELL_ID AS CELL_ID
				#, CALL_TYPE AS CALL_TYPE
				#, CALL_STATUS AS CALL_STATUS	
				, SUM(CALL_CNT) AS CALL_CNT
				, SUM(CAUSE_14_CNT) AS CAUSE_14_CNT
				, SUM(CAUSE_15_CNT) AS CAUSE_15_CNT
				, SUM(CAUSE_46_CNT) AS CAUSE_46_CNT
				, SUM(CAUSE_115_CNT) AS CAUSE_115_CNT
				, SUM(CAUSE_OTHERS_CNT) AS CAUSE_OTHERS_CNT
				, SUM(CAUSE_53_CNT) AS CAUSE_53_CNT
				, SUM(CAUSE_65_CNT) AS CAUSE_65_CNT
				, SUM(CAUSE_114_CNT) AS CAUSE_114_CNT
				, SUM(CAUSE_263_CNT) AS CAUSE_263_CNT
				, SUM(CAUSE_CAPACITY) AS CAUSE_CAPACITY
				, SUM(BEST_RSCP_1) AS BEST_RSCP_1
				, SUM(BEST_ECN0_1) AS BEST_ECN0_1
				, NULL AS BEST_RSCP_1_MED #median(BEST_RSCP_1_MED) AS BEST_RSCP_1_MED
				, NULL AS BEST_ECN0_1_MED #median(BEST_ECN0_1_MED) AS BEST_ECN0_1_MED
				, SUM(IRAT_HHO_ATTEMPT) AS IRAT_HHO_ATTEMPT
				, SUM(IRAT_HHO_SUCCESS) AS IRAT_HHO_SUCCESS
				, SUM(POS_LAST_RSCP_CNT) AS POS_LAST_RSCP_CNT
				, SUM(POS_LAST_ECN0_CNT) AS POS_LAST_ECN0_CNT
-- 				,SUM(CALL_STATUS_BLOCK) AS CALL_STATUS_BLOCK
-- 				,SUM(CALL_STATUS_SUCCESS) AS CALL_STATUS_SUCCESS
-- 				,SUM(CALL_STATUS_DROP) AS CALL_STATUS_DROP
-- 				,SUM(CALL_TYPE_SMS) AS CALL_TYPE_SMS     
-- 				,SUM(CALL_TYPE_VOICE) AS CALL_TYPE_VOICE   
-- 				,SUM(CALL_TYPE_VEDIO) AS CALL_TYPE_VEDIO   
-- 				,SUM(CALL_TYPE_PS99) AS CALL_TYPE_PS99    
-- 				,SUM(CALL_TYPE_HSPA) AS CALL_TYPE_HSPA    
-- 				,SUM(CALL_TYPE_MRAB) AS CALL_TYPE_MRAB    
-- 				,SUM(CALL_TYPE_PSOTHERS) AS CALL_TYPE_PSOTHERS
-- 				,SUM(CALL_TYPE_CS) AS CALL_TYPE_CS      
-- 				,SUM(CALL_TYPE_PS) AS CALL_TYPE_PS
				,SUM(NAS_CAUSE_SM_SUM) AS NAS_CAUSE_SM_SUM
				,SUM(NAS_GPRS_MM_DETACH_SUM) AS NAS_GPRS_MM_DETACH_SUM
			FROM ',GT_DB,RUN,'.`tmp_table_tile_end_',WORKER_ID,'`
			WHERE TILE_ID IS NOT NULL	
			GROUP BY 
				DATA_DATE
				#, DATA_HOUR
				#, INDOOR
				#, MOVING
				, TILE_ID
				, RNC_ID
				#, CELL_INDOOR
				#, CLUSTER_ID
				#, SITE_ID
				#, FREQUENCY
				#, UARFCN
				#, CELL_ID
				#, CALL_TYPE 
				#, CALL_STATUS
		) B
		ON  A.DATA_DATE=B.DATA_DATE
		#AND A.INDOOR=B.INDOOR
		#AND A.MOVING=B.MOVING
		AND A.TILE_ID=B.TILE_ID
		AND A.RNC_ID=B.RNC_ID
		#AND A.CELL_INDOOR=B.CELL_INDOOR
		#AND A.CLUSTER_ID=B.CLUSTER_ID
		#AND A.SITE_ID=B.SITE_ID
		#AND A.FREQUENCY=B.FREQUENCY
		#AND A.UARFCN=B.UARFCN
		#AND A.CELL_ID=B.CELL_ID
		#AND A.CALL_TYPE=B.CALL_TYPE
		#AND A.CALL_STATUS=B.CALL_STATUS
		;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_End_AGR','INSERT DATA TO table_tile_end_dy_c_def', NOW());
	SET @SqlCmd=CONCAT('REPLACE INTO ',GT_DB,'.table_tile_end_dy_c_def
 		(DATA_DATE,RNC_ID,
				CELL_ID,CALL_CNT,CAUSE_14_CNT,CAUSE_15_CNT,CAUSE_46_CNT,CAUSE_115_CNT,CAUSE_OTHERS_CNT,
				CAUSE_53_CNT,CAUSE_65_CNT,CAUSE_114_CNT,CAUSE_263_CNT,CAUSE_CAPACITY,
				BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,IRAT_HHO_ATTEMPT,IRAT_HHO_SUCCESS, CELL_LON,CELL_LAT,POS_LAST_RSCP_CNT,POS_LAST_ECN0_CNT
-- 				,CALL_STATUS_BLOCK,CALL_STATUS_SUCCESS,CALL_STATUS_DROP,CALL_TYPE_SMS,CALL_TYPE_VOICE,CALL_TYPE_VEDIO
-- 				,CALL_TYPE_PS99,CALL_TYPE_HSPA,CALL_TYPE_MRAB,CALL_TYPE_PSOTHERS,CALL_TYPE_CS,CALL_TYPE_PS
				,NAS_CAUSE_SM_SUM,NAS_GPRS_MM_DETACH_SUM
	)
 		SELECT
			 B.DATA_DATE
			#, B.DATA_HOUR
			#, B.INDOOR
			#, B.MOVING
			#, B.TILE_ID
			, B.RNC_ID
			#, B.CELL_INDOOR
			#, B.CLUSTER_ID
			#, B.SITE_ID
			#, B.FREQUENCY 
			#, B.UARFCN 
			, B.CELL_ID
			#, B.CALL_TYPE 
			#, B.CALL_STATUS
 			, CASE WHEN A.CALL_CNT IS NULL AND B.CALL_CNT IS NULL THEN NULL ELSE IFNULL(A.CALL_CNT,0) + IFNULL(B.CALL_CNT,0) END AS CALL_CNT
			, CASE WHEN A.CAUSE_14_CNT IS NULL AND B.CAUSE_14_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_14_CNT,0) + IFNULL(B.CAUSE_14_CNT,0) END AS CAUSE_14_CNT
			, CASE WHEN A.CAUSE_15_CNT IS NULL AND B.CAUSE_15_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_15_CNT,0) + IFNULL(B.CAUSE_15_CNT,0) END AS CAUSE_15_CNT
			, CASE WHEN A.CAUSE_46_CNT IS NULL AND B.CAUSE_46_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_46_CNT,0) + IFNULL(B.CAUSE_46_CNT,0) END AS CAUSE_46_CNT
			, CASE WHEN A.CAUSE_115_CNT IS NULL AND B.CAUSE_115_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_115_CNT,0) + IFNULL(B.CAUSE_115_CNT,0) END AS CAUSE_115_CNT
			, CASE WHEN A.CAUSE_OTHERS_CNT IS NULL AND B.CAUSE_OTHERS_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_OTHERS_CNT,0) + IFNULL(B.CAUSE_OTHERS_CNT,0) END AS CAUSE_OTHERS_CNT
			, CASE WHEN A.CAUSE_53_CNT IS NULL AND B.CAUSE_53_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_53_CNT,0) + IFNULL(B.CAUSE_53_CNT,0) END AS CAUSE_53_CNT
			, CASE WHEN A.CAUSE_65_CNT IS NULL AND B.CAUSE_65_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_65_CNT,0) + IFNULL(B.CAUSE_65_CNT,0) END AS CAUSE_65_CNT
			, CASE WHEN A.CAUSE_114_CNT IS NULL AND B.CAUSE_114_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_114_CNT,0) + IFNULL(B.CAUSE_114_CNT,0) END AS CAUSE_114_CNT
			, CASE WHEN A.CAUSE_263_CNT IS NULL AND B.CAUSE_263_CNT IS NULL THEN NULL ELSE IFNULL(A.CAUSE_263_CNT,0) + IFNULL(B.CAUSE_263_CNT,0) END AS CAUSE_263_CNT
			, CASE WHEN A.CAUSE_CAPACITY IS NULL AND B.CAUSE_CAPACITY IS NULL THEN NULL ELSE IFNULL(A.CAUSE_CAPACITY,0) + IFNULL(B.CAUSE_CAPACITY,0) END AS CAUSE_CAPACITY
 			, CASE WHEN A.BEST_RSCP_1 IS NULL AND B.BEST_RSCP_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1,0) + IFNULL(B.BEST_RSCP_1,0) END AS BEST_RSCP_1
			, CASE WHEN A.BEST_ECN0_1 IS NULL AND B.BEST_ECN0_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1,0) + IFNULL(B.BEST_ECN0_1,0) END AS BEST_ECN0_1
 			, CASE WHEN A.BEST_RSCP_1_MED IS NULL THEN B.BEST_RSCP_1_MED WHEN B.BEST_RSCP_1_MED IS NULL THEN A.BEST_RSCP_1_MED ELSE (A.BEST_RSCP_1_MED + B.BEST_RSCP_1_MED)/2 END AS BEST_RSCP_1_MED
			, CASE WHEN A.BEST_ECN0_1_MED IS NULL THEN B.BEST_ECN0_1_MED WHEN B.BEST_ECN0_1_MED IS NULL THEN A.BEST_ECN0_1_MED ELSE (A.BEST_ECN0_1_MED + B.BEST_ECN0_1_MED)/2 END AS BEST_ECN0_1_MED
			, CASE WHEN A.IRAT_HHO_ATTEMPT IS NULL AND B.IRAT_HHO_ATTEMPT IS NULL THEN NULL ELSE IFNULL(A.IRAT_HHO_ATTEMPT,0) + IFNULL(B.IRAT_HHO_ATTEMPT,0) END AS IRAT_HHO_ATTEMPT
			, CASE WHEN A.IRAT_HHO_SUCCESS IS NULL AND B.IRAT_HHO_SUCCESS IS NULL THEN NULL ELSE IFNULL(A.IRAT_HHO_SUCCESS,0) + IFNULL(B.IRAT_HHO_SUCCESS,0) END AS IRAT_HHO_SUCCESS
			, B.CELL_LON,B.CELL_LAT
			, CASE WHEN A.POS_LAST_RSCP_CNT IS NULL AND B.POS_LAST_RSCP_CNT IS NULL THEN NULL ELSE IFNULL(A.POS_LAST_RSCP_CNT,0) + IFNULL(B.POS_LAST_RSCP_CNT,0) END AS POS_LAST_RSCP_CNT
			, CASE WHEN A.POS_LAST_ECN0_CNT IS NULL AND B.POS_LAST_ECN0_CNT IS NULL THEN NULL ELSE IFNULL(A.POS_LAST_ECN0_CNT,0) + IFNULL(B.POS_LAST_ECN0_CNT,0) END AS POS_LAST_ECN0_CNT
-- 			, CASE WHEN A.CALL_STATUS_BLOCK IS NULL AND B.CALL_STATUS_BLOCK IS NULL THEN NULL ELSE IFNULL(A.CALL_STATUS_BLOCK,0) + IFNULL(B.CALL_STATUS_BLOCK,0) END AS CALL_STATUS_BLOCK
-- 			, CASE WHEN A.CALL_STATUS_SUCCESS IS NULL AND B.CALL_STATUS_SUCCESS IS NULL THEN NULL ELSE IFNULL(A.CALL_STATUS_SUCCESS,0) + IFNULL(B.CALL_STATUS_SUCCESS,0) END AS CALL_STATUS_SUCCESS
-- 			, CASE WHEN A.CALL_STATUS_DROP IS NULL AND B.CALL_STATUS_DROP IS NULL THEN NULL ELSE IFNULL(A.CALL_STATUS_DROP,0) + IFNULL(B.CALL_STATUS_DROP,0) END AS CALL_STATUS_DROP
-- 			, CASE WHEN A.CALL_TYPE_SMS IS NULL AND B.CALL_TYPE_SMS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_SMS,0) + IFNULL(B.CALL_TYPE_SMS,0) END AS CALL_TYPE_SMS
-- 			, CASE WHEN A.CALL_TYPE_VOICE IS NULL AND B.CALL_TYPE_VOICE IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_VOICE,0) + IFNULL(B.CALL_TYPE_VOICE,0) END AS CALL_TYPE_VOICE
-- 			, CASE WHEN A.CALL_TYPE_VEDIO IS NULL AND B.CALL_TYPE_VEDIO IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_VEDIO,0) + IFNULL(B.CALL_TYPE_VEDIO,0) END AS CALL_TYPE_VEDIO
-- 			, CASE WHEN A.CALL_TYPE_PS99 IS NULL AND B.CALL_TYPE_PS99 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_PS99,0) + IFNULL(B.CALL_TYPE_PS99,0) END AS CALL_TYPE_PS99
-- 			, CASE WHEN A.CALL_TYPE_HSPA IS NULL AND B.CALL_TYPE_HSPA IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_HSPA,0) + IFNULL(B.CALL_TYPE_HSPA,0) END AS CALL_TYPE_HSPA
-- 			, CASE WHEN A.CALL_TYPE_MRAB IS NULL AND B.CALL_TYPE_MRAB IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_MRAB,0) + IFNULL(B.CALL_TYPE_MRAB,0) END AS CALL_TYPE_MRAB
-- 			, CASE WHEN A.CALL_TYPE_PSOTHERS IS NULL AND B.CALL_TYPE_PSOTHERS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_PSOTHERS,0) + IFNULL(B.CALL_TYPE_PSOTHERS,0) END AS CALL_TYPE_PSOTHERS
-- 			, CASE WHEN A.CALL_TYPE_CS IS NULL AND B.CALL_TYPE_CS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_CS,0) + IFNULL(B.CALL_TYPE_CS,0) END AS CALL_TYPE_CS
-- 			, CASE WHEN A.CALL_TYPE_PS IS NULL AND B.CALL_TYPE_PS IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_PS,0) + IFNULL(B.CALL_TYPE_PS,0) END AS CALL_TYPE_PS
			, CASE WHEN A.NAS_CAUSE_SM_SUM IS NULL AND B.NAS_CAUSE_SM_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_CAUSE_SM_SUM,0) + IFNULL(B.NAS_CAUSE_SM_SUM,0) END AS NAS_CAUSE_SM_SUM
			, CASE WHEN A.NAS_GPRS_MM_DETACH_SUM IS NULL AND B.NAS_GPRS_MM_DETACH_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_GPRS_MM_DETACH_SUM,0) + IFNULL(B.NAS_GPRS_MM_DETACH_SUM,0) END AS NAS_GPRS_MM_DETACH_SUM
		FROM ',GT_DB,'.table_tile_end_dy_c_def a RIGHT JOIN 
		(
		 	SELECT
				 DATA_DATE AS DATA_DATE
				#, DATA_HOUR
				#, INDOOR AS INDOOR
				#, MOVING AS MOVING
				#, TILE_ID AS TILE_ID
				, RNC_ID AS RNC_ID
				#, CELL_INDOOR AS CELL_INDOOR
				#, CLUSTER_ID AS CLUSTER_ID
				#, SITE_ID AS SITE_ID
				#, FREQUENCY AS FREQUENCY
				#, UARFCN AS UARFCN
				, CELL_ID AS CELL_ID
				#, CALL_TYPE AS CALL_TYPE
				#, CALL_STATUS AS CALL_STATUS	
				, SUM(CALL_CNT) AS CALL_CNT
				, SUM(CAUSE_14_CNT) AS CAUSE_14_CNT
				, SUM(CAUSE_15_CNT) AS CAUSE_15_CNT
				, SUM(CAUSE_46_CNT) AS CAUSE_46_CNT
				, SUM(CAUSE_115_CNT) AS CAUSE_115_CNT
				, SUM(CAUSE_OTHERS_CNT) AS CAUSE_OTHERS_CNT
				, SUM(CAUSE_53_CNT) AS CAUSE_53_CNT
				, SUM(CAUSE_65_CNT) AS CAUSE_65_CNT
				, SUM(CAUSE_114_CNT) AS CAUSE_114_CNT
				, SUM(CAUSE_263_CNT) AS CAUSE_263_CNT
				, SUM(CAUSE_CAPACITY) AS CAUSE_CAPACITY
				, SUM(BEST_RSCP_1) AS BEST_RSCP_1
				, SUM(BEST_ECN0_1) AS BEST_ECN0_1
				, NULL AS BEST_RSCP_1_MED #median(BEST_RSCP_1_MED) AS BEST_RSCP_1_MED
				, NULL AS BEST_ECN0_1_MED #median(BEST_ECN0_1_MED) AS BEST_ECN0_1_MED
				, SUM(IRAT_HHO_ATTEMPT) AS IRAT_HHO_ATTEMPT
				, SUM(IRAT_HHO_SUCCESS) AS IRAT_HHO_SUCCESS
				, CELL_LON,CELL_LAT
				, SUM(POS_LAST_RSCP_CNT) AS POS_LAST_RSCP_CNT
				, SUM(POS_LAST_ECN0_CNT) AS POS_LAST_ECN0_CNT
-- 				,SUM(CALL_STATUS_BLOCK) AS CALL_STATUS_BLOCK
-- 				,SUM(CALL_STATUS_SUCCESS) AS CALL_STATUS_SUCCESS
-- 				,SUM(CALL_STATUS_DROP) AS CALL_STATUS_DROP
-- 				,SUM(CALL_TYPE_SMS) AS CALL_TYPE_SMS     
-- 				,SUM(CALL_TYPE_VOICE) AS CALL_TYPE_VOICE   
-- 				,SUM(CALL_TYPE_VEDIO) AS CALL_TYPE_VEDIO   
-- 				,SUM(CALL_TYPE_PS99) AS CALL_TYPE_PS99    
-- 				,SUM(CALL_TYPE_HSPA) AS CALL_TYPE_HSPA    
-- 				,SUM(CALL_TYPE_MRAB) AS CALL_TYPE_MRAB    
-- 				,SUM(CALL_TYPE_PSOTHERS) AS CALL_TYPE_PSOTHERS
-- 				,SUM(CALL_TYPE_CS) AS CALL_TYPE_CS      
-- 				,SUM(CALL_TYPE_PS) AS CALL_TYPE_PS
				,SUM(NAS_CAUSE_SM_SUM) AS NAS_CAUSE_SM_SUM
				,SUM(NAS_GPRS_MM_DETACH_SUM) AS NAS_GPRS_MM_DETACH_SUM
			FROM ',GT_DB,RUN,'.`tmp_table_tile_end_',WORKER_ID,'`
			GROUP BY 
				DATA_DATE
				#, DATA_HOUR
				#, INDOOR
				#, MOVING
				#, TILE_ID
				, RNC_ID
				#, CELL_INDOOR
				#, CLUSTER_ID
				#, SITE_ID
				#, FREQUENCY
				#, UARFCN
				, CELL_ID
				#, CALL_TYPE 
				#, CALL_STATUS
		) B
		ON  A.DATA_DATE=B.DATA_DATE
		#AND A.INDOOR=B.INDOOR
		#AND A.MOVING=B.MOVING
		#AND A.TILE_ID=B.TILE_ID
		AND A.RNC_ID=B.RNC_ID
		#AND A.CELL_INDOOR=B.CELL_INDOOR
		#AND A.CLUSTER_ID=B.CLUSTER_ID
		#AND A.SITE_ID=B.SITE_ID
		#AND A.FREQUENCY=B.FREQUENCY
		#AND A.UARFCN=B.UARFCN
		AND A.CELL_ID=B.CELL_ID
		#AND A.CALL_TYPE=B.CALL_TYPE
		#AND A.CALL_STATUS=B.CALL_STATUS
		;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE  IF EXISTS ',GT_DB,RUN,'.tmp_table_tile_end_',WORKER_ID,';');
	PREPARE stmt FROM @sqlcmd;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_End_AGR',CONCAT('Done: ',TIMESTAMPDIFF(SECOND,START_TIME,SYSDATE()),' seconds.'), NOW());
			
END$$
DELIMITER ;

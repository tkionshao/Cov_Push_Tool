DELIMITER $$
USE `gt_gw_main`$$
DROP PROCEDURE IF EXISTS `SP_CreateDB_LTE`$$
CREATE DEFINER=`covmo`@`%` PROCEDURE `SP_Handset_Cap_Update`(IN DATA_DATE DATE)
BEGIN
DECLARE PU_ALL VARCHAR(1000) DEFAULT '';
DECLARE SESSION_NAME VARCHAR(100);
DECLARE GT_DB VARCHAR(100) DEFAULT 'gt_covmo';
DECLARE GT_DB_TEMP VARCHAR(100) DEFAULT 'task_18360';
DECLARE CCQ_TABLE VARCHAR(100) DEFAULT 'rpt_ccq';
DECLARE WORKER_ID VARCHAR(10) DEFAULT CONNECTION_ID();
DECLARE UNION_STR VARCHAR(20000) DEFAULT '';
DECLARE DS_AP_IP VARCHAR(20);
DECLARE DS_AP_PORT VARCHAR(5);	
SET @SqlCmd=CONCAT('CREATE DATABASE IF NOT EXISTS ',GT_DB_TEMP,';');
PREPARE Stmt FROM @SqlCmd;
EXECUTE Stmt;
DEALLOCATE PREPARE Stmt;
SET @SqlCmd=CONCAT('SELECT `value` INTO @AP_USER FROM `gt_gw_main`.`integration_param` WHERE gt_group=''system'' AND gt_name=''apDbUser'';');
PREPARE Stmt FROM @SqlCmd;
EXECUTE Stmt;
DEALLOCATE PREPARE Stmt; 
SET @SqlCmd=CONCAT('SELECT `value` INTO @AP_PSWD FROM `gt_gw_main`.`integration_param` WHERE gt_group=''system'' AND gt_name=''apDbPass'';');
PREPARE Stmt FROM @SqlCmd;
EXECUTE Stmt;
DEALLOCATE PREPARE Stmt;
 
SET @SqlCmd=CONCAT('SELECT GROUP_CONCAT(DISTINCT CONCAT(A.RNC,''|'',B.`TECHNOLOGY`,''|'',REPLACE(gt_strtok(IFNULL(A.`DS_AP_URI`,B.`DS_AP_URI`),3,'':''),''/'',''''),''|'',REPLACE(gt_strtok(IFNULL(A.`DS_AP_URI`,B.`DS_AP_URI`),4,'':''),''/'','''')) SEPARATOR '','' ) INTO @PU_GC 
			FROM `gt_covmo`.`session_information` A,`gt_covmo`.`rnc_information` B
			WHERE `SESSION_START`=''',DATA_DATE,''' 
			AND A.`RNC`=B.`RNC` AND B.`TECHNOLOGY`=''LTE'';');
PREPARE Stmt FROM @SqlCmd;
EXECUTE Stmt;
DEALLOCATE PREPARE Stmt;
SET PU_ALL=IFNULL(@PU_GC,'');
SET CCQ_TABLE:=CONCAT(CCQ_TABLE,'_',WORKER_ID);
CALL gt_schedule.sp_job_create('SP_handset_cap_update',GT_DB_TEMP);
SET @V_Multi_PU=@JOB_ID;	
SET @v_i=1; 
SET @Quotient_v=1;
SET @v_R_Max=LENGTH(PU_ALL) - LENGTH(REPLACE(PU_ALL, ',', '')) + 1;
WHILE @v_i <= @v_R_Max DO
BEGIN
	SET SESSION_NAME = CONCAT('gt_',gt_strtok(gt_covmo_csv_get(PU_ALL,@v_i),1,'|'),'_',DATE_FORMAT(DATA_DATE,'%Y%m%d'),'_0000_0000');
	SET DS_AP_IP= gt_strtok(SPLIT_STR(PU_ALL,',',@v_i),3,'|');
	SET DS_AP_PORT= gt_strtok(SPLIT_STR(PU_ALL,',',@v_i),4,'|');
	SET @SqlCmd=CONCAT('DROP TABLE IF EXISTS ',GT_DB_TEMP,'.',CCQ_TABLE,'_',REPLACE(SESSION_NAME,'_0000_0000',''),'_',gt_strtok(gt_covmo_csv_get(PU_ALL,@v_i),2,'|'),';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	 
	SET @SqlCmd=CONCAT('CREATE TABLE ',GT_DB_TEMP,'.',CCQ_TABLE,'_',REPLACE(SESSION_NAME,'_0000_0000',''),'_',gt_strtok(gt_covmo_csv_get(PU_ALL,@v_i),2,'|'),
	'(`IMEI` VARCHAR(100) DEFAULT NULL,
	`UE_LTE_CATEGORY` BIGINT DEFAULT NULL,
	`UE_LTE_CATEGORY_UTRA` BIGINT DEFAULT NULL,
	`UE_LTE_CATEGORY_GERAN` BIGINT DEFAULT NULL
	) ENGINE=MYISAM;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	CALL gt_schedule.sp_job_add_task(
	CONCAT('CALL gt_gw_main.SP_CovMo_Cross_Query_Parallel(''',GT_DB_TEMP,''',''',SESSION_NAME,''',''TABLE_CALL_LTE'',''',CONCAT(CCQ_TABLE,'_',REPLACE(SESSION_NAME,'_0000_0000',''),'_',gt_strtok(gt_covmo_csv_get(PU_ALL,@v_i),2,'|')),''','' SELECT IMEI,UE_LTE_CATEGORY,UE_LTE_CATEGORY_UTRA,UE_LTE_CATEGORY_GERAN FROM TABLE_CALL_LTE AS fact WHERE IMEI IS NOT NULL AND (UE_LTE_CATEGORY IS NOT NULL OR UE_LTE_CATEGORY_UTRA IS NOT NULL OR UE_LTE_CATEGORY_GERAN IS NOT NULL )'','' (IMEI VARCHAR(100),UE_LTE_CATEGORY VARCHAR(100),UE_LTE_CATEGORY_UTRA VARCHAR(100),UE_LTE_CATEGORY_GERAN VARCHAR(100)) '',''',WORKER_ID,''','' (IMEI,UE_LTE_CATEGORY,UE_LTE_CATEGORY_UTRA,UE_LTE_CATEGORY_GERAN)'',''LTE'',''-1'',-1,-1,''',DS_AP_IP,''',''',DS_AP_PORT,''',''',@AP_USER,''',''',@AP_PSWD,''',''0'');'),@V_Multi_PU
	); 
	
	SET @SqlCmd=CONCAT('SELECT `STATUS` INTO @JOB_STATUS FROM `gt_schedule`.`job_history` WHERE ID=',@V_Multi_PU,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	IF (@v_i=1) THEN 
		SET UNION_STR:=CONCAT(GT_DB_TEMP,'.',CCQ_TABLE,'_',REPLACE(SESSION_NAME,'_0000_0000',''),'_',gt_strtok(gt_covmo_csv_get(PU_ALL,@v_i),2,'|'),',');
	ELSE 
		SET UNION_STR:=CONCAT(UNION_STR,GT_DB_TEMP,'.',CCQ_TABLE,'_',REPLACE(SESSION_NAME,'_0000_0000',''),'_',gt_strtok(gt_covmo_csv_get(PU_ALL,@v_i),2,'|'),',');
	END IF; 
	
	SET @v_i=@v_i+@Quotient_v;
END;
END WHILE;
SET UNION_STR =LEFT(UNION_STR,LENGTH(UNION_STR)-1);
CALL gt_schedule.sp_job_enable_event();
CALL gt_schedule.sp_job_start(@V_Multi_PU);
CALL gt_schedule.sp_job_wait(@V_Multi_PU);
CALL gt_schedule.sp_job_disable_event();
SET @SqlCmd=CONCAT('SELECT `STATUS` INTO @JOB_STATUS FROM `gt_schedule`.`job_history` WHERE ID=',@V_Multi_PU,';');
PREPARE Stmt FROM @SqlCmd;
EXECUTE Stmt;
DEALLOCATE PREPARE Stmt;
 
IF @JOB_STATUS='FINISHED' THEN 
	SET @SqlCmd=CONCAT('DROP TABLE IF EXISTS ',GT_DB_TEMP,'.',CCQ_TABLE,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('CREATE TABLE ',GT_DB_TEMP,'.',CCQ_TABLE,'(`IMEI` VARCHAR(100),
	`UE_LTE_CATEGORY` BIGINT,
	`UE_LTE_CATEGORY_UTRA` BIGINT,
	`UE_LTE_CATEGORY_GERAN` BIGINT
	)ENGINE=MRG_MYISAM UNION=(',UNION_STR,')');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
		
	SET @SqlCmd=CONCAT('CREATE TABLE ',GT_DB_TEMP,'.dim_handset_cap_tmp AS (
	SELECT LEFT(IMEI,8) AS TAC, 
	BIT_OR(UE_LTE_CATEGORY) AS CAP_LTE, 
	BIT_OR(UE_LTE_CATEGORY_UTRA) AS CAP_UTRA, 
	BIT_OR(UE_LTE_CATEGORY_GERAN) AS CAP_GERAN  
	FROM ',GT_DB_TEMP,'.',CCQ_TABLE,' GROUP BY LEFT(IMEI,8));');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	 	
	SET @SqlCmd=CONCAT('INSERT INTO ',GT_DB,'.dim_handset_cap 
	SELECT A.tac, A.CAP_LTE, A.CAP_UTRA, A.CAP_GERAN
	FROM ',GT_DB_TEMP,'.dim_handset_cap_tmp A
	LEFT JOIN ',GT_DB,'.dim_handset_cap B
	ON A.TAC=B.TAC
	WHERE B.TAC IS NULL;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
		
	SET @SqlCmd=CONCAT('UPDATE ',GT_DB,'.dim_handset_cap A 
	INNER JOIN ',GT_DB_TEMP,'.dim_handset_cap_tmp B 
	ON A.tac=B.tac 
	SET A.CAP_LTE=(A.CAP_LTE | B.CAP_LTE), 
	A.CAP_UTRA=(A.CAP_UTRA | B.CAP_UTRA), 
	A.CAP_GERAN=(A.CAP_GERAN | B.CAP_GERAN);');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP DATABASE IF EXISTS ',GT_DB_TEMP,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
END IF;
END$$
DELIMITER ;

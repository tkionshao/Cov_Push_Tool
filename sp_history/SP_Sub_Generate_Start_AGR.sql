DELIMITER $$
USE `gt_gw_main`$$
DROP PROCEDURE IF EXISTS `SP_CreateDB_LTE`$$
CREATE DEFINER=`covmo`@`%` PROCEDURE `SP_Sub_Generate_Start_AGR`(IN GT_DB VARCHAR(100), IN KIND VARCHAR(20), IN VENDOR_SOURCE VARCHAR(20), IN note VARCHAR(100),IN GT_COVMO VARCHAR(100))
BEGIN
	DECLARE RNC_ID INT;
	DECLARE O_GT_DB VARCHAR(100) DEFAULT GT_DB;
	DECLARE START_TIME DATETIME DEFAULT SYSDATE();
	DECLARE PARTITION_ID INT DEFAULT SUBSTRING(RIGHT(GT_DB,18),10,2) ;
	DECLARE SH_EH VARCHAR(9) DEFAULT RIGHT(GT_DB,9);
	DECLARE GT_DATE VARCHAR(18) DEFAULT RIGHT(GT_DB,18);
	DECLARE STARTHOUR VARCHAR(2) DEFAULT SUBSTRING(RIGHT(GT_DB,18),10,2);
	DECLARE ENDHOUR VARCHAR(2) DEFAULT IF(SUBSTRING(RIGHT(GT_DB,18),15,2)='00','24',SUBSTRING(RIGHT(GT_DB,18),15,2));
	DECLARE RUN VARCHAR(20);
	DECLARE WORKER_ID VARCHAR(10) DEFAULT CONNECTION_ID();
	
	DECLARE CURRENT_NT_DB VARCHAR(50) DEFAULT CONCAT('gt_nt_',gt_strtok(GT_DB,3,'_'));
	SET SESSION group_concat_max_len = 100000;
	
	SELECT gt_strtok(GT_DB,2,'_') INTO RNC_ID;
	CALL SP_Sub_Set_Session_Param(GT_DB);
	SELECT REPLACE(GT_DB,SH_EH,'0000_0000') INTO GT_DB;
	
	IF VENDOR_SOURCE = 'GW' THEN
		IF KIND = 'DAILY' THEN
			SET RUN = '_tmp';
		ELSEIF KIND = 'RERUN' THEN
			SET RUN = '_rerun';
		END IF;
	ELSEIF VENDOR_SOURCE = 'AP' THEN
		SET RUN = '';
	END IF;
	SET @SqlCmd=CONCAT('SELECT att_value INTO @SYS_CONFIG_TILE FROM ',CURRENT_NT_DB,'.`sys_config` WHERE `group_name`=''system'' AND att_name = ''MapResolution'';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
		
	IF gt_covmo_csv_count(@SYS_CONFIG_TILE,',') =3 THEN
		
		SET @SqlCmd=CONCAT('SELECT gt_covmo_csv_get(att_value,3) INTO @ZOOM_LEVEL FROM ',CURRENT_NT_DB,'.`sys_config` WHERE `group_name`=''system'' AND att_name = ''MapResolution'';');
		PREPARE Stmt FROM @SqlCmd;
		EXECUTE Stmt;
		DEALLOCATE PREPARE Stmt;
	ELSE 
		SET @SqlCmd=CONCAT('SELECT att_value INTO @ZOOM_LEVEL FROM ',CURRENT_NT_DB,'.`sys_config` WHERE `group_name`=''system'' AND att_name = ''MapResolution'';');
		PREPARE Stmt FROM @SqlCmd;
		EXECUTE Stmt;
		DEALLOCATE PREPARE Stmt;
	END IF;
	
	SET @SqlCmd=CONCAT('ALTER TABLE ',GT_DB,RUN,'.table_tile_start TRUNCATE PARTITION h',PARTITION_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('ALTER TABLE ',GT_DB,RUN,'.table_tile_start_t TRUNCATE PARTITION h',PARTITION_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('ALTER TABLE ',GT_DB,RUN,'.table_tile_start_c TRUNCATE PARTITION h',PARTITION_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('ALTER TABLE ',GT_DB,RUN,'.table_tile_start_def TRUNCATE PARTITION h',PARTITION_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('ALTER TABLE ',GT_DB,RUN,'.table_tile_start_t_def TRUNCATE PARTITION h',PARTITION_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('ALTER TABLE ',GT_DB,RUN,'.table_tile_start_c_def TRUNCATE PARTITION h',PARTITION_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('ALTER TABLE ',GT_DB,RUN,'.table_call_cnt TRUNCATE PARTITION h',PARTITION_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Create temp table tmp_table_tile_start ', NOW());
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE  IF EXISTS ',GT_DB,RUN,'.tmp_table_tile_start_',WORKER_ID,';');
	PREPARE stmt FROM @sqlcmd;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @SqlCmd=CONCAT('CREATE TEMPORARY TABLE ',GT_DB,RUN,'.`tmp_table_tile_start_',WORKER_ID,'` (
					`DATA_DATE` DATE DEFAULT NULL,
					`DATA_HOUR` TINYINT(4) DEFAULT NULL,
					`FREQUENCY` SMALLINT(6) DEFAULT NULL,
					`UARFCN` MEDIUMINT(9) DEFAULT NULL,
					`INDOOR` TINYINT(4) DEFAULT NULL,
					`MOVING` TINYINT(4) DEFAULT NULL,
					`TILE_ID` BIGINT(20) DEFAULT NULL,
					`RNC_ID` MEDIUMINT(9) DEFAULT NULL,
					`CELL_INDOOR` TINYINT(4) DEFAULT NULL,
					`CLUSTER_ID` MEDIUMINT(9) DEFAULT NULL,
					`SITE_ID` VARCHAR(20) DEFAULT NULL,
					`CELL_ID` MEDIUMINT(9) DEFAULT NULL,
					`CALL_TYPE` TINYINT(4) DEFAULT NULL,
					`CALL_STATUS` TINYINT(4) DEFAULT NULL,
					`CELL_NAME` VARCHAR(50) CHARACTER SET utf8 DEFAULT NULL,
					`CALL_CNT` MEDIUMINT(9) DEFAULT ''0'',
					`BEST_RSCP_1` DOUBLE DEFAULT NULL,
					`BEST_ECN0_1` DOUBLE DEFAULT NULL,
					`BEST_RSCP_1_MED` DOUBLE DEFAULT NULL,
					`BEST_ECN0_1_MED` DOUBLE DEFAULT NULL,
					`SUB_DENSITY` MEDIUMINT(9) DEFAULT NULL,
					`ERLANG` DOUBLE DEFAULT NULL,
					`DL_DATA_THRU` DOUBLE DEFAULT NULL,
					`UL_DATA_THRU` DOUBLE DEFAULT NULL,
					`DL_TRAFFIC` DOUBLE DEFAULT NULL,
					`UL_TRAFFIC` DOUBLE DEFAULT NULL,
					`U_UL_DATA_THRU` DOUBLE DEFAULT NULL,
					`U_MAX_UL_DATA_THRU` DOUBLE DEFAULT NULL,
					`U_DL_DATA_THRU` DOUBLE DEFAULT NULL,
					`U_MAX_DL_DATA_THRU` DOUBLE DEFAULT NULL,
					`CALL_CNT_ACT` MEDIUMINT(9) DEFAULT ''0'',
					`BEST_RSCP_1_ACT` DOUBLE DEFAULT NULL,
					`BEST_ECN0_1_ACT` DOUBLE DEFAULT NULL,
					`BEST_RSCP_1_ACT_MED` DOUBLE DEFAULT NULL,
					`BEST_ECN0_1_ACT_MED` DOUBLE DEFAULT NULL,
					`RAB_NO_RESOURCE_AVAILABLE` MEDIUMINT(9) DEFAULT NULL,
					`RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON` MEDIUMINT(9) DEFAULT NULL,
					`RAB_OTHER` MEDIUMINT(9) DEFAULT NULL,
					`RRC_CONGESTION` MEDIUMINT(9) DEFAULT NULL,
					`RRC_UNSPECIFIED` MEDIUMINT(9) DEFAULT NULL,
					-- CALC FOR TILE AND CELL
					`BEST_RSCP_1_CNT` DOUBLE DEFAULT NULL,
					`BEST_ECN0_1_CNT` DOUBLE DEFAULT NULL,
					`U_UL_DATA_THRU_CNT` DOUBLE DEFAULT NULL,
					`U_DL_DATA_THRU_CNT` DOUBLE DEFAULT NULL,
					`BEST_RSCP_1_ACT_CNT` DOUBLE DEFAULT NULL,
					`BEST_ECN0_1_ACT_CNT` DOUBLE DEFAULT NULL,
					-- update
					`CELL_LON` DOUBLE DEFAULT NULL,
					`CELL_LAT` DOUBLE DEFAULT NULL,
					 `HOUR_CNT` INT UNSIGNED DEFAULT NULL,
					`NAS_SM_SUM` DOUBLE DEFAULT NULL,
					`NAS_GPRS_MM_ATTACH_SUM` DOUBLE DEFAULT NULL,
					`CALL_TYPE_10` MEDIUMINT(9) DEFAULT 0,
					`CALL_TYPE_11` MEDIUMINT(9) DEFAULT 0,
					`CALL_TYPE_12` MEDIUMINT(9) DEFAULT 0,
					`CALL_TYPE_13` MEDIUMINT(9) DEFAULT 0,
					`CALL_TYPE_14` MEDIUMINT(9) DEFAULT 0,
					`CALL_TYPE_16` MEDIUMINT(9) DEFAULT 0,
					`CALL_TYPE_18` MEDIUMINT(9) DEFAULT 0,
					`AUTH_REQUEST` INT(11) DEFAULT NULL,
					`AUTH_RESPONSE` INT(11) DEFAULT NULL,
					`AUTH_FAILURE` INT(11) DEFAULT NULL,
					`AUTH_REJECT` INT(11) DEFAULT NULL,
					`LU_REQUEST` INT(11) DEFAULT NULL,
					`LU_ACCEPT` INT(11) DEFAULT NULL,
					`LU_REJECT` INT(11) DEFAULT NULL,
					`AUTH_CIPH_REQUEST` INT(11) DEFAULT NULL,
					`AUTH_CIPH_RESPONSE` INT(11) DEFAULT NULL,
					`AUTH_CIPH_FAILURE` INT(11) DEFAULT NULL,
					`AUTH_CIPH_REJECT` INT(11) DEFAULT NULL,
					`RAU_REQUEST` INT(11) DEFAULT NULL,
					`RAU_ACCEPT` INT(11) DEFAULT NULL,
					`RAU_REJECT` INT(11) DEFAULT NULL,
					`PDP_ACTIVATION_REQUEST_CNT` INT(11) DEFAULT NULL,
					`PDP_ACTIVATION_ACCEPT_CNT` INT(11) DEFAULT NULL,
					`PDP_ACTIVATION_REJECT_CNT` INT(11) DEFAULT NULL,
					`RRC_2000000` INT(11) DEFAULT NULL,
					`RRC_2001000` INT(11) DEFAULT NULL,
					`RAB_1006000` INT(11) DEFAULT NULL,
					`RAB_1014000` INT(11) DEFAULT NULL,
					`RAB_1015000` INT(11) DEFAULT NULL,
					`RAB_1019000` INT(11) DEFAULT NULL,
					`RAB_1033000` INT(11) DEFAULT NULL,
					`RAB_1034000` INT(11) DEFAULT NULL,
					`RAB_1039000` INT(11) DEFAULT NULL,
					`RAB_1040000` INT(11) DEFAULT NULL,
					`RAB_1042000` INT(11) DEFAULT NULL,
					`RAB_1046000` INT(11) DEFAULT NULL,
					`RAB_5113000` INT(11) DEFAULT NULL,
					`RAB_5114000` INT(11) DEFAULT NULL,
					`RRC_RAB_OTHERS` INT(11) DEFAULT NULL,
					`CSFB_SETUP_TIME_SUM` INT(11) UNSIGNED DEFAULT ''0'',
					`CSFB_SETUP_TIME_CNT` INT(11) UNSIGNED DEFAULT ''0'',
					`CSFB_SETUP_TIME_MAX` MEDIUMINT(9)  DEFAULT ''0'',
					`CSFB_CALL_CNT` INT(11) UNSIGNED DEFAULT ''0'',
					`RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE` INT(11) UNSIGNED DEFAULT ''0'',
					`RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE` INT(11) UNSIGNED DEFAULT ''0'',
					`RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL` INT(11) UNSIGNED DEFAULT ''0'',
					`RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH` INT(11) UNSIGNED DEFAULT ''0'',
					`RAB_UNSPECIFIED_FAILURE` INT(11) UNSIGNED DEFAULT ''0'',
					`SMS_TYPE_01` INT(11) DEFAULT ''0'',
					`SMS_TYPE_10` INT(11) DEFAULT ''0'',
					`SMS_TYPE_11` INT(11) DEFAULT ''0'',
					`SMS_TYPE_00` INT(11) DEFAULT ''0''
				) ENGINE=MYISAM DEFAULT CHARSET=latin1;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Insert into tmp_table_tile_start ', NOW());
	
	SET @SqlCmd=CONCAT('INSERT INTO  ',GT_DB,RUN,'.`tmp_table_tile_start_',WORKER_ID,'`
				(`DATA_DATE`,`DATA_HOUR`,`FREQUENCY`,`UARFCN`,`INDOOR`,`MOVING`,`TILE_ID`,`RNC_ID`,`CELL_INDOOR`,`CLUSTER_ID`,
				`SITE_ID`,`CELL_ID`,`CALL_TYPE`,`CALL_STATUS`,`CALL_CNT`,`BEST_RSCP_1`,`BEST_ECN0_1`,`BEST_RSCP_1_MED`,`BEST_ECN0_1_MED`,
				`SUB_DENSITY`,`ERLANG`,`DL_DATA_THRU`,`UL_DATA_THRU`,`DL_TRAFFIC`,`UL_TRAFFIC`,`U_UL_DATA_THRU`,`U_MAX_UL_DATA_THRU`,
				`U_DL_DATA_THRU`,`U_MAX_DL_DATA_THRU`,`CALL_CNT_ACT`,`BEST_RSCP_1_ACT`,`BEST_ECN0_1_ACT`,`BEST_RSCP_1_ACT_MED`,`BEST_ECN0_1_ACT_MED`,
				`RAB_NO_RESOURCE_AVAILABLE`,`RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON`,`RAB_OTHER`,`RRC_CONGESTION`,`RRC_UNSPECIFIED`,
				`BEST_RSCP_1_CNT`,`BEST_ECN0_1_CNT`,`U_UL_DATA_THRU_CNT`,`U_DL_DATA_THRU_CNT`,`BEST_RSCP_1_ACT_CNT`,`BEST_ECN0_1_ACT_CNT`,
				`CELL_LON`,`CELL_LAT`
				,NAS_SM_SUM,NAS_GPRS_MM_ATTACH_SUM,CALL_TYPE_10,CALL_TYPE_11,CALL_TYPE_12,CALL_TYPE_13,CALL_TYPE_14,CALL_TYPE_16,CALL_TYPE_18
				,AUTH_REQUEST,AUTH_RESPONSE,AUTH_FAILURE,AUTH_REJECT,LU_REQUEST,LU_ACCEPT,LU_REJECT,AUTH_CIPH_REQUEST,AUTH_CIPH_RESPONSE,AUTH_CIPH_FAILURE,AUTH_CIPH_REJECT,RAU_REQUEST,RAU_ACCEPT,RAU_REJECT
				,PDP_ACTIVATION_REQUEST_CNT,PDP_ACTIVATION_ACCEPT_CNT,PDP_ACTIVATION_REJECT_CNT
				,RRC_2000000,RRC_2001000,RAB_1006000,RAB_1014000,RAB_1015000,RAB_1019000,RAB_1033000,RAB_1034000,RAB_1039000,RAB_1040000,RAB_1042000,RAB_1046000,RAB_5113000,RAB_5114000,RRC_RAB_OTHERS
				,CSFB_SETUP_TIME_SUM,CSFB_SETUP_TIME_CNT,CSFB_SETUP_TIME_MAX,CSFB_CALL_CNT
				,RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
				,RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,RAB_UNSPECIFIED_FAILURE
				,SMS_TYPE_01,SMS_TYPE_10,SMS_TYPE_11,SMS_TYPE_00
				 )
			    SELECT
					 DATA_DATE
					, DATA_HOUR
					, POS_FIRST_FREQUENCY AS FREQUENCY
					, POS_FIRST_UARFCN AS UARFCN
					, INDOOR
					, MOVING
					, gt_covmo_proj_geohash_to_hex_geohash(POS_FIRST_LOC, ',@ZOOM_LEVEL,') AS TILE_ID
					, POS_FIRST_RNC AS RNC_ID
					, POS_FIRST_CELL_INDOOR AS CELL_INDOOR
					, POS_FIRST_CLUSTER AS CLUSTER_ID
					, POS_FIRST_SITE AS SITE_ID
					, POS_FIRST_CELL AS CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
					, COUNT(POS_FIRST_CELL) AS FIRST_CALL_CNT
					, SUM(POS_FIRST_RSCP) AS BEST_RSCP_1
					, SUM(POS_FIRST_ECN0) AS BEST_ECN0_1
					, median(POS_FIRST_RSCP)BEST_RSCP_1_MED
					, median(POS_FIRST_ECN0)BEST_ECN0_1_MED
					, COUNT(DISTINCT IMSI) AS SUB_DENSITY
					,SUM(RRC_CONNECT_DURATION/1000)/3600 AS ERLANG
					,SUM(DL_TRAFFIC_VOLUME)*8/3600 AS DL_DATA_THRU
					,SUM(UL_TRAFFIC_VOLUME)*8/3600 AS UL_DATA_THRU
					,SUM(DL_TRAFFIC_VOLUME) AS DL_TRAFFIC
					,SUM(UL_TRAFFIC_VOLUME) AS UL_TRAFFIC
					,SUM(UL_THROUGHPUT_AVG*UL_THROUGHPUT_EVENT_CNT) AS U_UL_DATA_THRU
					,MAX(UL_THROUGHPUT_AVG) AS U_MAX_UL_DATA_THRU
					,SUM(DL_THROUGHPUT_AVG*DL_THROUGHPUT_EVENT_CNT) AS U_DL_DATA_THRU
					,MAX(DL_THROUGHPUT_AVG) AS U_MAX_DL_DATA_THRU
					,SUM(CASE `SIMULATED` WHEN 0 THEN 1 ELSE 0 END) AS CALL_CNT_ACT
					,SUM(CASE `SIMULATED` WHEN 0 THEN POS_FIRST_RSCP ELSE NULL END) AS BEST_RSCP_1_ACT
					,SUM(CASE `SIMULATED` WHEN 0 THEN POS_FIRST_ECN0 ELSE NULL END) AS BEST_ECN0_1_ACT
					,median(CASE `SIMULATED` WHEN 0 THEN POS_FIRST_RSCP ELSE NULL END) AS BEST_RSCP_1_ACT_MED
					,median(CASE `SIMULATED` WHEN 0 THEN POS_FIRST_ECN0 ELSE NULL END) AS BEST_ECN0_1_ACT_MED
					,SUM(IF(RAB_RRC_CAUSE_STR=''RAB_No_resource_available'',1,NULL)) AS RAB_NO_RESOURCE_AVAILABLE
					,SUM(IF(RAB_RRC_CAUSE_STR=''RAB_Release_due_to_utran_generated_reason'',1,NULL)) AS RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON
					,SUM(IF(RAB_RRC_CAUSE_STR=''RAB_Other'',1,NULL)) AS RAB_OTHER
					,SUM(IF(RAB_RRC_CAUSE_STR=''RRC_Congestion'',1,NULL)) AS RRC_CONGESTION
					,SUM(IF(RAB_RRC_CAUSE_STR=''RRC_Unspecified'',1,NULL)) AS RRC_UNSPECIFIED
					-- CALC FOR TILE AND CELL
					,COUNT(POS_FIRST_RSCP) AS BEST_RSCP_1_CNT
					,COUNT(POS_FIRST_ECN0) AS BEST_ECN0_1_CNT
					,SUM(UL_THROUGHPUT_EVENT_CNT) AS U_UL_DATA_THRU_CNT
					,SUM(DL_THROUGHPUT_EVENT_CNT) AS U_DL_DATA_THRU_CNT
					,SUM(CASE WHEN `SIMULATED` = 0 AND POS_FIRST_RSCP IS NOT NULL THEN 1 ELSE 0 END) AS BEST_RSCP_1_ACT_CNT
					,SUM(CASE WHEN `SIMULATED` = 0 AND POS_FIRST_ECN0 IS NOT NULL THEN 1 ELSE 0 END) AS BEST_ECN0_1_ACT_CNT
					,NULL AS CELL_LON 
					,NULL AS CELL_LAT
					,SUM(NAS_SM) AS NAS_SM_SUM
					,SUM(NAS_GPRS_MM_ATTACH) AS NAS_GPRS_MM_ATTACH_SUM
					,SUM(CASE WHEN CALL_TYPE IN (10) THEN 1 ELSE  0 END ) CALL_TYPE_10
					,SUM(CASE WHEN CALL_TYPE IN (11) THEN 1 ELSE  0 END ) CALL_TYPE_11
					,SUM(CASE WHEN CALL_TYPE IN (12) THEN 1 ELSE  0 END ) CALL_TYPE_12
					,SUM(CASE WHEN CALL_TYPE IN (13) THEN 1 ELSE  0 END ) CALL_TYPE_13
					,SUM(CASE WHEN CALL_TYPE IN (14) THEN 1 ELSE  0 END ) CALL_TYPE_14
					,SUM(CASE WHEN CALL_TYPE IN (16) THEN 1 ELSE  0 END ) CALL_TYPE_16
					,SUM(CASE WHEN CALL_TYPE IN (18) THEN 1 ELSE  0 END ) CALL_TYPE_18
					,SUM(AUTH_REQUEST) AS AUTH_REQUEST
					,SUM(AUTH_RESPONSE) AS AUTH_RESPONSE
					,SUM(AUTH_FAILURE) AS AUTH_FAILURE
					,SUM(AUTH_REJECT) AS AUTH_REJECT
					,SUM(LU_REQUEST) AS LU_REQUEST
					,SUM(LU_ACCEPT) AS LU_ACCEPT
					,SUM(LU_REJECT) AS LU_REJECT
					,SUM(AUTH_CIPH_REQUEST) AS AUTH_CIPH_REQUEST
					,SUM(AUTH_CIPH_RESPONSE) AS AUTH_CIPH_RESPONSE
					,SUM(AUTH_CIPH_FAILURE) AS AUTH_CIPH_FAILURE
					,SUM(AUTH_CIPH_REJECT) AS AUTH_CIPH_REJECT
					,SUM(RAU_REQUEST) AS RAU_REQUEST
					,SUM(RAU_ACCEPT) AS RAU_ACCEPT
					,SUM(RAU_REJECT) AS RAU_REJECT
					,SUM(PDP_ACTIVATION_REQUEST) AS PDP_ACTIVATION_REQUEST_CNT
					,SUM(PDP_ACTIVATION_ACCEPT) AS PDP_ACTIVATION_ACCEPT_CNT
					,SUM(PDP_ACTIVATION_REJECT) AS PDP_ACTIVATION_REJECT_CNT
					,SUM(IF(RRC_CONN_REJ_CAUSE = 2000000, 1, 0)) AS RRC_2000000
					,SUM(IF(RRC_CONN_REJ_CAUSE = 2001000, 1, 0)) AS RRC_2001000
					,SUM(IF(RAB_ASSIGN_FAIL_CAUSE = 1006000,1,0)) AS RAB_1006000
					,SUM(IF(RAB_ASSIGN_FAIL_CAUSE = 1014000,1,0)) AS RAB_1014000
					,SUM(IF(RAB_ASSIGN_FAIL_CAUSE = 1015000,1,0)) AS RAB_1015000
					,SUM(IF(RAB_ASSIGN_FAIL_CAUSE = 1019000,1,0)) AS RAB_1019000
					,SUM(IF(RAB_ASSIGN_FAIL_CAUSE = 1033000,1,0)) AS RAB_1033000
					,SUM(IF(RAB_ASSIGN_FAIL_CAUSE = 1034000,1,0)) AS RAB_1034000
					,SUM(IF(RAB_ASSIGN_FAIL_CAUSE = 1039000,1,0)) AS RAB_1039000
					,SUM(IF(RAB_ASSIGN_FAIL_CAUSE = 1040000,1,0)) AS RAB_1040000
					,SUM(IF(RAB_ASSIGN_FAIL_CAUSE = 1042000,1,0)) AS RAB_1042000
					,SUM(IF(RAB_ASSIGN_FAIL_CAUSE = 1046000,1,0)) AS RAB_1046000
					,SUM(IF(RAB_ASSIGN_FAIL_CAUSE = 5113000,1,0)) AS RAB_5113000
					,SUM(IF(RAB_ASSIGN_FAIL_CAUSE = 5114000,1,0)) AS RAB_5114000
					,SUM(IF(RRC_CONN_REJ_CAUSE NOT IN (2000000, 2001000) 
						AND RAB_ASSIGN_FAIL_CAUSE NOT IN (1011000,1016000,1041000,1045000,1052000,3083000,5116000,
						    1006000,1014000,1015000,1019000,1033000,1034000,1039000,1040000,1042000,1046000,5113000,5114000),1,0)) 
					    AS RRC_RAB_OTHERS
					,IFNULL(SUM(CASE WHEN CALL_SETUP_TIME IS NOT NULL AND CSFB_IN_INDICATOR > 0 THEN CALL_SETUP_TIME ELSE 0 END),0) AS CSFB_SETUP_TIME_SUM
					,IFNULL(SUM(CASE WHEN CALL_SETUP_TIME IS NOT NULL AND CSFB_IN_INDICATOR > 0 THEN 1 ELSE 0 END),0) AS CSFB_SETUP_TIME_CNT
					,IFNULL(MAX(CASE WHEN CSFB_IN_INDICATOR > 0 THEN CALL_SETUP_TIME ELSE 0 END),0) AS CSFB_SETUP_TIME_MAX
					,IFNULL(SUM(CASE WHEN CSFB_IN_INDICATOR > 0 THEN 1 ELSE 0 END),0) AS CSFB_CALL_CNT
					,SUM(IF(RAB_ASSIGN_FAIL_CAUSE = 1014000,1,0)) AS RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE
					,SUM(IF(RAB_ASSIGN_FAIL_CAUSE IN (1033000,1034000),1,0)) AS RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
					,SUM(IF(RAB_ASSIGN_FAIL_CAUSE = 1053000,1,0)) AS RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL
					,SUM(IF(RAB_ASSIGN_FAIL_CAUSE = 2066000,1,0)) AS RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH
					,SUM(IF(RAB_ASSIGN_FAIL_CAUSE = 5115000,1,0)) AS RAB_UNSPECIFIED_FAILURE
					,SUM(IF(SMS_IND = 1,1,0)) AS SMS_TYPE_01
					,SUM(IF(SMS_IND = 10,1,0)) AS SMS_TYPE_10
					,SUM(IF(SMS_IND = 11,1,0)) AS SMS_TYPE_11
					,SUM(IF(SMS_IND = 0,1,0)) AS SMS_TYPE_00
				FROM ',GT_DB,RUN,'.table_call
				WHERE POS_FIRST_RNC =',RNC_ID,'
				AND DATA_HOUR >= ',STARTHOUR,' AND DATA_HOUR < ',ENDHOUR,'
				GROUP BY  DATA_DATE
					, DATA_HOUR
-- 					, POS_FIRST_FREQUENCY 
-- 					, POS_FIRST_UARFCN 
					, INDOOR
					, MOVING
					, gt_covmo_proj_geohash_to_hex_geohash(POS_FIRST_LOC, ',@ZOOM_LEVEL,')
					, POS_FIRST_RNC
-- 					, POS_FIRST_CELL_INDOOR
-- 					, POS_FIRST_CLUSTER
-- 					, POS_FIRST_SITE
					, POS_FIRST_CELL
					, CALL_TYPE 
					, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Update FREQUENCY, UARFCN, CELL_LON, CELL_LAT in table_tile_start ', NOW());
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.`tmp_table_tile_start_',WORKER_ID,'` A, 
				    ',CURRENT_NT_DB,'.nt_current B
			     SET A.CELL_LON=B.LONGITUDE
				,A.CELL_LAT=B.LATITUDE
				,A.CELL_NAME=B.CELL_NAME
				WHERE A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
		
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Insert into table_tile_start ', NOW());
	SET @SqlCmd=CONCAT('INSERT INTO  ',GT_DB,RUN,'.table_tile_start
				(DATA_DATE,DATA_HOUR,`FREQUENCY`,`UARFCN`,INDOOR,MOVING,TILE_ID,RNC_ID,`CELL_INDOOR`,CLUSTER_ID,SITE_ID,CELL_ID,
				CALL_TYPE,CALL_STATUS,CELL_NAME,CALL_CNT,BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,SUB_DENSITY,ERLANG,DL_DATA_THRU,UL_DATA_THRU,DL_TRAFFIC,
				UL_TRAFFIC,U_UL_DATA_THRU,U_MAX_UL_DATA_THRU,U_DL_DATA_THRU,U_MAX_DL_DATA_THRU,CALL_CNT_ACT,BEST_RSCP_1_ACT,BEST_ECN0_1_ACT,BEST_RSCP_1_ACT_MED,BEST_ECN0_1_ACT_MED,
				RAB_NO_RESOURCE_AVAILABLE,RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,RAB_OTHER,RRC_CONGESTION,RRC_UNSPECIFIED, CELL_LON,CELL_LAT,
				BEST_RSCP_1_CNT,BEST_ECN0_1_CNT,U_UL_DATA_THRU_CNT,U_DL_DATA_THRU_CNT,BEST_RSCP_1_ACT_CNT,BEST_ECN0_1_ACT_CNT
				,HOUR_CNT,NAS_SM_SUM,NAS_GPRS_MM_ATTACH_SUM,CALL_TYPE_10,CALL_TYPE_11,CALL_TYPE_12,CALL_TYPE_13,CALL_TYPE_14,CALL_TYPE_16,CALL_TYPE_18
				,AUTH_REQUEST,AUTH_RESPONSE,AUTH_FAILURE,AUTH_REJECT,LU_REQUEST,LU_ACCEPT,LU_REJECT,AUTH_CIPH_REQUEST,AUTH_CIPH_RESPONSE,AUTH_CIPH_FAILURE,AUTH_CIPH_REJECT,RAU_REQUEST,RAU_ACCEPT,RAU_REJECT
				,PDP_ACTIVATION_REQUEST_CNT,PDP_ACTIVATION_ACCEPT_CNT,PDP_ACTIVATION_REJECT_CNT
				,RRC_2000000,RRC_2001000,RAB_1006000,RAB_1014000,RAB_1015000,RAB_1019000,RAB_1033000,RAB_1034000,RAB_1039000,RAB_1040000,RAB_1042000,RAB_1046000,RAB_5113000,RAB_5114000,RRC_RAB_OTHERS
				,CSFB_SETUP_TIME_SUM,CSFB_SETUP_TIME_CNT,CSFB_SETUP_TIME_MAX,CSFB_CALL_CNT
				,RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
				,RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,RAB_UNSPECIFIED_FAILURE
				,SMS_TYPE_01,SMS_TYPE_10,SMS_TYPE_11,SMS_TYPE_00
	)
			SELECT 
				DATA_DATE,DATA_HOUR,`FREQUENCY`,`UARFCN`,INDOOR,MOVING,TILE_ID,RNC_ID,`CELL_INDOOR`,CLUSTER_ID,SITE_ID,CELL_ID,
				CALL_TYPE,CALL_STATUS,CELL_NAME,CALL_CNT,BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,SUB_DENSITY,ERLANG,DL_DATA_THRU,UL_DATA_THRU,DL_TRAFFIC,
				UL_TRAFFIC,U_UL_DATA_THRU,U_MAX_UL_DATA_THRU,U_DL_DATA_THRU,U_MAX_DL_DATA_THRU,CALL_CNT_ACT,BEST_RSCP_1_ACT,BEST_ECN0_1_ACT,BEST_RSCP_1_ACT_MED,BEST_ECN0_1_ACT_MED,
				RAB_NO_RESOURCE_AVAILABLE,RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,RAB_OTHER,RRC_CONGESTION,RRC_UNSPECIFIED, CELL_LON,CELL_LAT,
				BEST_RSCP_1_CNT,BEST_ECN0_1_CNT,U_UL_DATA_THRU_CNT,U_DL_DATA_THRU_CNT,BEST_RSCP_1_ACT_CNT,BEST_ECN0_1_ACT_CNT
				,1,NAS_SM_SUM,NAS_GPRS_MM_ATTACH_SUM,CALL_TYPE_10,CALL_TYPE_11,CALL_TYPE_12,CALL_TYPE_13,CALL_TYPE_14,CALL_TYPE_16,CALL_TYPE_18
				,AUTH_REQUEST,AUTH_RESPONSE,AUTH_FAILURE,AUTH_REJECT,LU_REQUEST,LU_ACCEPT,LU_REJECT,AUTH_CIPH_REQUEST,AUTH_CIPH_RESPONSE,AUTH_CIPH_FAILURE,AUTH_CIPH_REJECT,RAU_REQUEST,RAU_ACCEPT,RAU_REJECT
				,PDP_ACTIVATION_REQUEST_CNT,PDP_ACTIVATION_ACCEPT_CNT,PDP_ACTIVATION_REJECT_CNT
				,RRC_2000000,RRC_2001000,RAB_1006000,RAB_1014000,RAB_1015000,RAB_1019000,RAB_1033000,RAB_1034000,RAB_1039000,RAB_1040000,RAB_1042000,RAB_1046000,RAB_5113000,RAB_5114000,RRC_RAB_OTHERS
				,CSFB_SETUP_TIME_SUM,CSFB_SETUP_TIME_CNT,CSFB_SETUP_TIME_MAX,CSFB_CALL_CNT
				,RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
				,RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,RAB_UNSPECIFIED_FAILURE
				,SMS_TYPE_01,SMS_TYPE_10,SMS_TYPE_11,SMS_TYPE_00
			FROM ',GT_DB,RUN,'.`tmp_table_tile_start_',WORKER_ID,'`;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Insert into table_tile_start_t ', NOW());
	SET @SqlCmd=CONCAT('INSERT INTO  ',GT_DB,RUN,'.table_tile_start_t
				(DATA_DATE,DATA_HOUR,`FREQUENCY`,`UARFCN`,INDOOR,MOVING,TILE_ID,RNC_ID,
				CALL_TYPE,CALL_STATUS,CALL_CNT,BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,SUB_DENSITY,ERLANG,DL_DATA_THRU,UL_DATA_THRU,DL_TRAFFIC,
				UL_TRAFFIC,U_UL_DATA_THRU,U_MAX_UL_DATA_THRU,U_DL_DATA_THRU,U_MAX_DL_DATA_THRU,CALL_CNT_ACT,BEST_RSCP_1_ACT,BEST_ECN0_1_ACT,BEST_RSCP_1_ACT_MED,BEST_ECN0_1_ACT_MED,
				RAB_NO_RESOURCE_AVAILABLE,RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,RAB_OTHER,RRC_CONGESTION,RRC_UNSPECIFIED,
				BEST_RSCP_1_CNT,BEST_ECN0_1_CNT,U_UL_DATA_THRU_CNT,U_DL_DATA_THRU_CNT,BEST_RSCP_1_ACT_CNT,BEST_ECN0_1_ACT_CNT
				,HOUR_CNT,NAS_SM_SUM,NAS_GPRS_MM_ATTACH_SUM,CALL_TYPE_10,CALL_TYPE_11,CALL_TYPE_12,CALL_TYPE_13,CALL_TYPE_14,CALL_TYPE_16,CALL_TYPE_18
				,AUTH_REQUEST,AUTH_RESPONSE,AUTH_FAILURE,AUTH_REJECT,LU_REQUEST,LU_ACCEPT,LU_REJECT,AUTH_CIPH_REQUEST,AUTH_CIPH_RESPONSE,AUTH_CIPH_FAILURE,AUTH_CIPH_REJECT,RAU_REQUEST,RAU_ACCEPT,RAU_REJECT
				,PDP_ACTIVATION_REQUEST_CNT,PDP_ACTIVATION_ACCEPT_CNT,PDP_ACTIVATION_REJECT_CNT
				,RRC_2000000,RRC_2001000,RAB_1006000,RAB_1014000,RAB_1015000,RAB_1019000,RAB_1033000,RAB_1034000,RAB_1039000,RAB_1040000,RAB_1042000,RAB_1046000,RAB_5113000,RAB_5114000,RRC_RAB_OTHERS
				,CSFB_SETUP_TIME_SUM,CSFB_SETUP_TIME_CNT,CSFB_SETUP_TIME_MAX,CSFB_CALL_CNT
				,RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
				,RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,RAB_UNSPECIFIED_FAILURE
				,SMS_TYPE_01,SMS_TYPE_10,SMS_TYPE_11,SMS_TYPE_00
	)
			    SELECT
					 DATA_DATE
					, DATA_HOUR
					, FREQUENCY
					, UARFCN
					, INDOOR
					, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_INDOOR
					#, CLUSTER_ID
					#, SITE_ID
					#, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
					, SUM(CALL_CNT) AS CALL_CNT
					, SUM(BEST_RSCP_1) AS BEST_RSCP_1
					, SUM(BEST_ECN0_1) AS BEST_ECN0_1
					, NULL #median(BEST_RSCP_1_MED)
					, NULL #median(BEST_ECN0_1_MED)
					, NULL
					, SUM(ERLANG)
					, SUM(DL_DATA_THRU)
					, SUM(UL_DATA_THRU)
					, SUM(DL_TRAFFIC)
					, SUM(UL_TRAFFIC)
					, SUM(U_UL_DATA_THRU) AS U_UL_DATA_THRU
					, MAX(U_MAX_UL_DATA_THRU)
					, SUM(U_DL_DATA_THRU) AS U_DL_DATA_THRU
					, MAX(U_MAX_DL_DATA_THRU)
					, SUM(CALL_CNT_ACT)
					, SUM(BEST_RSCP_1_ACT) AS BEST_RSCP_1_ACT
					, SUM(BEST_ECN0_1_ACT) AS BEST_ECN0_1_ACT
					, NULL #median(BEST_RSCP_1_ACT_MED)
					, NULL #median(BEST_ECN0_1_ACT_MED)
					, SUM(RAB_NO_RESOURCE_AVAILABLE)
					, SUM(RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON)
					, SUM(RAB_OTHER)
					, SUM(RRC_CONGESTION)
					, SUM(RRC_UNSPECIFIED)
					-- CNT
					, SUM(BEST_RSCP_1_CNT)
					, SUM(BEST_ECN0_1_CNT)
					, SUM(U_UL_DATA_THRU_CNT)
					, SUM(U_DL_DATA_THRU_CNT)
					, SUM(BEST_RSCP_1_ACT_CNT)
					, SUM(BEST_ECN0_1_ACT_CNT)
					,1 AS HOUR_CNT
					,SUM(NAS_SM_SUM) AS NAS_SM_SUM
					,SUM(NAS_GPRS_MM_ATTACH_SUM) AS NAS_GPRS_MM_ATTACH_SUM
					,SUM(CALL_TYPE_10) AS CALL_TYPE_10
					,SUM(CALL_TYPE_11) AS CALL_TYPE_11
					,SUM(CALL_TYPE_12) AS CALL_TYPE_12
					,SUM(CALL_TYPE_13) AS CALL_TYPE_13
					,SUM(CALL_TYPE_14) AS CALL_TYPE_14
					,SUM(CALL_TYPE_16) AS CALL_TYPE_16
					,SUM(CALL_TYPE_18) AS CALL_TYPE_18
					,SUM(AUTH_REQUEST) AS AUTH_REQUEST
					,SUM(AUTH_RESPONSE) AS AUTH_RESPONSE
					,SUM(AUTH_FAILURE) AS AUTH_FAILURE
					,SUM(AUTH_REJECT) AS AUTH_REJECT
					,SUM(LU_REQUEST) AS LU_REQUEST
					,SUM(LU_ACCEPT) AS LU_ACCEPT
					,SUM(LU_REJECT) AS LU_REJECT
					,SUM(AUTH_CIPH_REQUEST) AS AUTH_CIPH_REQUEST
					,SUM(AUTH_CIPH_RESPONSE) AS AUTH_CIPH_RESPONSE
					,SUM(AUTH_CIPH_FAILURE) AS AUTH_CIPH_FAILURE
					,SUM(AUTH_CIPH_REJECT) AS AUTH_CIPH_REJECT
					,SUM(RAU_REQUEST) AS RAU_REQUEST
					,SUM(RAU_ACCEPT) AS RAU_ACCEPT
					,SUM(RAU_REJECT) AS RAU_REJECT
					,SUM(PDP_ACTIVATION_REQUEST_CNT) AS PDP_ACTIVATION_REQUEST_CNT
					,SUM(PDP_ACTIVATION_ACCEPT_CNT) AS PDP_ACTIVATION_ACCEPT_CNT
					,SUM(PDP_ACTIVATION_REJECT_CNT) AS PDP_ACTIVATION_REJECT_CNT
					,SUM(RRC_2000000) AS RRC_2000000
					,SUM(RRC_2001000) AS RRC_2001000
					,SUM(RAB_1006000) AS RAB_1006000
					,SUM(RAB_1014000) AS RAB_1014000
					,SUM(RAB_1015000) AS RAB_1015000
					,SUM(RAB_1019000) AS RAB_1019000
					,SUM(RAB_1033000) AS RAB_1033000
					,SUM(RAB_1034000) AS RAB_1034000
					,SUM(RAB_1039000) AS RAB_1039000
					,SUM(RAB_1040000) AS RAB_1040000
					,SUM(RAB_1042000) AS RAB_1042000
					,SUM(RAB_1046000) AS RAB_1046000
					,SUM(RAB_5113000) AS RAB_5113000
					,SUM(RAB_5114000) AS RAB_5114000
					,SUM(RRC_RAB_OTHERS) AS RRC_RAB_OTHERS
					,SUM(CSFB_SETUP_TIME_SUM) AS CSFB_SETUP_TIME_SUM
					,SUM(CSFB_SETUP_TIME_CNT) AS CSFB_SETUP_TIME_CNT
					,MAX(CSFB_SETUP_TIME_MAX) AS CSFB_SETUP_TIME_MAX
					,SUM(CSFB_CALL_CNT) AS CSFB_CALL_CNT
					,SUM(RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE) AS RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE
					,SUM(RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE) AS RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
					,SUM(RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL) AS RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL
					,SUM(RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH) AS RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH
					,SUM(RAB_UNSPECIFIED_FAILURE) AS RAB_UNSPECIFIED_FAILURE
					,SUM(SMS_TYPE_01) AS SMS_TYPE_01
					,SUM(SMS_TYPE_10) AS SMS_TYPE_10
					,SUM(SMS_TYPE_11) AS SMS_TYPE_11
					,SUM(SMS_TYPE_00) AS SMS_TYPE_00
				FROM ',GT_DB,RUN,'.`tmp_table_tile_start_',WORKER_ID,'`
				GROUP BY   DATA_DATE
					, DATA_HOUR
-- 					, FREQUENCY
-- 					, UARFCN
					, INDOOR
					, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_INDOOR
					#, CLUSTER_ID
					#, SITE_ID
					#, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
				ORDER BY NULL;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Insert into table_tile_start_c ', NOW());
	SET @SqlCmd=CONCAT('INSERT INTO  ',GT_DB,RUN,'.table_tile_start_c
				(DATA_DATE,DATA_HOUR,`FREQUENCY`,`UARFCN`,INDOOR,MOVING,RNC_ID,`CELL_INDOOR`,CLUSTER_ID,SITE_ID,CELL_ID,
				CALL_TYPE,CALL_STATUS,CELL_NAME,CALL_CNT,BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,SUB_DENSITY,ERLANG,DL_DATA_THRU,UL_DATA_THRU,DL_TRAFFIC,
				UL_TRAFFIC,U_UL_DATA_THRU,U_MAX_UL_DATA_THRU,U_DL_DATA_THRU,U_MAX_DL_DATA_THRU,CALL_CNT_ACT,BEST_RSCP_1_ACT,BEST_ECN0_1_ACT,BEST_RSCP_1_ACT_MED,BEST_ECN0_1_ACT_MED,
				RAB_NO_RESOURCE_AVAILABLE,RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,RAB_OTHER,RRC_CONGESTION,RRC_UNSPECIFIED, CELL_LON,CELL_LAT,
				BEST_RSCP_1_CNT,BEST_ECN0_1_CNT,U_UL_DATA_THRU_CNT,U_DL_DATA_THRU_CNT,BEST_RSCP_1_ACT_CNT,BEST_ECN0_1_ACT_CNT
				,HOUR_CNT,NAS_SM_SUM,NAS_GPRS_MM_ATTACH_SUM,CALL_TYPE_10,CALL_TYPE_11,CALL_TYPE_12,CALL_TYPE_13,CALL_TYPE_14,CALL_TYPE_16,CALL_TYPE_18
				,AUTH_REQUEST,AUTH_RESPONSE,AUTH_FAILURE,AUTH_REJECT,LU_REQUEST,LU_ACCEPT,LU_REJECT,AUTH_CIPH_REQUEST,AUTH_CIPH_RESPONSE,AUTH_CIPH_FAILURE,AUTH_CIPH_REJECT,RAU_REQUEST,RAU_ACCEPT,RAU_REJECT
				,PDP_ACTIVATION_REQUEST_CNT,PDP_ACTIVATION_ACCEPT_CNT,PDP_ACTIVATION_REJECT_CNT
				,RRC_2000000,RRC_2001000,RAB_1006000,RAB_1014000,RAB_1015000,RAB_1019000,RAB_1033000,RAB_1034000,RAB_1039000,RAB_1040000,RAB_1042000,RAB_1046000,RAB_5113000,RAB_5114000,RRC_RAB_OTHERS
				,CSFB_SETUP_TIME_SUM,CSFB_SETUP_TIME_CNT,CSFB_SETUP_TIME_MAX,CSFB_CALL_CNT
				,RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
				,RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,RAB_UNSPECIFIED_FAILURE
				,SMS_TYPE_01,SMS_TYPE_10,SMS_TYPE_11,SMS_TYPE_00
	)
			    SELECT
					 DATA_DATE
					, DATA_HOUR
					, FREQUENCY
					, UARFCN
					, INDOOR
					, MOVING
					#, TILE_ID
					, RNC_ID
					, CELL_INDOOR
					, CLUSTER_ID
					, SITE_ID
					, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
					, CELL_NAME
					, SUM(CALL_CNT) AS CALL_CNT
					, SUM(BEST_RSCP_1) AS BEST_RSCP_1
					, SUM(BEST_ECN0_1) AS BEST_ECN0_1
					, NULL #median(BEST_RSCP_1_MED)
					, NULL #median(BEST_ECN0_1_MED)
					, NULL
					, SUM(ERLANG)
					, SUM(DL_DATA_THRU)
					, SUM(UL_DATA_THRU)
					, SUM(DL_TRAFFIC)
					, SUM(UL_TRAFFIC)
					, SUM(U_UL_DATA_THRU) AS U_UL_DATA_THRU
					, MAX(U_MAX_UL_DATA_THRU)
					, SUM(U_DL_DATA_THRU) AS U_DL_DATA_THRU
					, MAX(U_MAX_DL_DATA_THRU)
					, SUM(CALL_CNT_ACT)
					, SUM(BEST_RSCP_1_ACT) AS BEST_RSCP_1_ACT
					, SUM(BEST_ECN0_1_ACT) AS BEST_ECN0_1_ACT
					, NULL #median(BEST_RSCP_1_ACT_MED)
					, NULL #median(BEST_ECN0_1_ACT_MED)
					, SUM(RAB_NO_RESOURCE_AVAILABLE)
					, SUM(RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON)
					, SUM(RAB_OTHER)
					, SUM(RRC_CONGESTION)
					, SUM(RRC_UNSPECIFIED)
					, CELL_LON,CELL_LAT
					-- CNT
					, SUM(BEST_RSCP_1_CNT)
					, SUM(BEST_ECN0_1_CNT)
					, SUM(U_UL_DATA_THRU_CNT)
					, SUM(U_DL_DATA_THRU_CNT)
					, SUM(BEST_RSCP_1_ACT_CNT)
					, SUM(BEST_ECN0_1_ACT_CNT)
 					,1 AS HOUR_CNT
					,SUM(NAS_SM_SUM) AS NAS_SM_SUM
					,SUM(NAS_GPRS_MM_ATTACH_SUM) AS NAS_GPRS_MM_ATTACH_SUM
					,SUM(CALL_TYPE_10) AS CALL_TYPE_10
					,SUM(CALL_TYPE_11) AS CALL_TYPE_11
					,SUM(CALL_TYPE_12) AS CALL_TYPE_12
					,SUM(CALL_TYPE_13) AS CALL_TYPE_13
					,SUM(CALL_TYPE_14) AS CALL_TYPE_14
					,SUM(CALL_TYPE_16) AS CALL_TYPE_16
					,SUM(CALL_TYPE_18) AS CALL_TYPE_18
					,SUM(AUTH_REQUEST) AS AUTH_REQUEST
					,SUM(AUTH_RESPONSE) AS AUTH_RESPONSE
					,SUM(AUTH_FAILURE) AS AUTH_FAILURE
					,SUM(AUTH_REJECT) AS AUTH_REJECT
					,SUM(LU_REQUEST) AS LU_REQUEST
					,SUM(LU_ACCEPT) AS LU_ACCEPT
					,SUM(LU_REJECT) AS LU_REJECT
					,SUM(AUTH_CIPH_REQUEST) AS AUTH_CIPH_REQUEST
					,SUM(AUTH_CIPH_RESPONSE) AS AUTH_CIPH_RESPONSE
					,SUM(AUTH_CIPH_FAILURE) AS AUTH_CIPH_FAILURE
					,SUM(AUTH_CIPH_REJECT) AS AUTH_CIPH_REJECT
					,SUM(RAU_REQUEST) AS RAU_REQUEST
					,SUM(RAU_ACCEPT) AS RAU_ACCEPT
					,SUM(RAU_REJECT) AS RAU_REJECT
					,SUM(PDP_ACTIVATION_REQUEST_CNT) AS PDP_ACTIVATION_REQUEST_CNT
					,SUM(PDP_ACTIVATION_ACCEPT_CNT) AS PDP_ACTIVATION_ACCEPT_CNT
					,SUM(PDP_ACTIVATION_REJECT_CNT) AS PDP_ACTIVATION_REJECT_CNT
					,SUM(RRC_2000000) AS RRC_2000000
					,SUM(RRC_2001000) AS RRC_2001000
					,SUM(RAB_1006000) AS RAB_1006000
					,SUM(RAB_1014000) AS RAB_1014000
					,SUM(RAB_1015000) AS RAB_1015000
					,SUM(RAB_1019000) AS RAB_1019000
					,SUM(RAB_1033000) AS RAB_1033000
					,SUM(RAB_1034000) AS RAB_1034000
					,SUM(RAB_1039000) AS RAB_1039000
					,SUM(RAB_1040000) AS RAB_1040000
					,SUM(RAB_1042000) AS RAB_1042000
					,SUM(RAB_1046000) AS RAB_1046000
					,SUM(RAB_5113000) AS RAB_5113000
					,SUM(RAB_5114000) AS RAB_5114000
					,SUM(RRC_RAB_OTHERS) AS RRC_RAB_OTHERS
					,SUM(CSFB_SETUP_TIME_SUM) AS CSFB_SETUP_TIME_SUM
					,SUM(CSFB_SETUP_TIME_CNT) AS CSFB_SETUP_TIME_CNT
					,MAX(CSFB_SETUP_TIME_MAX) AS CSFB_SETUP_TIME_MAX
					,SUM(CSFB_CALL_CNT) AS CSFB_CALL_CNT
					,SUM(RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE) AS RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE
					,SUM(RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE) AS RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
					,SUM(RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL) AS RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL
					,SUM(RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH) AS RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH
					,SUM(RAB_UNSPECIFIED_FAILURE) AS RAB_UNSPECIFIED_FAILURE
					,SUM(SMS_TYPE_01) AS SMS_TYPE_01
					,SUM(SMS_TYPE_10) AS SMS_TYPE_10
					,SUM(SMS_TYPE_11) AS SMS_TYPE_11
					,SUM(SMS_TYPE_00) AS SMS_TYPE_00
				FROM ',GT_DB,RUN,'.`tmp_table_tile_start_',WORKER_ID,'`
				GROUP BY   DATA_DATE
					, DATA_HOUR
-- 					, FREQUENCY
-- 					, UARFCN
					, INDOOR
					, MOVING
					#, TILE_ID
					, RNC_ID
-- 					, CELL_INDOOR
-- 					, CLUSTER_ID
-- 					, SITE_ID
					, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
				ORDER BY NULL;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Insert into table_tile_start_def ', NOW());
	SET @SqlCmd=CONCAT('INSERT INTO  ',GT_DB,RUN,'.table_tile_start_def
				(DATA_DATE,DATA_HOUR,`FREQUENCY`,`UARFCN`,TILE_ID,RNC_ID,`CELL_INDOOR`,CLUSTER_ID,SITE_ID,CELL_ID,
				CELL_NAME,CALL_CNT,BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,SUB_DENSITY,ERLANG,DL_DATA_THRU,UL_DATA_THRU,DL_TRAFFIC,
				UL_TRAFFIC,U_UL_DATA_THRU,U_MAX_UL_DATA_THRU,U_DL_DATA_THRU,U_MAX_DL_DATA_THRU,CALL_CNT_ACT,BEST_RSCP_1_ACT,BEST_ECN0_1_ACT,BEST_RSCP_1_ACT_MED,BEST_ECN0_1_ACT_MED,
				RAB_NO_RESOURCE_AVAILABLE,RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,RAB_OTHER,RRC_CONGESTION,RRC_UNSPECIFIED, CELL_LON,CELL_LAT,
				BEST_RSCP_1_CNT,BEST_ECN0_1_CNT,U_UL_DATA_THRU_CNT,U_DL_DATA_THRU_CNT,BEST_RSCP_1_ACT_CNT,BEST_ECN0_1_ACT_CNT
				,HOUR_CNT,NAS_SM_SUM,NAS_GPRS_MM_ATTACH_SUM,CALL_TYPE_10,CALL_TYPE_11,CALL_TYPE_12,CALL_TYPE_13,CALL_TYPE_14,CALL_TYPE_16,CALL_TYPE_18
				,AUTH_REQUEST,AUTH_RESPONSE,AUTH_FAILURE,AUTH_REJECT,LU_REQUEST,LU_ACCEPT,LU_REJECT,AUTH_CIPH_REQUEST,AUTH_CIPH_RESPONSE,AUTH_CIPH_FAILURE,AUTH_CIPH_REJECT,RAU_REQUEST,RAU_ACCEPT,RAU_REJECT
				,PDP_ACTIVATION_REQUEST_CNT,PDP_ACTIVATION_ACCEPT_CNT,PDP_ACTIVATION_REJECT_CNT
				,RRC_2000000,RRC_2001000,RAB_1006000,RAB_1014000,RAB_1015000,RAB_1019000,RAB_1033000,RAB_1034000,RAB_1039000,RAB_1040000,RAB_1042000,RAB_1046000,RAB_5113000,RAB_5114000,RRC_RAB_OTHERS
				,CSFB_SETUP_TIME_SUM,CSFB_SETUP_TIME_CNT,CSFB_SETUP_TIME_MAX,CSFB_CALL_CNT
				,RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
				,RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,RAB_UNSPECIFIED_FAILURE
				,SMS_TYPE_01,SMS_TYPE_10,SMS_TYPE_11,SMS_TYPE_00
	)
			    SELECT
					 DATA_DATE
					, DATA_HOUR
					, FREQUENCY
					, UARFCN
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					, CELL_INDOOR
					, CLUSTER_ID
					, SITE_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
					, CELL_NAME
					, SUM(CALL_CNT) AS CALL_CNT
					, SUM(BEST_RSCP_1) AS BEST_RSCP_1
					, SUM(BEST_ECN0_1) AS BEST_ECN0_1
					, NULL #median(BEST_RSCP_1_MED)
					, NULL #median(BEST_ECN0_1_MED)
					, NULL
					, SUM(ERLANG)
					, SUM(DL_DATA_THRU)
					, SUM(UL_DATA_THRU)
					, SUM(DL_TRAFFIC)
					, SUM(UL_TRAFFIC)
					, SUM(U_UL_DATA_THRU) AS U_UL_DATA_THRU
					, MAX(U_MAX_UL_DATA_THRU)
					, SUM(U_DL_DATA_THRU) AS U_DL_DATA_THRU
					, MAX(U_MAX_DL_DATA_THRU)
					, SUM(CALL_CNT_ACT)
					, SUM(BEST_RSCP_1_ACT) AS BEST_RSCP_1_ACT
					, SUM(BEST_ECN0_1_ACT) AS BEST_ECN0_1_ACT
					, NULL #median(BEST_RSCP_1_ACT_MED)
					, NULL #median(BEST_ECN0_1_ACT_MED)
					, SUM(RAB_NO_RESOURCE_AVAILABLE)
					, SUM(RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON)
					, SUM(RAB_OTHER)
					, SUM(RRC_CONGESTION)
					, SUM(RRC_UNSPECIFIED)
					, CELL_LON,CELL_LAT
					-- CNT
					, SUM(BEST_RSCP_1_CNT)
					, SUM(BEST_ECN0_1_CNT)
					, SUM(U_UL_DATA_THRU_CNT)
					, SUM(U_DL_DATA_THRU_CNT)
					, SUM(BEST_RSCP_1_ACT_CNT)
					, SUM(BEST_ECN0_1_ACT_CNT)
					,1 AS HOUR_CNT
					,SUM(NAS_SM_SUM) AS NAS_SM_SUM
					,SUM(NAS_GPRS_MM_ATTACH_SUM) AS NAS_GPRS_MM_ATTACH_SUM
					,SUM(CALL_TYPE_10) AS CALL_TYPE_10
					,SUM(CALL_TYPE_11) AS CALL_TYPE_11
					,SUM(CALL_TYPE_12) AS CALL_TYPE_12
					,SUM(CALL_TYPE_13) AS CALL_TYPE_13
					,SUM(CALL_TYPE_14) AS CALL_TYPE_14
					,SUM(CALL_TYPE_16) AS CALL_TYPE_16
					,SUM(CALL_TYPE_18) AS CALL_TYPE_18
					,SUM(AUTH_REQUEST) AS AUTH_REQUEST
					,SUM(AUTH_RESPONSE) AS AUTH_RESPONSE
					,SUM(AUTH_FAILURE) AS AUTH_FAILURE
					,SUM(AUTH_REJECT) AS AUTH_REJECT
					,SUM(LU_REQUEST) AS LU_REQUEST
					,SUM(LU_ACCEPT) AS LU_ACCEPT
					,SUM(LU_REJECT) AS LU_REJECT
					,SUM(AUTH_CIPH_REQUEST) AS AUTH_CIPH_REQUEST
					,SUM(AUTH_CIPH_RESPONSE) AS AUTH_CIPH_RESPONSE
					,SUM(AUTH_CIPH_FAILURE) AS AUTH_CIPH_FAILURE
					,SUM(AUTH_CIPH_REJECT) AS AUTH_CIPH_REJECT
					,SUM(RAU_REQUEST) AS RAU_REQUEST
					,SUM(RAU_ACCEPT) AS RAU_ACCEPT
					,SUM(RAU_REJECT) AS RAU_REJECT
					,SUM(PDP_ACTIVATION_REQUEST_CNT) AS PDP_ACTIVATION_REQUEST_CNT
					,SUM(PDP_ACTIVATION_ACCEPT_CNT) AS PDP_ACTIVATION_ACCEPT_CNT
					,SUM(PDP_ACTIVATION_REJECT_CNT) AS PDP_ACTIVATION_REJECT_CNT
					,SUM(RRC_2000000) AS RRC_2000000
					,SUM(RRC_2001000) AS RRC_2001000
					,SUM(RAB_1006000) AS RAB_1006000
					,SUM(RAB_1014000) AS RAB_1014000
					,SUM(RAB_1015000) AS RAB_1015000
					,SUM(RAB_1019000) AS RAB_1019000
					,SUM(RAB_1033000) AS RAB_1033000
					,SUM(RAB_1034000) AS RAB_1034000
					,SUM(RAB_1039000) AS RAB_1039000
					,SUM(RAB_1040000) AS RAB_1040000
					,SUM(RAB_1042000) AS RAB_1042000
					,SUM(RAB_1046000) AS RAB_1046000
					,SUM(RAB_5113000) AS RAB_5113000
					,SUM(RAB_5114000) AS RAB_5114000
					,SUM(RRC_RAB_OTHERS) AS RRC_RAB_OTHERS
					,SUM(CSFB_SETUP_TIME_SUM) AS CSFB_SETUP_TIME_SUM
					,SUM(CSFB_SETUP_TIME_CNT) AS CSFB_SETUP_TIME_CNT
					,MAX(CSFB_SETUP_TIME_MAX) AS CSFB_SETUP_TIME_MAX
					,SUM(CSFB_CALL_CNT) AS CSFB_CALL_CNT
					,SUM(RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE) AS RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE
					,SUM(RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE) AS RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
					,SUM(RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL) AS RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL
					,SUM(RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH) AS RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH
					,SUM(RAB_UNSPECIFIED_FAILURE) AS RAB_UNSPECIFIED_FAILURE
					,SUM(SMS_TYPE_01) AS SMS_TYPE_01
					,SUM(SMS_TYPE_10) AS SMS_TYPE_10
					,SUM(SMS_TYPE_11) AS SMS_TYPE_11
					,SUM(SMS_TYPE_00) AS SMS_TYPE_00
				FROM ',GT_DB,RUN,'.`tmp_table_tile_start_',WORKER_ID,'`
				GROUP BY   DATA_DATE
					, DATA_HOUR
					#, FREQUENCY
					#, UARFCN
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_INDOOR
					#, CLUSTER_ID
					#, SITE_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
				ORDER BY NULL;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Insert into table_tile_start_t_def ', NOW());
	SET @SqlCmd=CONCAT('INSERT INTO  ',GT_DB,RUN,'.table_tile_start_t_def
				(DATA_DATE,DATA_HOUR,TILE_ID,RNC_ID,
				CALL_CNT,BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,SUB_DENSITY,ERLANG,DL_DATA_THRU,UL_DATA_THRU,DL_TRAFFIC,
				UL_TRAFFIC,U_UL_DATA_THRU,U_MAX_UL_DATA_THRU,U_DL_DATA_THRU,U_MAX_DL_DATA_THRU,CALL_CNT_ACT,BEST_RSCP_1_ACT,BEST_ECN0_1_ACT,BEST_RSCP_1_ACT_MED,BEST_ECN0_1_ACT_MED,
				RAB_NO_RESOURCE_AVAILABLE,RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,RAB_OTHER,RRC_CONGESTION,RRC_UNSPECIFIED, CELL_LON,CELL_LAT,
				BEST_RSCP_1_CNT,BEST_ECN0_1_CNT,U_UL_DATA_THRU_CNT,U_DL_DATA_THRU_CNT,BEST_RSCP_1_ACT_CNT,BEST_ECN0_1_ACT_CNT
				,HOUR_CNT,NAS_SM_SUM,NAS_GPRS_MM_ATTACH_SUM,CALL_TYPE_10,CALL_TYPE_11,CALL_TYPE_12,CALL_TYPE_13,CALL_TYPE_14,CALL_TYPE_16,CALL_TYPE_18
				,AUTH_REQUEST,AUTH_RESPONSE,AUTH_FAILURE,AUTH_REJECT,LU_REQUEST,LU_ACCEPT,LU_REJECT,AUTH_CIPH_REQUEST,AUTH_CIPH_RESPONSE,AUTH_CIPH_FAILURE,AUTH_CIPH_REJECT,RAU_REQUEST,RAU_ACCEPT,RAU_REJECT
				,PDP_ACTIVATION_REQUEST_CNT,PDP_ACTIVATION_ACCEPT_CNT,PDP_ACTIVATION_REJECT_CNT
				,RRC_2000000,RRC_2001000,RAB_1006000,RAB_1014000,RAB_1015000,RAB_1019000,RAB_1033000,RAB_1034000,RAB_1039000,RAB_1040000,RAB_1042000,RAB_1046000,RAB_5113000,RAB_5114000,RRC_RAB_OTHERS
				,CSFB_SETUP_TIME_SUM,CSFB_SETUP_TIME_CNT,CSFB_SETUP_TIME_MAX,CSFB_CALL_CNT
				,RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
				,RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,RAB_UNSPECIFIED_FAILURE
				,SMS_TYPE_01,SMS_TYPE_10,SMS_TYPE_11,SMS_TYPE_00
	)
			    SELECT
					 DATA_DATE
					, DATA_HOUR
					#, FREQUENCY
					#, UARFCN
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_INDOOR
					#, CLUSTER_ID
					#, SITE_ID
					#, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
					, SUM(CALL_CNT) AS CALL_CNT
					, SUM(BEST_RSCP_1) AS BEST_RSCP_1
					, SUM(BEST_ECN0_1) AS BEST_ECN0_1
					, NULL #median(BEST_RSCP_1_MED)
					, NULL #median(BEST_ECN0_1_MED)
					, NULL
					, SUM(ERLANG)
					, SUM(DL_DATA_THRU)
					, SUM(UL_DATA_THRU)
					, SUM(DL_TRAFFIC)
					, SUM(UL_TRAFFIC)
					, SUM(U_UL_DATA_THRU) AS U_UL_DATA_THRU
					, MAX(U_MAX_UL_DATA_THRU)
					, SUM(U_DL_DATA_THRU) AS U_DL_DATA_THRU
					, MAX(U_MAX_DL_DATA_THRU)
					, SUM(CALL_CNT_ACT)
					, SUM(BEST_RSCP_1_ACT) AS BEST_RSCP_1_ACT
					, SUM(BEST_ECN0_1_ACT) AS BEST_ECN0_1_ACT
					, NULL #median(BEST_RSCP_1_ACT_MED)
					, NULL #median(BEST_ECN0_1_ACT_MED)
					, SUM(RAB_NO_RESOURCE_AVAILABLE)
					, SUM(RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON)
					, SUM(RAB_OTHER)
					, SUM(RRC_CONGESTION)
					, SUM(RRC_UNSPECIFIED)
					, CELL_LON,CELL_LAT
					-- CNT
					, SUM(BEST_RSCP_1_CNT)
					, SUM(BEST_ECN0_1_CNT)
					, SUM(U_UL_DATA_THRU_CNT)
					, SUM(U_DL_DATA_THRU_CNT)
					, SUM(BEST_RSCP_1_ACT_CNT)
					, SUM(BEST_ECN0_1_ACT_CNT)
					,1 AS HOUR_CNT
					,SUM(NAS_SM_SUM) AS NAS_SM_SUM
					,SUM(NAS_GPRS_MM_ATTACH_SUM) AS NAS_GPRS_MM_ATTACH_SUM
					,SUM(CALL_TYPE_10) AS CALL_TYPE_10
					,SUM(CALL_TYPE_11) AS CALL_TYPE_11
					,SUM(CALL_TYPE_12) AS CALL_TYPE_12
					,SUM(CALL_TYPE_13) AS CALL_TYPE_13
					,SUM(CALL_TYPE_14) AS CALL_TYPE_14
					,SUM(CALL_TYPE_16) AS CALL_TYPE_16
					,SUM(CALL_TYPE_18) AS CALL_TYPE_18
					,SUM(AUTH_REQUEST) AS AUTH_REQUEST
					,SUM(AUTH_RESPONSE) AS AUTH_RESPONSE
					,SUM(AUTH_FAILURE) AS AUTH_FAILURE
					,SUM(AUTH_REJECT) AS AUTH_REJECT
					,SUM(LU_REQUEST) AS LU_REQUEST
					,SUM(LU_ACCEPT) AS LU_ACCEPT
					,SUM(LU_REJECT) AS LU_REJECT
					,SUM(AUTH_CIPH_REQUEST) AS AUTH_CIPH_REQUEST
					,SUM(AUTH_CIPH_RESPONSE) AS AUTH_CIPH_RESPONSE
					,SUM(AUTH_CIPH_FAILURE) AS AUTH_CIPH_FAILURE
					,SUM(AUTH_CIPH_REJECT) AS AUTH_CIPH_REJECT
					,SUM(RAU_REQUEST) AS RAU_REQUEST
					,SUM(RAU_ACCEPT) AS RAU_ACCEPT
					,SUM(RAU_REJECT) AS RAU_REJECT
					,SUM(PDP_ACTIVATION_REQUEST_CNT) AS PDP_ACTIVATION_REQUEST_CNT
					,SUM(PDP_ACTIVATION_ACCEPT_CNT) AS PDP_ACTIVATION_ACCEPT_CNT
					,SUM(PDP_ACTIVATION_REJECT_CNT) AS PDP_ACTIVATION_REJECT_CNT
					,SUM(RRC_2000000) AS RRC_2000000
					,SUM(RRC_2001000) AS RRC_2001000
					,SUM(RAB_1006000) AS RAB_1006000
					,SUM(RAB_1014000) AS RAB_1014000
					,SUM(RAB_1015000) AS RAB_1015000
					,SUM(RAB_1019000) AS RAB_1019000
					,SUM(RAB_1033000) AS RAB_1033000
					,SUM(RAB_1034000) AS RAB_1034000
					,SUM(RAB_1039000) AS RAB_1039000
					,SUM(RAB_1040000) AS RAB_1040000
					,SUM(RAB_1042000) AS RAB_1042000
					,SUM(RAB_1046000) AS RAB_1046000
					,SUM(RAB_5113000) AS RAB_5113000
					,SUM(RAB_5114000) AS RAB_5114000
					,SUM(RRC_RAB_OTHERS) AS RRC_RAB_OTHERS
					,SUM(CSFB_SETUP_TIME_SUM) AS CSFB_SETUP_TIME_SUM
					,SUM(CSFB_SETUP_TIME_CNT) AS CSFB_SETUP_TIME_CNT
					,MAX(CSFB_SETUP_TIME_MAX) AS CSFB_SETUP_TIME_MAX
					,SUM(CSFB_CALL_CNT) AS CSFB_CALL_CNT
					,SUM(RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE) AS RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE
					,SUM(RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE) AS RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
					,SUM(RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL) AS RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL
					,SUM(RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH) AS RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH
					,SUM(RAB_UNSPECIFIED_FAILURE) AS RAB_UNSPECIFIED_FAILURE
					,SUM(SMS_TYPE_01) AS SMS_TYPE_01
					,SUM(SMS_TYPE_10) AS SMS_TYPE_10
					,SUM(SMS_TYPE_11) AS SMS_TYPE_11
					,SUM(SMS_TYPE_00) AS SMS_TYPE_00
				FROM ',GT_DB,RUN,'.`tmp_table_tile_start_',WORKER_ID,'`
				GROUP BY   DATA_DATE
					, DATA_HOUR
					#, FREQUENCY
					#, UARFCN
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_INDOOR
					#, CLUSTER_ID
					#, SITE_ID
					#, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
				ORDER BY NULL;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Insert into table_tile_start_c_def ', NOW());
	SET @SqlCmd=CONCAT('INSERT INTO  ',GT_DB,RUN,'.table_tile_start_c_def
				(DATA_DATE,DATA_HOUR,`FREQUENCY`,`UARFCN`,RNC_ID,`CELL_INDOOR`,CLUSTER_ID,SITE_ID,CELL_ID,
				CELL_NAME,CALL_CNT,BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED,SUB_DENSITY,ERLANG,DL_DATA_THRU,UL_DATA_THRU,DL_TRAFFIC,
				UL_TRAFFIC,U_UL_DATA_THRU,U_MAX_UL_DATA_THRU,U_DL_DATA_THRU,U_MAX_DL_DATA_THRU,CALL_CNT_ACT,BEST_RSCP_1_ACT,BEST_ECN0_1_ACT,BEST_RSCP_1_ACT_MED,BEST_ECN0_1_ACT_MED,
				RAB_NO_RESOURCE_AVAILABLE,RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,RAB_OTHER,RRC_CONGESTION,RRC_UNSPECIFIED, CELL_LON,CELL_LAT,
				BEST_RSCP_1_CNT,BEST_ECN0_1_CNT,U_UL_DATA_THRU_CNT,U_DL_DATA_THRU_CNT,BEST_RSCP_1_ACT_CNT,BEST_ECN0_1_ACT_CNT
				,HOUR_CNT,NAS_SM_SUM,NAS_GPRS_MM_ATTACH_SUM,CALL_TYPE_10,CALL_TYPE_11,CALL_TYPE_12,CALL_TYPE_13,CALL_TYPE_14,CALL_TYPE_16,CALL_TYPE_18
				,AUTH_REQUEST,AUTH_RESPONSE,AUTH_FAILURE,AUTH_REJECT,LU_REQUEST,LU_ACCEPT,LU_REJECT,AUTH_CIPH_REQUEST,AUTH_CIPH_RESPONSE,AUTH_CIPH_FAILURE,AUTH_CIPH_REJECT,RAU_REQUEST,RAU_ACCEPT,RAU_REJECT
				,PDP_ACTIVATION_REQUEST_CNT,PDP_ACTIVATION_ACCEPT_CNT,PDP_ACTIVATION_REJECT_CNT
				,RRC_2000000,RRC_2001000,RAB_1006000,RAB_1014000,RAB_1015000,RAB_1019000,RAB_1033000,RAB_1034000,RAB_1039000,RAB_1040000,RAB_1042000,RAB_1046000,RAB_5113000,RAB_5114000,RRC_RAB_OTHERS
				,CSFB_SETUP_TIME_SUM,CSFB_SETUP_TIME_CNT,CSFB_SETUP_TIME_MAX,CSFB_CALL_CNT
				,RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
				,RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,RAB_UNSPECIFIED_FAILURE
				,SMS_TYPE_01,SMS_TYPE_10,SMS_TYPE_11,SMS_TYPE_00
	)
			    SELECT
					 DATA_DATE
					, DATA_HOUR
					, FREQUENCY
					, UARFCN
					#, INDOOR
					#, MOVING
					#, TILE_ID
					, RNC_ID
					, CELL_INDOOR
					, CLUSTER_ID
					, SITE_ID
					, CELL_ID
					, CELL_NAME
					#, CALL_TYPE 
					#, CALL_STATUS
					, SUM(CALL_CNT) AS CALL_CNT
					, SUM(BEST_RSCP_1) AS BEST_RSCP_1
					, SUM(BEST_ECN0_1) AS BEST_ECN0_1
					, NULL #median(BEST_RSCP_1_MED)
					, NULL #median(BEST_ECN0_1_MED)
					, NULL
					, SUM(ERLANG)
					, SUM(DL_DATA_THRU)
					, SUM(UL_DATA_THRU)
					, SUM(DL_TRAFFIC)
					, SUM(UL_TRAFFIC)
					, SUM(U_UL_DATA_THRU) AS U_UL_DATA_THRU
					, MAX(U_MAX_UL_DATA_THRU)
					, SUM(U_DL_DATA_THRU) AS U_DL_DATA_THRU
					, MAX(U_MAX_DL_DATA_THRU)
					, SUM(CALL_CNT_ACT)
					, SUM(BEST_RSCP_1_ACT) AS BEST_RSCP_1_ACT
					, SUM(BEST_ECN0_1_ACT) AS BEST_ECN0_1_ACT
					, NULL #median(BEST_RSCP_1_ACT_MED)
					, NULL #median(BEST_ECN0_1_ACT_MED)
					, SUM(RAB_NO_RESOURCE_AVAILABLE)
					, SUM(RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON)
					, SUM(RAB_OTHER)
					, SUM(RRC_CONGESTION)
					, SUM(RRC_UNSPECIFIED)
					, CELL_LON,CELL_LAT
					-- CNT
					, SUM(BEST_RSCP_1_CNT)
					, SUM(BEST_ECN0_1_CNT)
					, SUM(U_UL_DATA_THRU_CNT)
					, SUM(U_DL_DATA_THRU_CNT)
					, SUM(BEST_RSCP_1_ACT_CNT)
					, SUM(BEST_ECN0_1_ACT_CNT)
					,1 AS HOUR_CNT
					,SUM(NAS_SM_SUM) AS NAS_SM_SUM
					,SUM(NAS_GPRS_MM_ATTACH_SUM) AS NAS_GPRS_MM_ATTACH_SUM
					,SUM(CALL_TYPE_10) AS CALL_TYPE_10
					,SUM(CALL_TYPE_11) AS CALL_TYPE_11
					,SUM(CALL_TYPE_12) AS CALL_TYPE_12
					,SUM(CALL_TYPE_13) AS CALL_TYPE_13
					,SUM(CALL_TYPE_14) AS CALL_TYPE_14
					,SUM(CALL_TYPE_16) AS CALL_TYPE_16
					,SUM(CALL_TYPE_18) AS CALL_TYPE_18
					,SUM(AUTH_REQUEST) AS AUTH_REQUEST
					,SUM(AUTH_RESPONSE) AS AUTH_RESPONSE
					,SUM(AUTH_FAILURE) AS AUTH_FAILURE
					,SUM(AUTH_REJECT) AS AUTH_REJECT
					,SUM(LU_REQUEST) AS LU_REQUEST
					,SUM(LU_ACCEPT) AS LU_ACCEPT
					,SUM(LU_REJECT) AS LU_REJECT
					,SUM(AUTH_CIPH_REQUEST) AS AUTH_CIPH_REQUEST
					,SUM(AUTH_CIPH_RESPONSE) AS AUTH_CIPH_RESPONSE
					,SUM(AUTH_CIPH_FAILURE) AS AUTH_CIPH_FAILURE
					,SUM(AUTH_CIPH_REJECT) AS AUTH_CIPH_REJECT
					,SUM(RAU_REQUEST) AS RAU_REQUEST
					,SUM(RAU_ACCEPT) AS RAU_ACCEPT
					,SUM(RAU_REJECT) AS RAU_REJECT
					,SUM(PDP_ACTIVATION_REQUEST_CNT) AS PDP_ACTIVATION_REQUEST_CNT
					,SUM(PDP_ACTIVATION_ACCEPT_CNT) AS PDP_ACTIVATION_ACCEPT_CNT
					,SUM(PDP_ACTIVATION_REJECT_CNT) AS PDP_ACTIVATION_REJECT_CNT
					,SUM(RRC_2000000) AS RRC_2000000
					,SUM(RRC_2001000) AS RRC_2001000
					,SUM(RAB_1006000) AS RAB_1006000
					,SUM(RAB_1014000) AS RAB_1014000
					,SUM(RAB_1015000) AS RAB_1015000
					,SUM(RAB_1019000) AS RAB_1019000
					,SUM(RAB_1033000) AS RAB_1033000
					,SUM(RAB_1034000) AS RAB_1034000
					,SUM(RAB_1039000) AS RAB_1039000
					,SUM(RAB_1040000) AS RAB_1040000
					,SUM(RAB_1042000) AS RAB_1042000
					,SUM(RAB_1046000) AS RAB_1046000
					,SUM(RAB_5113000) AS RAB_5113000
					,SUM(RAB_5114000) AS RAB_5114000
					,SUM(RRC_RAB_OTHERS) AS RRC_RAB_OTHERS
					,SUM(CSFB_SETUP_TIME_SUM) AS CSFB_SETUP_TIME_SUM
					,SUM(CSFB_SETUP_TIME_CNT) AS CSFB_SETUP_TIME_CNT
					,MAX(CSFB_SETUP_TIME_MAX) AS CSFB_SETUP_TIME_MAX
					,SUM(CSFB_CALL_CNT) AS CSFB_CALL_CNT
					,SUM(RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE) AS RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE
					,SUM(RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE) AS RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
					,SUM(RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL) AS RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL
					,SUM(RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH) AS RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH
					,SUM(RAB_UNSPECIFIED_FAILURE) AS RAB_UNSPECIFIED_FAILURE
					,SUM(SMS_TYPE_01) AS SMS_TYPE_01
					,SUM(SMS_TYPE_10) AS SMS_TYPE_10
					,SUM(SMS_TYPE_11) AS SMS_TYPE_11
					,SUM(SMS_TYPE_00) AS SMS_TYPE_00
				FROM ',GT_DB,RUN,'.`tmp_table_tile_start_',WORKER_ID,'`
				GROUP BY   DATA_DATE
					, DATA_HOUR
					#, FREQUENCY
					#, UARFCN
					#, INDOOR
					#, MOVING
					#, TILE_ID
					, RNC_ID
					#, CELL_INDOOR
					#, CLUSTER_ID
					#, SITE_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
				ORDER BY NULL;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Insert into table_tile_start_dy ', NOW());
	SET @SqlCmd=CONCAT('REPLACE INTO ',GT_DB,'.table_tile_start_dy
				(DATA_DATE,FREQUENCY,UARFCN,INDOOR,MOVING,TILE_ID,RNC_ID,CELL_INDOOR,CLUSTER_ID,SITE_ID,CELL_ID
				,CELL_LON,CELL_LAT,CALL_TYPE,CALL_STATUS,CELL_NAME,CALL_CNT,BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED
				,SUB_DENSITY,ERLANG,DL_DATA_THRU,UL_DATA_THRU,DL_TRAFFIC,UL_TRAFFIC,U_UL_DATA_THRU,U_MAX_UL_DATA_THRU
				,U_DL_DATA_THRU,U_MAX_DL_DATA_THRU,CALL_CNT_ACT,BEST_RSCP_1_ACT,BEST_ECN0_1_ACT,BEST_RSCP_1_ACT_MED
				,BEST_ECN0_1_ACT_MED,RAB_NO_RESOURCE_AVAILABLE,RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,RAB_OTHER
				,RRC_CONGESTION,RRC_UNSPECIFIED,BEST_RSCP_1_CNT,BEST_ECN0_1_CNT,U_UL_DATA_THRU_CNT,U_DL_DATA_THRU_CNT
				,BEST_RSCP_1_ACT_CNT,BEST_ECN0_1_ACT_CNT
				,HOUR_CNT,NAS_SM_SUM,NAS_GPRS_MM_ATTACH_SUM,CALL_TYPE_10,CALL_TYPE_11,CALL_TYPE_12,CALL_TYPE_13,CALL_TYPE_14,CALL_TYPE_16,CALL_TYPE_18
				,AUTH_REQUEST,AUTH_RESPONSE,AUTH_FAILURE,AUTH_REJECT,LU_REQUEST,LU_ACCEPT,LU_REJECT,AUTH_CIPH_REQUEST,AUTH_CIPH_RESPONSE,AUTH_CIPH_FAILURE,AUTH_CIPH_REJECT,RAU_REQUEST,RAU_ACCEPT,RAU_REJECT
				,PDP_ACTIVATION_REQUEST_CNT,PDP_ACTIVATION_ACCEPT_CNT,PDP_ACTIVATION_REJECT_CNT
				,RRC_2000000,RRC_2001000,RAB_1006000,RAB_1014000,RAB_1015000,RAB_1019000,RAB_1033000,RAB_1034000,RAB_1039000,RAB_1040000,RAB_1042000,RAB_1046000,RAB_5113000,RAB_5114000,RRC_RAB_OTHERS
				,CSFB_SETUP_TIME_SUM,CSFB_SETUP_TIME_CNT,CSFB_SETUP_TIME_MAX,CSFB_CALL_CNT
				,RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
				,RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,RAB_UNSPECIFIED_FAILURE
				,SMS_TYPE_01,SMS_TYPE_10,SMS_TYPE_11,SMS_TYPE_00
				)
		SELECT
			B.DATA_DATE
			#, DATA_HOUR
			, B.FREQUENCY
			, B.UARFCN
			, B.INDOOR
			, B.MOVING
			, B.TILE_ID
			, B.RNC_ID
			, B.CELL_INDOOR
			, B.CLUSTER_ID
			, B.SITE_ID
			, B.CELL_ID
			, B.CELL_LON
			, B.CELL_LAT
			, B.CALL_TYPE 
			, B.CALL_STATUS
			, B.CELL_NAME
			, CASE WHEN A.CALL_CNT IS NULL AND B.CALL_CNT IS NULL THEN NULL ELSE IFNULL(A.CALL_CNT,0) + IFNULL(B.CALL_CNT,0) END AS CALL_CNT
			, CASE WHEN A.BEST_RSCP_1 IS NULL AND B.BEST_RSCP_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1,0) + IFNULL(B.BEST_RSCP_1,0) END AS BEST_RSCP_1
			, CASE WHEN A.BEST_ECN0_1 IS NULL AND B.BEST_ECN0_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1,0) + IFNULL(B.BEST_ECN0_1,0) END AS BEST_ECN0_1
			, NULL AS BEST_RSCP_1_MED #CASE WHEN A.BEST_RSCP_1_MED IS NULL THEN B.BEST_RSCP_1_MED WHEN B.BEST_RSCP_1_MED IS NULL THEN A.BEST_RSCP_1_MED ELSE (A.BEST_RSCP_1_MED + B.BEST_RSCP_1_MED)/2 END AS BEST_RSCP_1_MED
			, NULL AS BEST_ECN0_1_MED #CASE WHEN A.BEST_ECN0_1_MED IS NULL THEN B.BEST_ECN0_1_MED WHEN B.BEST_ECN0_1_MED IS NULL THEN A.BEST_ECN0_1_MED ELSE (A.BEST_ECN0_1_MED + B.BEST_ECN0_1_MED)/2 END AS BEST_ECN0_1_MED
			, NULL AS SUB_DENSITY
			, CASE WHEN A.ERLANG IS NULL AND B.ERLANG IS NULL THEN NULL ELSE IFNULL(A.ERLANG,0) + IFNULL(B.ERLANG,0) END AS ERLANG
			, CASE WHEN A.DL_DATA_THRU IS NULL AND B.DL_DATA_THRU IS NULL THEN NULL ELSE IFNULL(A.DL_DATA_THRU,0) + IFNULL(B.DL_DATA_THRU,0) END AS DL_DATA_THRU
			, CASE WHEN A.UL_DATA_THRU IS NULL AND B.UL_DATA_THRU IS NULL THEN NULL ELSE IFNULL(A.UL_DATA_THRU,0) + IFNULL(B.UL_DATA_THRU,0) END AS UL_DATA_THRU
			, CASE WHEN A.DL_TRAFFIC IS NULL AND B.DL_TRAFFIC IS NULL THEN NULL ELSE IFNULL(A.DL_TRAFFIC,0) + IFNULL(B.DL_TRAFFIC,0) END AS DL_TRAFFIC
			, CASE WHEN A.UL_TRAFFIC IS NULL AND B.UL_TRAFFIC IS NULL THEN NULL ELSE IFNULL(A.UL_TRAFFIC,0) + IFNULL(B.UL_TRAFFIC,0) END AS UL_TRAFFIC
			, (IFNULL(A.U_UL_DATA_THRU,0) + IFNULL(B.U_UL_DATA_THRU,0)) AS U_UL_DATA_THRU
			, CASE WHEN IFNULL(A.U_MAX_UL_DATA_THRU,0) > IFNULL(B.U_MAX_UL_DATA_THRU,0) THEN A.U_MAX_UL_DATA_THRU ELSE B.U_MAX_UL_DATA_THRU END AS U_MAX_UL_DATA_THRU
			, (IFNULL(A.U_DL_DATA_THRU,0) + IFNULL(B.U_DL_DATA_THRU,0)) AS U_DL_DATA_THRU
			, CASE WHEN IFNULL(A.U_MAX_DL_DATA_THRU,0) > IFNULL(B.U_MAX_DL_DATA_THRU,0) THEN A.U_MAX_DL_DATA_THRU ELSE B.U_MAX_DL_DATA_THRU END AS U_MAX_DL_DATA_THRU
			, CASE WHEN A.CALL_CNT_ACT IS NULL AND B.CALL_CNT_ACT IS NULL THEN NULL ELSE IFNULL(A.CALL_CNT_ACT,0) + IFNULL(B.CALL_CNT_ACT,0) END AS CALL_CNT_ACT
			, CASE WHEN A.BEST_RSCP_1_ACT IS NULL AND B.BEST_RSCP_1_ACT IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1_ACT,0) + IFNULL(B.BEST_RSCP_1_ACT,0) END AS BEST_RSCP_1_ACT
			, CASE WHEN A.BEST_ECN0_1_ACT IS NULL AND B.BEST_ECN0_1_ACT IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1_ACT,0) + IFNULL(B.BEST_ECN0_1_ACT,0) END AS BEST_ECN0_1_ACT
			, NULL AS BEST_RSCP_1_ACT_MED #CASE WHEN A.BEST_RSCP_1_ACT_MED IS NULL THEN B.BEST_RSCP_1_ACT_MED WHEN B.BEST_RSCP_1_ACT_MED IS NULL THEN A.BEST_RSCP_1_ACT_MED ELSE (A.BEST_RSCP_1_ACT_MED + B.BEST_RSCP_1_ACT_MED)/2 END AS BEST_RSCP_1_ACT_MED
			, NULL AS BEST_ECN0_1_ACT_MED #CASE WHEN A.BEST_ECN0_1_ACT_MED IS NULL THEN B.BEST_ECN0_1_ACT_MED WHEN B.BEST_ECN0_1_ACT_MED IS NULL THEN A.BEST_ECN0_1_ACT_MED ELSE (A.BEST_ECN0_1_ACT_MED + B.BEST_ECN0_1_ACT_MED)/2 END AS BEST_ECN0_1_ACT_MED
			, CASE WHEN A.RAB_NO_RESOURCE_AVAILABLE IS NULL AND B.RAB_NO_RESOURCE_AVAILABLE IS NULL THEN NULL ELSE IFNULL(A.RAB_NO_RESOURCE_AVAILABLE,0) + IFNULL(B.RAB_NO_RESOURCE_AVAILABLE,0) END AS RAB_NO_RESOURCE_AVAILABLE
			, CASE WHEN A.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON IS NULL AND B.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON IS NULL THEN NULL ELSE IFNULL(A.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,0) + IFNULL(B.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,0) END AS RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON
			, CASE WHEN A.RAB_OTHER IS NULL AND B.RAB_OTHER IS NULL THEN NULL ELSE IFNULL(A.RAB_OTHER,0) + IFNULL(B.RAB_OTHER,0) END AS RAB_OTHER
			, CASE WHEN A.RRC_CONGESTION IS NULL AND B.RRC_CONGESTION IS NULL THEN NULL ELSE IFNULL(A.RRC_CONGESTION,0) + IFNULL(B.RRC_CONGESTION,0) END AS RRC_CONGESTION
			, CASE WHEN A.RRC_UNSPECIFIED IS NULL AND B.RRC_UNSPECIFIED IS NULL THEN NULL ELSE IFNULL(A.RRC_UNSPECIFIED,0) + IFNULL(B.RRC_UNSPECIFIED,0) END AS RRC_UNSPECIFIED
			-- CNT
			, CASE WHEN A.BEST_RSCP_1_CNT IS NULL AND B.BEST_RSCP_1_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1_CNT,0) + IFNULL(B.BEST_RSCP_1_CNT,0) END AS BEST_RSCP_1_CNT
			, CASE WHEN A.BEST_ECN0_1_CNT IS NULL AND B.BEST_ECN0_1_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1_CNT,0) + IFNULL(B.BEST_ECN0_1_CNT,0) END AS BEST_ECN0_1_CNT
			, CASE WHEN A.U_UL_DATA_THRU_CNT IS NULL AND B.U_UL_DATA_THRU_CNT IS NULL THEN NULL ELSE IFNULL(A.U_UL_DATA_THRU_CNT,0) + IFNULL(B.U_UL_DATA_THRU_CNT,0) END AS U_UL_DATA_THRU_CNT
			, CASE WHEN A.U_DL_DATA_THRU_CNT IS NULL AND B.U_DL_DATA_THRU_CNT IS NULL THEN NULL ELSE IFNULL(A.U_DL_DATA_THRU_CNT,0) + IFNULL(B.U_DL_DATA_THRU_CNT,0) END AS U_DL_DATA_THRU_CNT
			, CASE WHEN A.BEST_RSCP_1_ACT_CNT IS NULL AND B.BEST_RSCP_1_ACT_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1_ACT_CNT,0) + IFNULL(B.BEST_RSCP_1_ACT_CNT,0) END AS BEST_RSCP_1_ACT_CNT
			, CASE WHEN A.BEST_ECN0_1_ACT_CNT IS NULL AND B.BEST_ECN0_1_ACT_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1_ACT_CNT,0) + IFNULL(B.BEST_ECN0_1_ACT_CNT,0) END AS BEST_ECN0_1_ACT_CNT
			, CASE WHEN A.HOUR_CNT IS NULL AND B.HOUR_CNT IS NULL THEN NULL ELSE IFNULL(A.HOUR_CNT,0) + IFNULL(B.HOUR_CNT,0) END AS HOUR_CNT
			, CASE WHEN A.NAS_SM_SUM IS NULL AND B.NAS_SM_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_SM_SUM,0) + IFNULL(B.NAS_SM_SUM,0) END AS NAS_SM_SUM
			, CASE WHEN A.NAS_GPRS_MM_ATTACH_SUM IS NULL AND B.NAS_GPRS_MM_ATTACH_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_GPRS_MM_ATTACH_SUM,0) + IFNULL(B.NAS_GPRS_MM_ATTACH_SUM,0) END AS NAS_GPRS_MM_ATTACH_SUM
			, CASE WHEN A.CALL_TYPE_10 IS NULL AND B.CALL_TYPE_10 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_10,0) + IFNULL(B.CALL_TYPE_10,0) END AS CALL_TYPE_10
			, CASE WHEN A.CALL_TYPE_11 IS NULL AND B.CALL_TYPE_11 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_11,0) + IFNULL(B.CALL_TYPE_11,0) END AS CALL_TYPE_11
			, CASE WHEN A.CALL_TYPE_12 IS NULL AND B.CALL_TYPE_12 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_12,0) + IFNULL(B.CALL_TYPE_12,0) END AS CALL_TYPE_12
			, CASE WHEN A.CALL_TYPE_13 IS NULL AND B.CALL_TYPE_13 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_13,0) + IFNULL(B.CALL_TYPE_13,0) END AS CALL_TYPE_13
			, CASE WHEN A.CALL_TYPE_14 IS NULL AND B.CALL_TYPE_14 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_14,0) + IFNULL(B.CALL_TYPE_14,0) END AS CALL_TYPE_14
			, CASE WHEN A.CALL_TYPE_16 IS NULL AND B.CALL_TYPE_16 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_16,0) + IFNULL(B.CALL_TYPE_16,0) END AS CALL_TYPE_16
			, CASE WHEN A.CALL_TYPE_18 IS NULL AND B.CALL_TYPE_18 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_18,0) + IFNULL(B.CALL_TYPE_18,0) END AS CALL_TYPE_18
			, CASE WHEN A.AUTH_REQUEST IS NULL AND B.AUTH_REQUEST IS NULL THEN NULL ELSE IFNULL(A.AUTH_REQUEST,0) + IFNULL(B.AUTH_REQUEST,0) END AS AUTH_REQUEST
			, CASE WHEN A.AUTH_RESPONSE IS NULL AND B.AUTH_RESPONSE IS NULL THEN NULL ELSE IFNULL(A.AUTH_RESPONSE,0) + IFNULL(B.AUTH_RESPONSE,0) END AS AUTH_RESPONSE
			, CASE WHEN A.AUTH_FAILURE IS NULL AND B.AUTH_FAILURE IS NULL THEN NULL ELSE IFNULL(A.AUTH_FAILURE,0) + IFNULL(B.AUTH_FAILURE,0) END AS AUTH_FAILURE
			, CASE WHEN A.AUTH_REJECT IS NULL AND B.AUTH_REJECT IS NULL THEN NULL ELSE IFNULL(A.AUTH_REJECT,0) + IFNULL(B.AUTH_REJECT,0) END AS AUTH_REJECT
			, CASE WHEN A.LU_REQUEST IS NULL AND B.LU_REQUEST IS NULL THEN NULL ELSE IFNULL(A.LU_REQUEST,0) + IFNULL(B.LU_REQUEST,0) END AS LU_REQUEST
			, CASE WHEN A.LU_ACCEPT IS NULL AND B.LU_ACCEPT IS NULL THEN NULL ELSE IFNULL(A.LU_ACCEPT,0) + IFNULL(B.LU_ACCEPT,0) END AS LU_ACCEPT
			, CASE WHEN A.LU_REJECT IS NULL AND B.LU_REJECT IS NULL THEN NULL ELSE IFNULL(A.LU_REJECT,0) + IFNULL(B.LU_REJECT,0) END AS LU_REJECT
			, CASE WHEN A.AUTH_CIPH_REQUEST IS NULL AND B.AUTH_CIPH_REQUEST IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_REQUEST,0) + IFNULL(B.AUTH_CIPH_REQUEST,0) END AS AUTH_CIPH_REQUEST
			, CASE WHEN A.AUTH_CIPH_RESPONSE IS NULL AND B.AUTH_CIPH_RESPONSE IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_RESPONSE,0) + IFNULL(B.AUTH_CIPH_RESPONSE,0) END AS AUTH_CIPH_RESPONSE
			, CASE WHEN A.AUTH_CIPH_FAILURE IS NULL AND B.AUTH_CIPH_FAILURE IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_FAILURE,0) + IFNULL(B.AUTH_CIPH_FAILURE,0) END AS AUTH_CIPH_FAILURE
			, CASE WHEN A.AUTH_CIPH_REJECT IS NULL AND B.AUTH_CIPH_REJECT IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_REJECT,0) + IFNULL(B.AUTH_CIPH_REJECT,0) END AS AUTH_CIPH_REJECT
			, CASE WHEN A.RAU_REQUEST IS NULL AND B.RAU_REQUEST IS NULL THEN NULL ELSE IFNULL(A.RAU_REQUEST,0) + IFNULL(B.RAU_REQUEST,0) END AS RAU_REQUEST
			, CASE WHEN A.RAU_ACCEPT IS NULL AND B.RAU_ACCEPT IS NULL THEN NULL ELSE IFNULL(A.RAU_ACCEPT,0) + IFNULL(B.RAU_ACCEPT,0) END AS RAU_ACCEPT
			, CASE WHEN A.RAU_REJECT IS NULL AND B.RAU_REJECT IS NULL THEN NULL ELSE IFNULL(A.RAU_REJECT,0) + IFNULL(B.RAU_REJECT,0) END AS RAU_REJECT
			, CASE WHEN A.PDP_ACTIVATION_REQUEST_CNT IS NULL AND B.PDP_ACTIVATION_REQUEST_CNT IS NULL THEN NULL ELSE IFNULL(A.PDP_ACTIVATION_REQUEST_CNT,0) + IFNULL(B.PDP_ACTIVATION_REQUEST_CNT,0) END AS PDP_ACTIVATION_REQUEST_CNT
			, CASE WHEN A.PDP_ACTIVATION_ACCEPT_CNT IS NULL AND B.PDP_ACTIVATION_ACCEPT_CNT IS NULL THEN NULL ELSE IFNULL(A.PDP_ACTIVATION_ACCEPT_CNT,0) + IFNULL(B.PDP_ACTIVATION_ACCEPT_CNT,0) END AS PDP_ACTIVATION_ACCEPT_CNT
			, CASE WHEN A.PDP_ACTIVATION_REJECT_CNT IS NULL AND B.PDP_ACTIVATION_REJECT_CNT IS NULL THEN NULL ELSE IFNULL(A.PDP_ACTIVATION_REJECT_CNT,0) + IFNULL(B.PDP_ACTIVATION_REJECT_CNT,0) END AS PDP_ACTIVATION_REJECT_CNT
			, CASE WHEN A.RRC_2000000 IS NULL AND B.RRC_2000000 IS NULL THEN NULL ELSE IFNULL(A.RRC_2000000,0) + IFNULL(B.RRC_2000000,0) END AS RRC_2000000
			, CASE WHEN A.RRC_2001000 IS NULL AND B.RRC_2001000 IS NULL THEN NULL ELSE IFNULL(A.RRC_2001000,0) + IFNULL(B.RRC_2001000,0) END AS RRC_2001000
			, CASE WHEN A.RAB_1006000 IS NULL AND B.RAB_1006000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1006000,0) + IFNULL(B.RAB_1006000,0) END AS RAB_1006000
			, CASE WHEN A.RAB_1014000 IS NULL AND B.RAB_1014000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1014000,0) + IFNULL(B.RAB_1014000,0) END AS RAB_1014000
			, CASE WHEN A.RAB_1015000 IS NULL AND B.RAB_1015000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1015000,0) + IFNULL(B.RAB_1015000,0) END AS RAB_1015000
			, CASE WHEN A.RAB_1019000 IS NULL AND B.RAB_1019000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1019000,0) + IFNULL(B.RAB_1019000,0) END AS RAB_1019000
			, CASE WHEN A.RAB_1033000 IS NULL AND B.RAB_1033000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1033000,0) + IFNULL(B.RAB_1033000,0) END AS RAB_1033000
			, CASE WHEN A.RAB_1034000 IS NULL AND B.RAB_1034000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1034000,0) + IFNULL(B.RAB_1034000,0) END AS RAB_1034000
			, CASE WHEN A.RAB_1039000 IS NULL AND B.RAB_1039000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1039000,0) + IFNULL(B.RAB_1039000,0) END AS RAB_1039000
			, CASE WHEN A.RAB_1040000 IS NULL AND B.RAB_1040000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1040000,0) + IFNULL(B.RAB_1040000,0) END AS RAB_1040000
			, CASE WHEN A.RAB_1042000 IS NULL AND B.RAB_1042000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1042000,0) + IFNULL(B.RAB_1042000,0) END AS RAB_1042000
			, CASE WHEN A.RAB_1046000 IS NULL AND B.RAB_1046000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1046000,0) + IFNULL(B.RAB_1046000,0) END AS RAB_1046000
			, CASE WHEN A.RAB_5113000 IS NULL AND B.RAB_5113000 IS NULL THEN NULL ELSE IFNULL(A.RAB_5113000,0) + IFNULL(B.RAB_5113000,0) END AS RAB_5113000
			, CASE WHEN A.RAB_5114000 IS NULL AND B.RAB_5114000 IS NULL THEN NULL ELSE IFNULL(A.RAB_5114000,0) + IFNULL(B.RAB_5114000,0) END AS RAB_5114000
			, CASE WHEN A.RRC_RAB_OTHERS IS NULL AND B.RRC_RAB_OTHERS IS NULL THEN NULL ELSE IFNULL(A.RRC_RAB_OTHERS,0) + IFNULL(B.RRC_RAB_OTHERS,0) END AS RRC_RAB_OTHERS
			, CASE WHEN A.CSFB_SETUP_TIME_SUM IS NULL AND B.CSFB_SETUP_TIME_SUM IS NULL THEN NULL ELSE IFNULL(A.CSFB_SETUP_TIME_SUM,0) + IFNULL(B.CSFB_SETUP_TIME_SUM,0) END AS CSFB_SETUP_TIME_SUM
			, CASE WHEN A.CSFB_SETUP_TIME_CNT IS NULL AND B.CSFB_SETUP_TIME_CNT IS NULL THEN NULL ELSE IFNULL(A.CSFB_SETUP_TIME_CNT,0) + IFNULL(B.CSFB_SETUP_TIME_CNT,0) END AS CSFB_SETUP_TIME_CNT
			, CASE WHEN IFNULL(A.CSFB_SETUP_TIME_MAX,0) > IFNULL(B.CSFB_SETUP_TIME_MAX,0) THEN A.CSFB_SETUP_TIME_MAX ELSE B.CSFB_SETUP_TIME_MAX END AS CSFB_SETUP_TIME_MAX
			, CASE WHEN A.CSFB_CALL_CNT IS NULL AND B.CSFB_CALL_CNT IS NULL THEN NULL ELSE IFNULL(A.CSFB_CALL_CNT,0) + IFNULL(B.CSFB_CALL_CNT,0) END AS CSFB_CALL_CNT
			, CASE WHEN A.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE IS NULL AND B.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE IS NULL THEN NULL ELSE IFNULL(A.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,0) + IFNULL(B.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,0) END AS RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE
			, CASE WHEN A.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE IS NULL AND B.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE IS NULL THEN NULL ELSE IFNULL(A.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE,0) + IFNULL(B.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE,0) END AS RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
			, CASE WHEN A.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL IS NULL AND B.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL IS NULL THEN NULL ELSE IFNULL(A.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,0) + IFNULL(B.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,0) END AS RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL
			, CASE WHEN A.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH IS NULL AND B.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH IS NULL THEN NULL ELSE IFNULL(A.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,0) + IFNULL(B.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,0) END AS RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH
			, CASE WHEN A.RAB_UNSPECIFIED_FAILURE IS NULL AND B.RAB_UNSPECIFIED_FAILURE IS NULL THEN NULL ELSE IFNULL(A.RAB_UNSPECIFIED_FAILURE,0) + IFNULL(B.RAB_UNSPECIFIED_FAILURE,0) END AS RAB_UNSPECIFIED_FAILURE
			, CASE WHEN A.SMS_TYPE_01 IS NULL AND B.SMS_TYPE_01 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_01,0) + IFNULL(B.SMS_TYPE_01,0) END AS SMS_TYPE_01
			, CASE WHEN A.SMS_TYPE_10 IS NULL AND B.SMS_TYPE_10 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_10,0) + IFNULL(B.SMS_TYPE_10,0) END AS SMS_TYPE_10
			, CASE WHEN A.SMS_TYPE_11 IS NULL AND B.SMS_TYPE_11 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_11,0) + IFNULL(B.SMS_TYPE_11,0) END AS SMS_TYPE_11
			, CASE WHEN A.SMS_TYPE_00 IS NULL AND B.SMS_TYPE_00 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_00,0) + IFNULL(B.SMS_TYPE_00,0) END AS SMS_TYPE_00
		FROM ',GT_DB,'.table_tile_start_dy a RIGHT JOIN 
		(
		 	SELECT
				 DATA_DATE AS DATA_DATE
				#, DATA_HOUR
				, FREQUENCY AS FREQUENCY
				, UARFCN AS UARFCN
				, INDOOR AS INDOOR
				, MOVING AS MOVING
				, TILE_ID AS TILE_ID
				, RNC_ID AS RNC_ID
				, CELL_INDOOR AS CELL_INDOOR
				, CLUSTER_ID AS CLUSTER_ID
				, SITE_ID AS SITE_ID
				, CELL_ID AS CELL_ID
				, CALL_TYPE AS CALL_TYPE
				, CALL_STATUS AS CALL_STATUS
				, CELL_NAME AS CELL_NAME
				, SUM(CALL_CNT) AS CALL_CNT
				, SUM(BEST_RSCP_1) AS BEST_RSCP_1
				, SUM(BEST_ECN0_1) AS BEST_ECN0_1
				, NULL AS BEST_RSCP_1_MED #median(BEST_RSCP_1_MED) AS BEST_RSCP_1_MED
				, NULL AS BEST_ECN0_1_MED #median(BEST_ECN0_1_MED) AS BEST_ECN0_1_MED
				, NULL AS SUB_DENSITY
				, SUM(ERLANG) AS ERLANG
				, SUM(DL_DATA_THRU) AS DL_DATA_THRU
				, SUM(UL_DATA_THRU) AS UL_DATA_THRU
				, SUM(DL_TRAFFIC) AS DL_TRAFFIC
				, SUM(UL_TRAFFIC) AS UL_TRAFFIC
				, SUM(U_UL_DATA_THRU) AS U_UL_DATA_THRU
				, MAX(U_MAX_UL_DATA_THRU) AS U_MAX_UL_DATA_THRU
				, SUM(U_DL_DATA_THRU) AS U_DL_DATA_THRU
				, MAX(U_MAX_DL_DATA_THRU) AS U_MAX_DL_DATA_THRU
				, SUM(CALL_CNT_ACT) AS CALL_CNT_ACT
				, SUM(BEST_RSCP_1_ACT) AS BEST_RSCP_1_ACT
				, SUM(BEST_ECN0_1_ACT) AS BEST_ECN0_1_ACT
				, NULL AS BEST_RSCP_1_ACT_MED #median(BEST_RSCP_1_ACT_MED) AS BEST_RSCP_1_ACT_MED
				, NULL AS BEST_ECN0_1_ACT_MED #median(BEST_ECN0_1_ACT_MED) AS BEST_ECN0_1_ACT_MED
				, SUM(RAB_NO_RESOURCE_AVAILABLE) AS RAB_NO_RESOURCE_AVAILABLE
				, SUM(RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON) AS RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON
				, SUM(RAB_OTHER) AS RAB_OTHER
				, SUM(RRC_CONGESTION) AS RRC_CONGESTION
				, SUM(RRC_UNSPECIFIED) AS RRC_UNSPECIFIED
				, CELL_LON,CELL_LAT
				-- CNT
				, SUM(BEST_RSCP_1_CNT) AS BEST_RSCP_1_CNT
				, SUM(BEST_ECN0_1_CNT) AS BEST_ECN0_1_CNT
				, SUM(U_UL_DATA_THRU_CNT) AS U_UL_DATA_THRU_CNT
				, SUM(U_DL_DATA_THRU_CNT) AS U_DL_DATA_THRU_CNT
				, SUM(BEST_RSCP_1_ACT_CNT) AS BEST_RSCP_1_ACT_CNT
				, SUM(BEST_ECN0_1_ACT_CNT) AS BEST_ECN0_1_ACT_CNT
				,1 AS HOUR_CNT
				,SUM(NAS_SM_SUM) AS NAS_SM_SUM
				,SUM(NAS_GPRS_MM_ATTACH_SUM) AS NAS_GPRS_MM_ATTACH_SUM
				,SUM(CALL_TYPE_10) AS CALL_TYPE_10
				,SUM(CALL_TYPE_11) AS CALL_TYPE_11
				,SUM(CALL_TYPE_12) AS CALL_TYPE_12
				,SUM(CALL_TYPE_13) AS CALL_TYPE_13
				,SUM(CALL_TYPE_14) AS CALL_TYPE_14
				,SUM(CALL_TYPE_16) AS CALL_TYPE_16
				,SUM(CALL_TYPE_18) AS CALL_TYPE_18
				,SUM(AUTH_REQUEST) AS AUTH_REQUEST
				,SUM(AUTH_RESPONSE) AS AUTH_RESPONSE
				,SUM(AUTH_FAILURE) AS AUTH_FAILURE
				,SUM(AUTH_REJECT) AS AUTH_REJECT
				,SUM(LU_REQUEST) AS LU_REQUEST
				,SUM(LU_ACCEPT) AS LU_ACCEPT
				,SUM(LU_REJECT) AS LU_REJECT
				,SUM(AUTH_CIPH_REQUEST) AS AUTH_CIPH_REQUEST
				,SUM(AUTH_CIPH_RESPONSE) AS AUTH_CIPH_RESPONSE
				,SUM(AUTH_CIPH_FAILURE) AS AUTH_CIPH_FAILURE
				,SUM(AUTH_CIPH_REJECT) AS AUTH_CIPH_REJECT
				,SUM(RAU_REQUEST) AS RAU_REQUEST
				,SUM(RAU_ACCEPT) AS RAU_ACCEPT
				,SUM(RAU_REJECT) AS RAU_REJECT
				,SUM(PDP_ACTIVATION_REQUEST_CNT) AS PDP_ACTIVATION_REQUEST_CNT
				,SUM(PDP_ACTIVATION_ACCEPT_CNT) AS PDP_ACTIVATION_ACCEPT_CNT
				,SUM(PDP_ACTIVATION_REJECT_CNT) AS PDP_ACTIVATION_REJECT_CNT
				,SUM(RRC_2000000) AS RRC_2000000
				,SUM(RRC_2001000) AS RRC_2001000
				,SUM(RAB_1006000) AS RAB_1006000
				,SUM(RAB_1014000) AS RAB_1014000
				,SUM(RAB_1015000) AS RAB_1015000
				,SUM(RAB_1019000) AS RAB_1019000
				,SUM(RAB_1033000) AS RAB_1033000
				,SUM(RAB_1034000) AS RAB_1034000
				,SUM(RAB_1039000) AS RAB_1039000
				,SUM(RAB_1040000) AS RAB_1040000
				,SUM(RAB_1042000) AS RAB_1042000
				,SUM(RAB_1046000) AS RAB_1046000
				,SUM(RAB_5113000) AS RAB_5113000
				,SUM(RAB_5114000) AS RAB_5114000
				,SUM(RRC_RAB_OTHERS) AS RRC_RAB_OTHERS
				,SUM(CSFB_SETUP_TIME_SUM) AS CSFB_SETUP_TIME_SUM
				,SUM(CSFB_SETUP_TIME_CNT) AS CSFB_SETUP_TIME_CNT
				,MAX(CSFB_SETUP_TIME_MAX) AS CSFB_SETUP_TIME_MAX
				,SUM(CSFB_CALL_CNT) AS CSFB_CALL_CNT
				,SUM(RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE) AS RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE
				,SUM(RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE) AS RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
				,SUM(RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL) AS RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL
				,SUM(RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH) AS RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH
				,SUM(RAB_UNSPECIFIED_FAILURE) AS RAB_UNSPECIFIED_FAILURE
				,SUM(SMS_TYPE_01) AS SMS_TYPE_01
				,SUM(SMS_TYPE_10) AS SMS_TYPE_10
				,SUM(SMS_TYPE_11) AS SMS_TYPE_11
				,SUM(SMS_TYPE_00) AS SMS_TYPE_00
			FROM ',GT_DB,RUN,'.`tmp_table_tile_start_',WORKER_ID,'`
			GROUP BY DATA_DATE
				#, DATA_HOUR
-- 				, FREQUENCY
-- 				, UARFCN
				, INDOOR
				, MOVING
				, TILE_ID
				, RNC_ID
-- 				, CELL_INDOOR
-- 				, CLUSTER_ID
-- 				, SITE_ID
				, CELL_ID
				, CALL_TYPE 
				, CALL_STATUS
			ORDER BY NULL
		) B
		ON  A.DATA_DATE=B.DATA_DATE
-- 		AND A.FREQUENCY=B.FREQUENCY
-- 		AND A.UARFCN=B.UARFCN
		AND A.INDOOR=B.INDOOR
		AND A.MOVING=B.MOVING
		AND A.TILE_ID=B.TILE_ID
		AND A.RNC_ID=B.RNC_ID
-- 		AND A.CELL_INDOOR=B.CELL_INDOOR
-- 		AND A.CLUSTER_ID=B.CLUSTER_ID
-- 		AND A.SITE_ID=B.SITE_ID
		AND A.CELL_ID=B.CELL_ID
		AND A.CALL_TYPE=B.CALL_TYPE
		AND A.CALL_STATUS=B.CALL_STATUS
		;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Insert into table_tile_start_dy_t ', NOW());
	SET @SqlCmd=CONCAT('REPLACE INTO ',GT_DB,'.table_tile_start_dy_t
		(DATA_DATE,FREQUENCY,UARFCN,INDOOR,MOVING,TILE_ID,RNC_ID
		,CELL_LON,CELL_LAT,CALL_TYPE,CALL_STATUS,CALL_CNT,BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED
		,SUB_DENSITY,ERLANG,DL_DATA_THRU,UL_DATA_THRU,DL_TRAFFIC,UL_TRAFFIC,U_UL_DATA_THRU,U_MAX_UL_DATA_THRU
		,U_DL_DATA_THRU,U_MAX_DL_DATA_THRU,CALL_CNT_ACT,BEST_RSCP_1_ACT,BEST_ECN0_1_ACT,BEST_RSCP_1_ACT_MED
		,BEST_ECN0_1_ACT_MED,RAB_NO_RESOURCE_AVAILABLE,RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,RAB_OTHER
		,RRC_CONGESTION,RRC_UNSPECIFIED,BEST_RSCP_1_CNT,BEST_ECN0_1_CNT,U_UL_DATA_THRU_CNT,U_DL_DATA_THRU_CNT
		,BEST_RSCP_1_ACT_CNT,BEST_ECN0_1_ACT_CNT
		,HOUR_CNT,NAS_SM_SUM,NAS_GPRS_MM_ATTACH_SUM,CALL_TYPE_10,CALL_TYPE_11,CALL_TYPE_12,CALL_TYPE_13,CALL_TYPE_14,CALL_TYPE_16,CALL_TYPE_18
		,AUTH_REQUEST,AUTH_RESPONSE,AUTH_FAILURE,AUTH_REJECT,LU_REQUEST,LU_ACCEPT,LU_REJECT,AUTH_CIPH_REQUEST,AUTH_CIPH_RESPONSE,AUTH_CIPH_FAILURE,AUTH_CIPH_REJECT,RAU_REQUEST,RAU_ACCEPT,RAU_REJECT
		,PDP_ACTIVATION_REQUEST_CNT,PDP_ACTIVATION_ACCEPT_CNT,PDP_ACTIVATION_REJECT_CNT
		,RRC_2000000,RRC_2001000,RAB_1006000,RAB_1014000,RAB_1015000,RAB_1019000,RAB_1033000,RAB_1034000,RAB_1039000,RAB_1040000,RAB_1042000,RAB_1046000,RAB_5113000,RAB_5114000,RRC_RAB_OTHERS
		,CSFB_SETUP_TIME_SUM,CSFB_SETUP_TIME_CNT,CSFB_SETUP_TIME_MAX,CSFB_CALL_CNT
		,RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
		,RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,RAB_UNSPECIFIED_FAILURE
		,SMS_TYPE_01,SMS_TYPE_10,SMS_TYPE_11,SMS_TYPE_00
	)
		SELECT
			B.DATA_DATE
			#, DATA_HOUR
			, B.FREQUENCY
			, B.UARFCN
			, B.INDOOR
			, B.MOVING
			, B.TILE_ID
			, B.RNC_ID
			#, B.CELL_INDOOR
			#, B.CLUSTER_ID
			#, B.SITE_ID
			#, B.CELL_ID
			, B.CELL_LON
			, B.CELL_LAT
			, B.CALL_TYPE 
			, B.CALL_STATUS	
			, CASE WHEN A.CALL_CNT IS NULL AND B.CALL_CNT IS NULL THEN NULL ELSE IFNULL(A.CALL_CNT,0) + IFNULL(B.CALL_CNT,0) END AS CALL_CNT
			, CASE WHEN A.BEST_RSCP_1 IS NULL AND B.BEST_RSCP_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1,0) + IFNULL(B.BEST_RSCP_1,0) END AS BEST_RSCP_1
			, CASE WHEN A.BEST_ECN0_1 IS NULL AND B.BEST_ECN0_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1,0) + IFNULL(B.BEST_ECN0_1,0) END AS BEST_ECN0_1
			, NULL AS BEST_RSCP_1_MED #CASE WHEN A.BEST_RSCP_1_MED IS NULL THEN B.BEST_RSCP_1_MED WHEN B.BEST_RSCP_1_MED IS NULL THEN A.BEST_RSCP_1_MED ELSE (A.BEST_RSCP_1_MED + B.BEST_RSCP_1_MED)/2 END AS BEST_RSCP_1_MED
			, NULL AS BEST_ECN0_1_MED #CASE WHEN A.BEST_ECN0_1_MED IS NULL THEN B.BEST_ECN0_1_MED WHEN B.BEST_ECN0_1_MED IS NULL THEN A.BEST_ECN0_1_MED ELSE (A.BEST_ECN0_1_MED + B.BEST_ECN0_1_MED)/2 END AS BEST_ECN0_1_MED
			, NULL AS SUB_DENSITY
			, CASE WHEN A.ERLANG IS NULL AND B.ERLANG IS NULL THEN NULL ELSE IFNULL(A.ERLANG,0) + IFNULL(B.ERLANG,0) END AS ERLANG
			, CASE WHEN A.DL_DATA_THRU IS NULL AND B.DL_DATA_THRU IS NULL THEN NULL ELSE IFNULL(A.DL_DATA_THRU,0) + IFNULL(B.DL_DATA_THRU,0) END AS DL_DATA_THRU
			, CASE WHEN A.UL_DATA_THRU IS NULL AND B.UL_DATA_THRU IS NULL THEN NULL ELSE IFNULL(A.UL_DATA_THRU,0) + IFNULL(B.UL_DATA_THRU,0) END AS UL_DATA_THRU
			, CASE WHEN A.DL_TRAFFIC IS NULL AND B.DL_TRAFFIC IS NULL THEN NULL ELSE IFNULL(A.DL_TRAFFIC,0) + IFNULL(B.DL_TRAFFIC,0) END AS DL_TRAFFIC
			, CASE WHEN A.UL_TRAFFIC IS NULL AND B.UL_TRAFFIC IS NULL THEN NULL ELSE IFNULL(A.UL_TRAFFIC,0) + IFNULL(B.UL_TRAFFIC,0) END AS UL_TRAFFIC
			, (IFNULL(A.U_UL_DATA_THRU,0)+IFNULL(B.U_UL_DATA_THRU,0)) AS U_UL_DATA_THRU
			, CASE WHEN IFNULL(A.U_MAX_UL_DATA_THRU,0) > IFNULL(B.U_MAX_UL_DATA_THRU,0) THEN A.U_MAX_UL_DATA_THRU ELSE B.U_MAX_UL_DATA_THRU END AS U_MAX_UL_DATA_THRU
			, (IFNULL(A.U_DL_DATA_THRU,0)+IFNULL(B.U_DL_DATA_THRU,0)) AS U_DL_DATA_THRU
			, CASE WHEN IFNULL(A.U_MAX_DL_DATA_THRU,0) > IFNULL(B.U_MAX_DL_DATA_THRU,0) THEN A.U_MAX_DL_DATA_THRU ELSE B.U_MAX_DL_DATA_THRU END AS U_MAX_DL_DATA_THRU
			, CASE WHEN A.CALL_CNT_ACT IS NULL AND B.CALL_CNT_ACT IS NULL THEN NULL ELSE IFNULL(A.CALL_CNT_ACT,0) + IFNULL(B.CALL_CNT_ACT,0) END AS CALL_CNT_ACT
			, CASE WHEN A.BEST_RSCP_1_ACT IS NULL AND B.BEST_RSCP_1_ACT IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1_ACT,0) + IFNULL(B.BEST_RSCP_1_ACT,0) END AS BEST_RSCP_1_ACT
			, CASE WHEN A.BEST_ECN0_1_ACT IS NULL AND B.BEST_ECN0_1_ACT IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1_ACT,0) + IFNULL(B.BEST_ECN0_1_ACT,0) END AS BEST_ECN0_1_ACT
			, NULL AS BEST_RSCP_1_ACT_MED #CASE WHEN A.BEST_RSCP_1_ACT_MED IS NULL THEN B.BEST_RSCP_1_ACT_MED WHEN B.BEST_RSCP_1_ACT_MED IS NULL THEN A.BEST_RSCP_1_ACT_MED ELSE (A.BEST_RSCP_1_ACT_MED + B.BEST_RSCP_1_ACT_MED)/2 END AS BEST_RSCP_1_ACT_MED
			, NULL AS BEST_ECN0_1_ACT_MED #CASE WHEN A.BEST_ECN0_1_ACT_MED IS NULL THEN B.BEST_ECN0_1_ACT_MED WHEN B.BEST_ECN0_1_ACT_MED IS NULL THEN A.BEST_ECN0_1_ACT_MED ELSE (A.BEST_ECN0_1_ACT_MED + B.BEST_ECN0_1_ACT_MED)/2 END AS BEST_ECN0_1_ACT_MED
			, CASE WHEN A.RAB_NO_RESOURCE_AVAILABLE IS NULL AND B.RAB_NO_RESOURCE_AVAILABLE IS NULL THEN NULL ELSE IFNULL(A.RAB_NO_RESOURCE_AVAILABLE,0) + IFNULL(B.RAB_NO_RESOURCE_AVAILABLE,0) END AS RAB_NO_RESOURCE_AVAILABLE
			, CASE WHEN A.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON IS NULL AND B.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON IS NULL THEN NULL ELSE IFNULL(A.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,0) + IFNULL(B.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,0) END AS RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON
			, CASE WHEN A.RAB_OTHER IS NULL AND B.RAB_OTHER IS NULL THEN NULL ELSE IFNULL(A.RAB_OTHER,0) + IFNULL(B.RAB_OTHER,0) END AS RAB_OTHER
			, CASE WHEN A.RRC_CONGESTION IS NULL AND B.RRC_CONGESTION IS NULL THEN NULL ELSE IFNULL(A.RRC_CONGESTION,0) + IFNULL(B.RRC_CONGESTION,0) END AS RRC_CONGESTION
			, CASE WHEN A.RRC_UNSPECIFIED IS NULL AND B.RRC_UNSPECIFIED IS NULL THEN NULL ELSE IFNULL(A.RRC_UNSPECIFIED,0) + IFNULL(B.RRC_UNSPECIFIED,0) END AS RRC_UNSPECIFIED
			-- CNT
			, CASE WHEN A.BEST_RSCP_1_CNT IS NULL AND B.BEST_RSCP_1_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1_CNT,0) + IFNULL(B.BEST_RSCP_1_CNT,0) END AS BEST_RSCP_1_CNT
			, CASE WHEN A.BEST_ECN0_1_CNT IS NULL AND B.BEST_ECN0_1_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1_CNT,0) + IFNULL(B.BEST_ECN0_1_CNT,0) END AS BEST_ECN0_1_CNT
			, CASE WHEN A.U_UL_DATA_THRU_CNT IS NULL AND B.U_UL_DATA_THRU_CNT IS NULL THEN NULL ELSE IFNULL(A.U_UL_DATA_THRU_CNT,0) + IFNULL(B.U_UL_DATA_THRU_CNT,0) END AS U_UL_DATA_THRU_CNT
			, CASE WHEN A.U_DL_DATA_THRU_CNT IS NULL AND B.U_DL_DATA_THRU_CNT IS NULL THEN NULL ELSE IFNULL(A.U_DL_DATA_THRU_CNT,0) + IFNULL(B.U_DL_DATA_THRU_CNT,0) END AS U_DL_DATA_THRU_CNT
			, CASE WHEN A.BEST_RSCP_1_ACT_CNT IS NULL AND B.BEST_RSCP_1_ACT_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1_ACT_CNT,0) + IFNULL(B.BEST_RSCP_1_ACT_CNT,0) END AS BEST_RSCP_1_ACT_CNT
			, CASE WHEN A.BEST_ECN0_1_ACT_CNT IS NULL AND B.BEST_ECN0_1_ACT_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1_ACT_CNT,0) + IFNULL(B.BEST_ECN0_1_ACT_CNT,0) END AS BEST_ECN0_1_ACT_CNT
			, CASE WHEN A.HOUR_CNT IS NULL AND B.HOUR_CNT IS NULL THEN NULL ELSE IFNULL(A.HOUR_CNT,0) + IFNULL(B.HOUR_CNT,0) END AS HOUR_CNT
			, CASE WHEN A.NAS_SM_SUM IS NULL AND B.NAS_SM_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_SM_SUM,0) + IFNULL(B.NAS_SM_SUM,0) END AS NAS_SM_SUM
			, CASE WHEN A.NAS_GPRS_MM_ATTACH_SUM IS NULL AND B.NAS_GPRS_MM_ATTACH_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_GPRS_MM_ATTACH_SUM,0) + IFNULL(B.NAS_GPRS_MM_ATTACH_SUM,0) END AS NAS_GPRS_MM_ATTACH_SUM
			, CASE WHEN A.CALL_TYPE_10 IS NULL AND B.CALL_TYPE_10 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_10,0) + IFNULL(B.CALL_TYPE_10,0) END AS CALL_TYPE_10
			, CASE WHEN A.CALL_TYPE_11 IS NULL AND B.CALL_TYPE_11 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_11,0) + IFNULL(B.CALL_TYPE_11,0) END AS CALL_TYPE_11
			, CASE WHEN A.CALL_TYPE_12 IS NULL AND B.CALL_TYPE_12 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_12,0) + IFNULL(B.CALL_TYPE_12,0) END AS CALL_TYPE_12
			, CASE WHEN A.CALL_TYPE_13 IS NULL AND B.CALL_TYPE_13 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_13,0) + IFNULL(B.CALL_TYPE_13,0) END AS CALL_TYPE_13
			, CASE WHEN A.CALL_TYPE_14 IS NULL AND B.CALL_TYPE_14 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_14,0) + IFNULL(B.CALL_TYPE_14,0) END AS CALL_TYPE_14
			, CASE WHEN A.CALL_TYPE_16 IS NULL AND B.CALL_TYPE_16 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_16,0) + IFNULL(B.CALL_TYPE_16,0) END AS CALL_TYPE_16
			, CASE WHEN A.CALL_TYPE_18 IS NULL AND B.CALL_TYPE_18 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_18,0) + IFNULL(B.CALL_TYPE_18,0) END AS CALL_TYPE_18
			, CASE WHEN A.AUTH_REQUEST IS NULL AND B.AUTH_REQUEST IS NULL THEN NULL ELSE IFNULL(A.AUTH_REQUEST,0) + IFNULL(B.AUTH_REQUEST,0) END AS AUTH_REQUEST
			, CASE WHEN A.AUTH_RESPONSE IS NULL AND B.AUTH_RESPONSE IS NULL THEN NULL ELSE IFNULL(A.AUTH_RESPONSE,0) + IFNULL(B.AUTH_RESPONSE,0) END AS AUTH_RESPONSE
			, CASE WHEN A.AUTH_FAILURE IS NULL AND B.AUTH_FAILURE IS NULL THEN NULL ELSE IFNULL(A.AUTH_FAILURE,0) + IFNULL(B.AUTH_FAILURE,0) END AS AUTH_FAILURE
			, CASE WHEN A.AUTH_REJECT IS NULL AND B.AUTH_REJECT IS NULL THEN NULL ELSE IFNULL(A.AUTH_REJECT,0) + IFNULL(B.AUTH_REJECT,0) END AS AUTH_REJECT
			, CASE WHEN A.LU_REQUEST IS NULL AND B.LU_REQUEST IS NULL THEN NULL ELSE IFNULL(A.LU_REQUEST,0) + IFNULL(B.LU_REQUEST,0) END AS LU_REQUEST
			, CASE WHEN A.LU_ACCEPT IS NULL AND B.LU_ACCEPT IS NULL THEN NULL ELSE IFNULL(A.LU_ACCEPT,0) + IFNULL(B.LU_ACCEPT,0) END AS LU_ACCEPT
			, CASE WHEN A.LU_REJECT IS NULL AND B.LU_REJECT IS NULL THEN NULL ELSE IFNULL(A.LU_REJECT,0) + IFNULL(B.LU_REJECT,0) END AS LU_REJECT
			, CASE WHEN A.AUTH_CIPH_REQUEST IS NULL AND B.AUTH_CIPH_REQUEST IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_REQUEST,0) + IFNULL(B.AUTH_CIPH_REQUEST,0) END AS AUTH_CIPH_REQUEST
			, CASE WHEN A.AUTH_CIPH_RESPONSE IS NULL AND B.AUTH_CIPH_RESPONSE IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_RESPONSE,0) + IFNULL(B.AUTH_CIPH_RESPONSE,0) END AS AUTH_CIPH_RESPONSE
			, CASE WHEN A.AUTH_CIPH_FAILURE IS NULL AND B.AUTH_CIPH_FAILURE IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_FAILURE,0) + IFNULL(B.AUTH_CIPH_FAILURE,0) END AS AUTH_CIPH_FAILURE
			, CASE WHEN A.AUTH_CIPH_REJECT IS NULL AND B.AUTH_CIPH_REJECT IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_REJECT,0) + IFNULL(B.AUTH_CIPH_REJECT,0) END AS AUTH_CIPH_REJECT
			, CASE WHEN A.RAU_REQUEST IS NULL AND B.RAU_REQUEST IS NULL THEN NULL ELSE IFNULL(A.RAU_REQUEST,0) + IFNULL(B.RAU_REQUEST,0) END AS RAU_REQUEST
			, CASE WHEN A.RAU_ACCEPT IS NULL AND B.RAU_ACCEPT IS NULL THEN NULL ELSE IFNULL(A.RAU_ACCEPT,0) + IFNULL(B.RAU_ACCEPT,0) END AS RAU_ACCEPT
			, CASE WHEN A.RAU_REJECT IS NULL AND B.RAU_REJECT IS NULL THEN NULL ELSE IFNULL(A.RAU_REJECT,0) + IFNULL(B.RAU_REJECT,0) END AS RAU_REJECT
			, CASE WHEN A.PDP_ACTIVATION_REQUEST_CNT IS NULL AND B.PDP_ACTIVATION_REQUEST_CNT IS NULL THEN NULL ELSE IFNULL(A.PDP_ACTIVATION_REQUEST_CNT,0) + IFNULL(B.PDP_ACTIVATION_REQUEST_CNT,0) END AS PDP_ACTIVATION_REQUEST_CNT
			, CASE WHEN A.PDP_ACTIVATION_ACCEPT_CNT IS NULL AND B.PDP_ACTIVATION_ACCEPT_CNT IS NULL THEN NULL ELSE IFNULL(A.PDP_ACTIVATION_ACCEPT_CNT,0) + IFNULL(B.PDP_ACTIVATION_ACCEPT_CNT,0) END AS PDP_ACTIVATION_ACCEPT_CNT
			, CASE WHEN A.PDP_ACTIVATION_REJECT_CNT IS NULL AND B.PDP_ACTIVATION_REJECT_CNT IS NULL THEN NULL ELSE IFNULL(A.PDP_ACTIVATION_REJECT_CNT,0) + IFNULL(B.PDP_ACTIVATION_REJECT_CNT,0) END AS PDP_ACTIVATION_REJECT_CNT
			, CASE WHEN A.RRC_2000000 IS NULL AND B.RRC_2000000 IS NULL THEN NULL ELSE IFNULL(A.RRC_2000000,0) + IFNULL(B.RRC_2000000,0) END AS RRC_2000000
			, CASE WHEN A.RRC_2001000 IS NULL AND B.RRC_2001000 IS NULL THEN NULL ELSE IFNULL(A.RRC_2001000,0) + IFNULL(B.RRC_2001000,0) END AS RRC_2001000
			, CASE WHEN A.RAB_1006000 IS NULL AND B.RAB_1006000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1006000,0) + IFNULL(B.RAB_1006000,0) END AS RAB_1006000
			, CASE WHEN A.RAB_1014000 IS NULL AND B.RAB_1014000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1014000,0) + IFNULL(B.RAB_1014000,0) END AS RAB_1014000
			, CASE WHEN A.RAB_1015000 IS NULL AND B.RAB_1015000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1015000,0) + IFNULL(B.RAB_1015000,0) END AS RAB_1015000
			, CASE WHEN A.RAB_1019000 IS NULL AND B.RAB_1019000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1019000,0) + IFNULL(B.RAB_1019000,0) END AS RAB_1019000
			, CASE WHEN A.RAB_1033000 IS NULL AND B.RAB_1033000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1033000,0) + IFNULL(B.RAB_1033000,0) END AS RAB_1033000
			, CASE WHEN A.RAB_1034000 IS NULL AND B.RAB_1034000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1034000,0) + IFNULL(B.RAB_1034000,0) END AS RAB_1034000
			, CASE WHEN A.RAB_1039000 IS NULL AND B.RAB_1039000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1039000,0) + IFNULL(B.RAB_1039000,0) END AS RAB_1039000
			, CASE WHEN A.RAB_1040000 IS NULL AND B.RAB_1040000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1040000,0) + IFNULL(B.RAB_1040000,0) END AS RAB_1040000
			, CASE WHEN A.RAB_1042000 IS NULL AND B.RAB_1042000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1042000,0) + IFNULL(B.RAB_1042000,0) END AS RAB_1042000
			, CASE WHEN A.RAB_1046000 IS NULL AND B.RAB_1046000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1046000,0) + IFNULL(B.RAB_1046000,0) END AS RAB_1046000
			, CASE WHEN A.RAB_5113000 IS NULL AND B.RAB_5113000 IS NULL THEN NULL ELSE IFNULL(A.RAB_5113000,0) + IFNULL(B.RAB_5113000,0) END AS RAB_5113000
			, CASE WHEN A.RAB_5114000 IS NULL AND B.RAB_5114000 IS NULL THEN NULL ELSE IFNULL(A.RAB_5114000,0) + IFNULL(B.RAB_5114000,0) END AS RAB_5114000
			, CASE WHEN A.RRC_RAB_OTHERS IS NULL AND B.RRC_RAB_OTHERS IS NULL THEN NULL ELSE IFNULL(A.RRC_RAB_OTHERS,0) + IFNULL(B.RRC_RAB_OTHERS,0) END AS RRC_RAB_OTHERS
			, CASE WHEN A.CSFB_SETUP_TIME_SUM IS NULL AND B.CSFB_SETUP_TIME_SUM IS NULL THEN NULL ELSE IFNULL(A.CSFB_SETUP_TIME_SUM,0) + IFNULL(B.CSFB_SETUP_TIME_SUM,0) END AS CSFB_SETUP_TIME_SUM
			, CASE WHEN A.CSFB_SETUP_TIME_CNT IS NULL AND B.CSFB_SETUP_TIME_CNT IS NULL THEN NULL ELSE IFNULL(A.CSFB_SETUP_TIME_CNT,0) + IFNULL(B.CSFB_SETUP_TIME_CNT,0) END AS CSFB_SETUP_TIME_CNT
			, CASE WHEN IFNULL(A.CSFB_SETUP_TIME_MAX,0) > IFNULL(B.CSFB_SETUP_TIME_MAX,0) THEN A.CSFB_SETUP_TIME_MAX ELSE B.CSFB_SETUP_TIME_MAX END AS CSFB_SETUP_TIME_MAX
			, CASE WHEN A.CSFB_CALL_CNT IS NULL AND B.CSFB_CALL_CNT IS NULL THEN NULL ELSE IFNULL(A.CSFB_CALL_CNT,0) + IFNULL(B.CSFB_CALL_CNT,0) END AS CSFB_CALL_CNT
			, CASE WHEN A.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE IS NULL AND B.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE IS NULL THEN NULL ELSE IFNULL(A.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,0) + IFNULL(B.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,0) END AS RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE
			, CASE WHEN A.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE IS NULL AND B.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE IS NULL THEN NULL ELSE IFNULL(A.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE,0) + IFNULL(B.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE,0) END AS RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
			, CASE WHEN A.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL IS NULL AND B.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL IS NULL THEN NULL ELSE IFNULL(A.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,0) + IFNULL(B.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,0) END AS RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL
			, CASE WHEN A.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH IS NULL AND B.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH IS NULL THEN NULL ELSE IFNULL(A.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,0) + IFNULL(B.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,0) END AS RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH
			, CASE WHEN A.RAB_UNSPECIFIED_FAILURE IS NULL AND B.RAB_UNSPECIFIED_FAILURE IS NULL THEN NULL ELSE IFNULL(A.RAB_UNSPECIFIED_FAILURE,0) + IFNULL(B.RAB_UNSPECIFIED_FAILURE,0) END AS RAB_UNSPECIFIED_FAILURE
			, CASE WHEN A.SMS_TYPE_01 IS NULL AND B.SMS_TYPE_01 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_01,0) + IFNULL(B.SMS_TYPE_01,0) END AS SMS_TYPE_01
			, CASE WHEN A.SMS_TYPE_10 IS NULL AND B.SMS_TYPE_10 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_10,0) + IFNULL(B.SMS_TYPE_10,0) END AS SMS_TYPE_10
			, CASE WHEN A.SMS_TYPE_11 IS NULL AND B.SMS_TYPE_11 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_11,0) + IFNULL(B.SMS_TYPE_11,0) END AS SMS_TYPE_11
			, CASE WHEN A.SMS_TYPE_00 IS NULL AND B.SMS_TYPE_00 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_00,0) + IFNULL(B.SMS_TYPE_00,0) END AS SMS_TYPE_00
		FROM ',GT_DB,'.table_tile_start_dy_t a RIGHT JOIN 
		(
		 	SELECT
				 DATA_DATE AS DATA_DATE
				#, DATA_HOUR
				, FREQUENCY AS FREQUENCY
				, UARFCN AS UARFCN
				, INDOOR AS INDOOR
				, MOVING AS MOVING
				, TILE_ID AS TILE_ID
				, RNC_ID AS RNC_ID
				#, CELL_INDOOR AS CELL_INDOOR
				#, CLUSTER_ID AS CLUSTER_ID
				#, SITE_ID AS SITE_ID
				#, CELL_ID AS CELL_ID
				, CALL_TYPE AS CALL_TYPE
				, CALL_STATUS AS CALL_STATUS
	
				, SUM(CALL_CNT) AS CALL_CNT
				, SUM(BEST_RSCP_1) AS BEST_RSCP_1
				, SUM(BEST_ECN0_1) AS BEST_ECN0_1
				, NULL AS BEST_RSCP_1_MED #median(BEST_RSCP_1_MED) AS BEST_RSCP_1_MED
				, NULL AS BEST_ECN0_1_MED #median(BEST_ECN0_1_MED) AS BEST_ECN0_1_MED
				, NULL AS SUB_DENSITY
				, SUM(ERLANG) AS ERLANG
				, SUM(DL_DATA_THRU) AS DL_DATA_THRU
				, SUM(UL_DATA_THRU) AS UL_DATA_THRU
				, SUM(DL_TRAFFIC) AS DL_TRAFFIC
				, SUM(UL_TRAFFIC) AS UL_TRAFFIC
				, SUM(U_UL_DATA_THRU) AS U_UL_DATA_THRU
				, MAX(U_MAX_UL_DATA_THRU) AS U_MAX_UL_DATA_THRU
				, SUM(U_DL_DATA_THRU) AS U_DL_DATA_THRU
				, MAX(U_MAX_DL_DATA_THRU) AS U_MAX_DL_DATA_THRU
				, SUM(CALL_CNT_ACT) AS CALL_CNT_ACT
				, SUM(BEST_RSCP_1_ACT) AS BEST_RSCP_1_ACT
				, SUM(BEST_ECN0_1_ACT) AS BEST_ECN0_1_ACT
				, NULL AS BEST_RSCP_1_ACT_MED #median(BEST_RSCP_1_ACT_MED) AS BEST_RSCP_1_ACT_MED
				, NULL AS BEST_ECN0_1_ACT_MED #median(BEST_ECN0_1_ACT_MED) AS BEST_ECN0_1_ACT_MED
				, SUM(RAB_NO_RESOURCE_AVAILABLE) AS RAB_NO_RESOURCE_AVAILABLE
				, SUM(RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON) AS RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON
				, SUM(RAB_OTHER) AS RAB_OTHER
				, SUM(RRC_CONGESTION) AS RRC_CONGESTION
				, SUM(RRC_UNSPECIFIED) AS RRC_UNSPECIFIED
				, CELL_LON,CELL_LAT
				-- CNT
				, SUM(BEST_RSCP_1_CNT) AS BEST_RSCP_1_CNT
				, SUM(BEST_ECN0_1_CNT) AS BEST_ECN0_1_CNT
				, SUM(U_UL_DATA_THRU_CNT) AS U_UL_DATA_THRU_CNT
				, SUM(U_DL_DATA_THRU_CNT) AS U_DL_DATA_THRU_CNT
				, SUM(BEST_RSCP_1_ACT_CNT) AS BEST_RSCP_1_ACT_CNT
				, SUM(BEST_ECN0_1_ACT_CNT) AS BEST_ECN0_1_ACT_CNT
				,1 AS HOUR_CNT
				,SUM(NAS_SM_SUM) AS NAS_SM_SUM
				,SUM(NAS_GPRS_MM_ATTACH_SUM) AS NAS_GPRS_MM_ATTACH_SUM
				,SUM(CALL_TYPE_10) AS CALL_TYPE_10
				,SUM(CALL_TYPE_11) AS CALL_TYPE_11
				,SUM(CALL_TYPE_12) AS CALL_TYPE_12
				,SUM(CALL_TYPE_13) AS CALL_TYPE_13
				,SUM(CALL_TYPE_14) AS CALL_TYPE_14
				,SUM(CALL_TYPE_16) AS CALL_TYPE_16
				,SUM(CALL_TYPE_18) AS CALL_TYPE_18
				,SUM(AUTH_REQUEST) AS AUTH_REQUEST
				,SUM(AUTH_RESPONSE) AS AUTH_RESPONSE
				,SUM(AUTH_FAILURE) AS AUTH_FAILURE
				,SUM(AUTH_REJECT) AS AUTH_REJECT
				,SUM(LU_REQUEST) AS LU_REQUEST
				,SUM(LU_ACCEPT) AS LU_ACCEPT
				,SUM(LU_REJECT) AS LU_REJECT
				,SUM(AUTH_CIPH_REQUEST) AS AUTH_CIPH_REQUEST
				,SUM(AUTH_CIPH_RESPONSE) AS AUTH_CIPH_RESPONSE
				,SUM(AUTH_CIPH_FAILURE) AS AUTH_CIPH_FAILURE
				,SUM(AUTH_CIPH_REJECT) AS AUTH_CIPH_REJECT
				,SUM(RAU_REQUEST) AS RAU_REQUEST
				,SUM(RAU_ACCEPT) AS RAU_ACCEPT
				,SUM(RAU_REJECT) AS RAU_REJECT
				,SUM(PDP_ACTIVATION_REQUEST_CNT) AS PDP_ACTIVATION_REQUEST_CNT
				,SUM(PDP_ACTIVATION_ACCEPT_CNT) AS PDP_ACTIVATION_ACCEPT_CNT
				,SUM(PDP_ACTIVATION_REJECT_CNT) AS PDP_ACTIVATION_REJECT_CNT
				,SUM(RRC_2000000) AS RRC_2000000
				,SUM(RRC_2001000) AS RRC_2001000
				,SUM(RAB_1006000) AS RAB_1006000
				,SUM(RAB_1014000) AS RAB_1014000
				,SUM(RAB_1015000) AS RAB_1015000
				,SUM(RAB_1019000) AS RAB_1019000
				,SUM(RAB_1033000) AS RAB_1033000
				,SUM(RAB_1034000) AS RAB_1034000
				,SUM(RAB_1039000) AS RAB_1039000
				,SUM(RAB_1040000) AS RAB_1040000
				,SUM(RAB_1042000) AS RAB_1042000
				,SUM(RAB_1046000) AS RAB_1046000
				,SUM(RAB_5113000) AS RAB_5113000
				,SUM(RAB_5114000) AS RAB_5114000
				,SUM(RRC_RAB_OTHERS) AS RRC_RAB_OTHERS
				,SUM(CSFB_SETUP_TIME_SUM) AS CSFB_SETUP_TIME_SUM
				,SUM(CSFB_SETUP_TIME_CNT) AS CSFB_SETUP_TIME_CNT
				,MAX(CSFB_SETUP_TIME_MAX) AS CSFB_SETUP_TIME_MAX
				,SUM(CSFB_CALL_CNT) AS CSFB_CALL_CNT
				,SUM(RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE) AS RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE
				,SUM(RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE) AS RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
				,SUM(RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL) AS RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL
				,SUM(RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH) AS RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH
				,SUM(RAB_UNSPECIFIED_FAILURE) AS RAB_UNSPECIFIED_FAILURE
				,SUM(SMS_TYPE_01) AS SMS_TYPE_01
				,SUM(SMS_TYPE_10) AS SMS_TYPE_10
				,SUM(SMS_TYPE_11) AS SMS_TYPE_11
				,SUM(SMS_TYPE_00) AS SMS_TYPE_00
			FROM ',GT_DB,RUN,'.`tmp_table_tile_start_',WORKER_ID,'`
			GROUP BY DATA_DATE
				#, DATA_HOUR
-- 				, FREQUENCY
-- 				, UARFCN
				, INDOOR
				, MOVING
				, TILE_ID
				, RNC_ID
				#, CELL_INDOOR
				#, CLUSTER_ID
				#, SITE_ID
				#, CELL_ID
				, CALL_TYPE 
				, CALL_STATUS
			ORDER BY NULL
		) B
		ON  A.DATA_DATE=B.DATA_DATE
-- 		AND A.FREQUENCY=B.FREQUENCY
-- 		AND A.UARFCN=B.UARFCN
		AND A.INDOOR=B.INDOOR
		AND A.MOVING=B.MOVING
		AND A.TILE_ID=B.TILE_ID
		AND A.RNC_ID=B.RNC_ID
-- 		#AND A.CELL_INDOOR=B.CELL_INDOOR
-- 		#AND A.CLUSTER_ID=B.CLUSTER_ID
-- 		#AND A.SITE_ID=B.SITE_ID
		#AND A.CELL_ID=B.CELL_ID
		AND A.CALL_TYPE=B.CALL_TYPE
		AND A.CALL_STATUS=B.CALL_STATUS
		;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Insert into table_tile_start_dy_c ', NOW());
	SET @SqlCmd=CONCAT('REPLACE INTO ',GT_DB,'.table_tile_start_dy_c
		(DATA_DATE,FREQUENCY,UARFCN,INDOOR,MOVING,RNC_ID,CELL_INDOOR,CLUSTER_ID,SITE_ID,CELL_ID
		,CELL_LON,CELL_LAT,CALL_TYPE,CALL_STATUS,CELL_NAME,CALL_CNT,BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED
		,SUB_DENSITY,ERLANG,DL_DATA_THRU,UL_DATA_THRU,DL_TRAFFIC,UL_TRAFFIC,U_UL_DATA_THRU,U_MAX_UL_DATA_THRU
		,U_DL_DATA_THRU,U_MAX_DL_DATA_THRU,CALL_CNT_ACT,BEST_RSCP_1_ACT,BEST_ECN0_1_ACT,BEST_RSCP_1_ACT_MED
		,BEST_ECN0_1_ACT_MED,RAB_NO_RESOURCE_AVAILABLE,RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,RAB_OTHER
		,RRC_CONGESTION,RRC_UNSPECIFIED,BEST_RSCP_1_CNT,BEST_ECN0_1_CNT,U_UL_DATA_THRU_CNT,U_DL_DATA_THRU_CNT
		,BEST_RSCP_1_ACT_CNT,BEST_ECN0_1_ACT_CNT
		,HOUR_CNT,NAS_SM_SUM,NAS_GPRS_MM_ATTACH_SUM,CALL_TYPE_10,CALL_TYPE_11,CALL_TYPE_12,CALL_TYPE_13,CALL_TYPE_14,CALL_TYPE_16,CALL_TYPE_18
		,AUTH_REQUEST,AUTH_RESPONSE,AUTH_FAILURE,AUTH_REJECT,LU_REQUEST,LU_ACCEPT,LU_REJECT,AUTH_CIPH_REQUEST,AUTH_CIPH_RESPONSE,AUTH_CIPH_FAILURE,AUTH_CIPH_REJECT,RAU_REQUEST,RAU_ACCEPT,RAU_REJECT
		,PDP_ACTIVATION_REQUEST_CNT,PDP_ACTIVATION_ACCEPT_CNT,PDP_ACTIVATION_REJECT_CNT
		,RRC_2000000,RRC_2001000,RAB_1006000,RAB_1014000,RAB_1015000,RAB_1019000,RAB_1033000,RAB_1034000,RAB_1039000,RAB_1040000,RAB_1042000,RAB_1046000,RAB_5113000,RAB_5114000,RRC_RAB_OTHERS
		,CSFB_SETUP_TIME_SUM,CSFB_SETUP_TIME_CNT,CSFB_SETUP_TIME_MAX,CSFB_CALL_CNT
		,RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
		,RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,RAB_UNSPECIFIED_FAILURE
		,SMS_TYPE_01,SMS_TYPE_10,SMS_TYPE_11,SMS_TYPE_00
		)
		SELECT
			B.DATA_DATE
			#, DATA_HOUR
			, B.FREQUENCY
			, B.UARFCN
			, B.INDOOR
			, B.MOVING
			#, B.TILE_ID
			, B.RNC_ID
			, B.CELL_INDOOR
			, B.CLUSTER_ID
			, B.SITE_ID
			, B.CELL_ID
			, B.CELL_LON
			, B.CELL_LAT
			, B.CALL_TYPE 
			, B.CALL_STATUS
			, B.CELL_NAME
			, CASE WHEN A.CALL_CNT IS NULL AND B.CALL_CNT IS NULL THEN NULL ELSE IFNULL(A.CALL_CNT,0) + IFNULL(B.CALL_CNT,0) END AS CALL_CNT
			, CASE WHEN A.BEST_RSCP_1 IS NULL AND B.BEST_RSCP_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1,0) + IFNULL(B.BEST_RSCP_1,0) END AS BEST_RSCP_1
			, CASE WHEN A.BEST_ECN0_1 IS NULL AND B.BEST_ECN0_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1,0) + IFNULL(B.BEST_ECN0_1,0) END AS BEST_ECN0_1
			, NULL AS BEST_RSCP_1_MED #CASE WHEN A.BEST_RSCP_1_MED IS NULL THEN B.BEST_RSCP_1_MED WHEN B.BEST_RSCP_1_MED IS NULL THEN A.BEST_RSCP_1_MED ELSE (A.BEST_RSCP_1_MED + B.BEST_RSCP_1_MED)/2 END AS BEST_RSCP_1_MED
			, NULL AS BEST_ECN0_1_MED #CASE WHEN A.BEST_ECN0_1_MED IS NULL THEN B.BEST_ECN0_1_MED WHEN B.BEST_ECN0_1_MED IS NULL THEN A.BEST_ECN0_1_MED ELSE (A.BEST_ECN0_1_MED + B.BEST_ECN0_1_MED)/2 END AS BEST_ECN0_1_MED
			, NULL AS SUB_DENSITY
			, CASE WHEN A.ERLANG IS NULL AND B.ERLANG IS NULL THEN NULL ELSE IFNULL(A.ERLANG,0) + IFNULL(B.ERLANG,0) END AS ERLANG
			, CASE WHEN A.DL_DATA_THRU IS NULL AND B.DL_DATA_THRU IS NULL THEN NULL ELSE IFNULL(A.DL_DATA_THRU,0) + IFNULL(B.DL_DATA_THRU,0) END AS DL_DATA_THRU
			, CASE WHEN A.UL_DATA_THRU IS NULL AND B.UL_DATA_THRU IS NULL THEN NULL ELSE IFNULL(A.UL_DATA_THRU,0) + IFNULL(B.UL_DATA_THRU,0) END AS UL_DATA_THRU
			, CASE WHEN A.DL_TRAFFIC IS NULL AND B.DL_TRAFFIC IS NULL THEN NULL ELSE IFNULL(A.DL_TRAFFIC,0) + IFNULL(B.DL_TRAFFIC,0) END AS DL_TRAFFIC
			, CASE WHEN A.UL_TRAFFIC IS NULL AND B.UL_TRAFFIC IS NULL THEN NULL ELSE IFNULL(A.UL_TRAFFIC,0) + IFNULL(B.UL_TRAFFIC,0) END AS UL_TRAFFIC
			, (IFNULL(A.U_UL_DATA_THRU,0) + IFNULL(B.U_UL_DATA_THRU,0)) AS U_UL_DATA_THRU
			, CASE WHEN IFNULL(A.U_MAX_UL_DATA_THRU,0) > IFNULL(B.U_MAX_UL_DATA_THRU,0) THEN A.U_MAX_UL_DATA_THRU ELSE B.U_MAX_UL_DATA_THRU END AS U_MAX_UL_DATA_THRU
			, (IFNULL(A.U_DL_DATA_THRU,0) + IFNULL(B.U_DL_DATA_THRU,0)) AS U_DL_DATA_THRU
			, CASE WHEN IFNULL(A.U_MAX_DL_DATA_THRU,0) > IFNULL(B.U_MAX_DL_DATA_THRU,0) THEN A.U_MAX_DL_DATA_THRU ELSE B.U_MAX_DL_DATA_THRU END AS U_MAX_DL_DATA_THRU
			, CASE WHEN A.CALL_CNT_ACT IS NULL AND B.CALL_CNT_ACT IS NULL THEN NULL ELSE IFNULL(A.CALL_CNT_ACT,0) + IFNULL(B.CALL_CNT_ACT,0) END AS CALL_CNT_ACT
			, CASE WHEN A.BEST_RSCP_1_ACT IS NULL AND B.BEST_RSCP_1_ACT IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1_ACT,0) + IFNULL(B.BEST_RSCP_1_ACT,0) END AS BEST_RSCP_1_ACT
			, CASE WHEN A.BEST_ECN0_1_ACT IS NULL AND B.BEST_ECN0_1_ACT IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1_ACT,0) + IFNULL(B.BEST_ECN0_1_ACT,0) END AS BEST_ECN0_1_ACT
			, NULL AS BEST_RSCP_1_ACT_MED #CASE WHEN A.BEST_RSCP_1_ACT_MED IS NULL THEN B.BEST_RSCP_1_ACT_MED WHEN B.BEST_RSCP_1_ACT_MED IS NULL THEN A.BEST_RSCP_1_ACT_MED ELSE (A.BEST_RSCP_1_ACT_MED + B.BEST_RSCP_1_ACT_MED)/2 END AS BEST_RSCP_1_ACT_MED
			, NULL AS BEST_ECN0_1_ACT_MED #CASE WHEN A.BEST_ECN0_1_ACT_MED IS NULL THEN B.BEST_ECN0_1_ACT_MED WHEN B.BEST_ECN0_1_ACT_MED IS NULL THEN A.BEST_ECN0_1_ACT_MED ELSE (A.BEST_ECN0_1_ACT_MED + B.BEST_ECN0_1_ACT_MED)/2 END AS BEST_ECN0_1_ACT_MED
			, CASE WHEN A.RAB_NO_RESOURCE_AVAILABLE IS NULL AND B.RAB_NO_RESOURCE_AVAILABLE IS NULL THEN NULL ELSE IFNULL(A.RAB_NO_RESOURCE_AVAILABLE,0) + IFNULL(B.RAB_NO_RESOURCE_AVAILABLE,0) END AS RAB_NO_RESOURCE_AVAILABLE
			, CASE WHEN A.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON IS NULL AND B.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON IS NULL THEN NULL ELSE IFNULL(A.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,0) + IFNULL(B.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,0) END AS RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON
			, CASE WHEN A.RAB_OTHER IS NULL AND B.RAB_OTHER IS NULL THEN NULL ELSE IFNULL(A.RAB_OTHER,0) + IFNULL(B.RAB_OTHER,0) END AS RAB_OTHER
			, CASE WHEN A.RRC_CONGESTION IS NULL AND B.RRC_CONGESTION IS NULL THEN NULL ELSE IFNULL(A.RRC_CONGESTION,0) + IFNULL(B.RRC_CONGESTION,0) END AS RRC_CONGESTION
			, CASE WHEN A.RRC_UNSPECIFIED IS NULL AND B.RRC_UNSPECIFIED IS NULL THEN NULL ELSE IFNULL(A.RRC_UNSPECIFIED,0) + IFNULL(B.RRC_UNSPECIFIED,0) END AS RRC_UNSPECIFIED
			-- CNT
			, CASE WHEN A.BEST_RSCP_1_CNT IS NULL AND B.BEST_RSCP_1_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1_CNT,0) + IFNULL(B.BEST_RSCP_1_CNT,0) END AS BEST_RSCP_1_CNT
			, CASE WHEN A.BEST_ECN0_1_CNT IS NULL AND B.BEST_ECN0_1_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1_CNT,0) + IFNULL(B.BEST_ECN0_1_CNT,0) END AS BEST_ECN0_1_CNT
			, CASE WHEN A.U_UL_DATA_THRU_CNT IS NULL AND B.U_UL_DATA_THRU_CNT IS NULL THEN NULL ELSE IFNULL(A.U_UL_DATA_THRU_CNT,0) + IFNULL(B.U_UL_DATA_THRU_CNT,0) END AS U_UL_DATA_THRU_CNT
			, CASE WHEN A.U_DL_DATA_THRU_CNT IS NULL AND B.U_DL_DATA_THRU_CNT IS NULL THEN NULL ELSE IFNULL(A.U_DL_DATA_THRU_CNT,0) + IFNULL(B.U_DL_DATA_THRU_CNT,0) END AS U_DL_DATA_THRU_CNT
			, CASE WHEN A.BEST_RSCP_1_ACT_CNT IS NULL AND B.BEST_RSCP_1_ACT_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1_ACT_CNT,0) + IFNULL(B.BEST_RSCP_1_ACT_CNT,0) END AS BEST_RSCP_1_ACT_CNT
			, CASE WHEN A.BEST_ECN0_1_ACT_CNT IS NULL AND B.BEST_ECN0_1_ACT_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1_ACT_CNT,0) + IFNULL(B.BEST_ECN0_1_ACT_CNT,0) END AS BEST_ECN0_1_ACT_CNT
			, CASE WHEN A.HOUR_CNT IS NULL AND B.HOUR_CNT IS NULL THEN NULL ELSE IFNULL(A.HOUR_CNT,0) + IFNULL(B.HOUR_CNT,0) END AS HOUR_CNT
			, CASE WHEN A.NAS_SM_SUM IS NULL AND B.NAS_SM_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_SM_SUM,0) + IFNULL(B.NAS_SM_SUM,0) END AS NAS_SM_SUM
			, CASE WHEN A.NAS_GPRS_MM_ATTACH_SUM IS NULL AND B.NAS_GPRS_MM_ATTACH_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_GPRS_MM_ATTACH_SUM,0) + IFNULL(B.NAS_GPRS_MM_ATTACH_SUM,0) END AS NAS_GPRS_MM_ATTACH_SUM
			, CASE WHEN A.CALL_TYPE_10 IS NULL AND B.CALL_TYPE_10 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_10,0) + IFNULL(B.CALL_TYPE_10,0) END AS CALL_TYPE_10
			, CASE WHEN A.CALL_TYPE_11 IS NULL AND B.CALL_TYPE_11 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_11,0) + IFNULL(B.CALL_TYPE_11,0) END AS CALL_TYPE_11
			, CASE WHEN A.CALL_TYPE_12 IS NULL AND B.CALL_TYPE_12 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_12,0) + IFNULL(B.CALL_TYPE_12,0) END AS CALL_TYPE_12
			, CASE WHEN A.CALL_TYPE_13 IS NULL AND B.CALL_TYPE_13 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_13,0) + IFNULL(B.CALL_TYPE_13,0) END AS CALL_TYPE_13
			, CASE WHEN A.CALL_TYPE_14 IS NULL AND B.CALL_TYPE_14 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_14,0) + IFNULL(B.CALL_TYPE_14,0) END AS CALL_TYPE_14
			, CASE WHEN A.CALL_TYPE_16 IS NULL AND B.CALL_TYPE_16 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_16,0) + IFNULL(B.CALL_TYPE_16,0) END AS CALL_TYPE_16
			, CASE WHEN A.CALL_TYPE_18 IS NULL AND B.CALL_TYPE_18 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_18,0) + IFNULL(B.CALL_TYPE_18,0) END AS CALL_TYPE_18
			, CASE WHEN A.AUTH_REQUEST IS NULL AND B.AUTH_REQUEST IS NULL THEN NULL ELSE IFNULL(A.AUTH_REQUEST,0) + IFNULL(B.AUTH_REQUEST,0) END AS AUTH_REQUEST
			, CASE WHEN A.AUTH_RESPONSE IS NULL AND B.AUTH_RESPONSE IS NULL THEN NULL ELSE IFNULL(A.AUTH_RESPONSE,0) + IFNULL(B.AUTH_RESPONSE,0) END AS AUTH_RESPONSE
			, CASE WHEN A.AUTH_FAILURE IS NULL AND B.AUTH_FAILURE IS NULL THEN NULL ELSE IFNULL(A.AUTH_FAILURE,0) + IFNULL(B.AUTH_FAILURE,0) END AS AUTH_FAILURE
			, CASE WHEN A.AUTH_REJECT IS NULL AND B.AUTH_REJECT IS NULL THEN NULL ELSE IFNULL(A.AUTH_REJECT,0) + IFNULL(B.AUTH_REJECT,0) END AS AUTH_REJECT
			, CASE WHEN A.LU_REQUEST IS NULL AND B.LU_REQUEST IS NULL THEN NULL ELSE IFNULL(A.LU_REQUEST,0) + IFNULL(B.LU_REQUEST,0) END AS LU_REQUEST
			, CASE WHEN A.LU_ACCEPT IS NULL AND B.LU_ACCEPT IS NULL THEN NULL ELSE IFNULL(A.LU_ACCEPT,0) + IFNULL(B.LU_ACCEPT,0) END AS LU_ACCEPT
			, CASE WHEN A.LU_REJECT IS NULL AND B.LU_REJECT IS NULL THEN NULL ELSE IFNULL(A.LU_REJECT,0) + IFNULL(B.LU_REJECT,0) END AS LU_REJECT
			, CASE WHEN A.AUTH_CIPH_REQUEST IS NULL AND B.AUTH_CIPH_REQUEST IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_REQUEST,0) + IFNULL(B.AUTH_CIPH_REQUEST,0) END AS AUTH_CIPH_REQUEST
			, CASE WHEN A.AUTH_CIPH_RESPONSE IS NULL AND B.AUTH_CIPH_RESPONSE IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_RESPONSE,0) + IFNULL(B.AUTH_CIPH_RESPONSE,0) END AS AUTH_CIPH_RESPONSE
			, CASE WHEN A.AUTH_CIPH_FAILURE IS NULL AND B.AUTH_CIPH_FAILURE IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_FAILURE,0) + IFNULL(B.AUTH_CIPH_FAILURE,0) END AS AUTH_CIPH_FAILURE
			, CASE WHEN A.AUTH_CIPH_REJECT IS NULL AND B.AUTH_CIPH_REJECT IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_REJECT,0) + IFNULL(B.AUTH_CIPH_REJECT,0) END AS AUTH_CIPH_REJECT
			, CASE WHEN A.RAU_REQUEST IS NULL AND B.RAU_REQUEST IS NULL THEN NULL ELSE IFNULL(A.RAU_REQUEST,0) + IFNULL(B.RAU_REQUEST,0) END AS RAU_REQUEST
			, CASE WHEN A.RAU_ACCEPT IS NULL AND B.RAU_ACCEPT IS NULL THEN NULL ELSE IFNULL(A.RAU_ACCEPT,0) + IFNULL(B.RAU_ACCEPT,0) END AS RAU_ACCEPT
			, CASE WHEN A.RAU_REJECT IS NULL AND B.RAU_REJECT IS NULL THEN NULL ELSE IFNULL(A.RAU_REJECT,0) + IFNULL(B.RAU_REJECT,0) END AS RAU_REJECT
			, CASE WHEN A.PDP_ACTIVATION_REQUEST_CNT IS NULL AND B.PDP_ACTIVATION_REQUEST_CNT IS NULL THEN NULL ELSE IFNULL(A.PDP_ACTIVATION_REQUEST_CNT,0) + IFNULL(B.PDP_ACTIVATION_REQUEST_CNT,0) END AS PDP_ACTIVATION_REQUEST_CNT
			, CASE WHEN A.PDP_ACTIVATION_ACCEPT_CNT IS NULL AND B.PDP_ACTIVATION_ACCEPT_CNT IS NULL THEN NULL ELSE IFNULL(A.PDP_ACTIVATION_ACCEPT_CNT,0) + IFNULL(B.PDP_ACTIVATION_ACCEPT_CNT,0) END AS PDP_ACTIVATION_ACCEPT_CNT
			, CASE WHEN A.PDP_ACTIVATION_REJECT_CNT IS NULL AND B.PDP_ACTIVATION_REJECT_CNT IS NULL THEN NULL ELSE IFNULL(A.PDP_ACTIVATION_REJECT_CNT,0) + IFNULL(B.PDP_ACTIVATION_REJECT_CNT,0) END AS PDP_ACTIVATION_REJECT_CNT
			, CASE WHEN A.RRC_2000000 IS NULL AND B.RRC_2000000 IS NULL THEN NULL ELSE IFNULL(A.RRC_2000000,0) + IFNULL(B.RRC_2000000,0) END AS RRC_2000000
			, CASE WHEN A.RRC_2001000 IS NULL AND B.RRC_2001000 IS NULL THEN NULL ELSE IFNULL(A.RRC_2001000,0) + IFNULL(B.RRC_2001000,0) END AS RRC_2001000
			, CASE WHEN A.RAB_1006000 IS NULL AND B.RAB_1006000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1006000,0) + IFNULL(B.RAB_1006000,0) END AS RAB_1006000
			, CASE WHEN A.RAB_1014000 IS NULL AND B.RAB_1014000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1014000,0) + IFNULL(B.RAB_1014000,0) END AS RAB_1014000
			, CASE WHEN A.RAB_1015000 IS NULL AND B.RAB_1015000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1015000,0) + IFNULL(B.RAB_1015000,0) END AS RAB_1015000
			, CASE WHEN A.RAB_1019000 IS NULL AND B.RAB_1019000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1019000,0) + IFNULL(B.RAB_1019000,0) END AS RAB_1019000
			, CASE WHEN A.RAB_1033000 IS NULL AND B.RAB_1033000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1033000,0) + IFNULL(B.RAB_1033000,0) END AS RAB_1033000
			, CASE WHEN A.RAB_1034000 IS NULL AND B.RAB_1034000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1034000,0) + IFNULL(B.RAB_1034000,0) END AS RAB_1034000
			, CASE WHEN A.RAB_1039000 IS NULL AND B.RAB_1039000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1039000,0) + IFNULL(B.RAB_1039000,0) END AS RAB_1039000
			, CASE WHEN A.RAB_1040000 IS NULL AND B.RAB_1040000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1040000,0) + IFNULL(B.RAB_1040000,0) END AS RAB_1040000
			, CASE WHEN A.RAB_1042000 IS NULL AND B.RAB_1042000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1042000,0) + IFNULL(B.RAB_1042000,0) END AS RAB_1042000
			, CASE WHEN A.RAB_1046000 IS NULL AND B.RAB_1046000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1046000,0) + IFNULL(B.RAB_1046000,0) END AS RAB_1046000
			, CASE WHEN A.RAB_5113000 IS NULL AND B.RAB_5113000 IS NULL THEN NULL ELSE IFNULL(A.RAB_5113000,0) + IFNULL(B.RAB_5113000,0) END AS RAB_5113000
			, CASE WHEN A.RAB_5114000 IS NULL AND B.RAB_5114000 IS NULL THEN NULL ELSE IFNULL(A.RAB_5114000,0) + IFNULL(B.RAB_5114000,0) END AS RAB_5114000
			, CASE WHEN A.RRC_RAB_OTHERS IS NULL AND B.RRC_RAB_OTHERS IS NULL THEN NULL ELSE IFNULL(A.RRC_RAB_OTHERS,0) + IFNULL(B.RRC_RAB_OTHERS,0) END AS RRC_RAB_OTHERS
			, CASE WHEN A.CSFB_SETUP_TIME_SUM IS NULL AND B.CSFB_SETUP_TIME_SUM IS NULL THEN NULL ELSE IFNULL(A.CSFB_SETUP_TIME_SUM,0) + IFNULL(B.CSFB_SETUP_TIME_SUM,0) END AS CSFB_SETUP_TIME_SUM
			, CASE WHEN A.CSFB_SETUP_TIME_CNT IS NULL AND B.CSFB_SETUP_TIME_CNT IS NULL THEN NULL ELSE IFNULL(A.CSFB_SETUP_TIME_CNT,0) + IFNULL(B.CSFB_SETUP_TIME_CNT,0) END AS CSFB_SETUP_TIME_CNT
			, CASE WHEN IFNULL(A.CSFB_SETUP_TIME_MAX,0) > IFNULL(B.CSFB_SETUP_TIME_MAX,0) THEN A.CSFB_SETUP_TIME_MAX ELSE B.CSFB_SETUP_TIME_MAX END AS CSFB_SETUP_TIME_MAX
			, CASE WHEN A.CSFB_CALL_CNT IS NULL AND B.CSFB_CALL_CNT IS NULL THEN NULL ELSE IFNULL(A.CSFB_CALL_CNT,0) + IFNULL(B.CSFB_CALL_CNT,0) END AS CSFB_CALL_CNT
			, CASE WHEN A.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE IS NULL AND B.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE IS NULL THEN NULL ELSE IFNULL(A.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,0) + IFNULL(B.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,0) END AS RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE
			, CASE WHEN A.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE IS NULL AND B.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE IS NULL THEN NULL ELSE IFNULL(A.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE,0) + IFNULL(B.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE,0) END AS RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
			, CASE WHEN A.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL IS NULL AND B.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL IS NULL THEN NULL ELSE IFNULL(A.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,0) + IFNULL(B.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,0) END AS RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL
			, CASE WHEN A.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH IS NULL AND B.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH IS NULL THEN NULL ELSE IFNULL(A.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,0) + IFNULL(B.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,0) END AS RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH
			, CASE WHEN A.RAB_UNSPECIFIED_FAILURE IS NULL AND B.RAB_UNSPECIFIED_FAILURE IS NULL THEN NULL ELSE IFNULL(A.RAB_UNSPECIFIED_FAILURE,0) + IFNULL(B.RAB_UNSPECIFIED_FAILURE,0) END AS RAB_UNSPECIFIED_FAILURE
			, CASE WHEN A.SMS_TYPE_01 IS NULL AND B.SMS_TYPE_01 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_01,0) + IFNULL(B.SMS_TYPE_01,0) END AS SMS_TYPE_01
			, CASE WHEN A.SMS_TYPE_10 IS NULL AND B.SMS_TYPE_10 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_10,0) + IFNULL(B.SMS_TYPE_10,0) END AS SMS_TYPE_10
			, CASE WHEN A.SMS_TYPE_11 IS NULL AND B.SMS_TYPE_11 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_11,0) + IFNULL(B.SMS_TYPE_11,0) END AS SMS_TYPE_11
			, CASE WHEN A.SMS_TYPE_00 IS NULL AND B.SMS_TYPE_00 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_00,0) + IFNULL(B.SMS_TYPE_00,0) END AS SMS_TYPE_00
		FROM ',GT_DB,'.table_tile_start_dy_c a RIGHT JOIN 
		(
		 	SELECT
				 DATA_DATE AS DATA_DATE
				#, DATA_HOUR
				, FREQUENCY AS FREQUENCY
				, UARFCN AS UARFCN
				, INDOOR AS INDOOR
				, MOVING AS MOVING
				#, TILE_ID AS TILE_ID
				, RNC_ID AS RNC_ID
				, CELL_INDOOR AS CELL_INDOOR
				, CLUSTER_ID AS CLUSTER_ID
				, SITE_ID AS SITE_ID
				, CELL_ID AS CELL_ID
				, CALL_TYPE AS CALL_TYPE
				, CALL_STATUS AS CALL_STATUS
				, CELL_NAME AS CELL_NAME
				, SUM(CALL_CNT) AS CALL_CNT
				, SUM(BEST_RSCP_1) AS BEST_RSCP_1
				, SUM(BEST_ECN0_1) AS BEST_ECN0_1
				, NULL AS BEST_RSCP_1_MED #median(BEST_RSCP_1_MED) AS BEST_RSCP_1_MED
				, NULL AS BEST_ECN0_1_MED #median(BEST_ECN0_1_MED) AS BEST_ECN0_1_MED
				, NULL AS SUB_DENSITY
				, SUM(ERLANG) AS ERLANG
				, SUM(DL_DATA_THRU) AS DL_DATA_THRU
				, SUM(UL_DATA_THRU) AS UL_DATA_THRU
				, SUM(DL_TRAFFIC) AS DL_TRAFFIC
				, SUM(UL_TRAFFIC) AS UL_TRAFFIC
				, SUM(U_UL_DATA_THRU) AS U_UL_DATA_THRU
				, MAX(U_MAX_UL_DATA_THRU) AS U_MAX_UL_DATA_THRU
				, SUM(U_DL_DATA_THRU) AS U_DL_DATA_THRU
				, MAX(U_MAX_DL_DATA_THRU) AS U_MAX_DL_DATA_THRU
				, SUM(CALL_CNT_ACT) AS CALL_CNT_ACT
				, SUM(BEST_RSCP_1_ACT) AS BEST_RSCP_1_ACT
				, SUM(BEST_ECN0_1_ACT) AS BEST_ECN0_1_ACT
				, NULL AS BEST_RSCP_1_ACT_MED #median(BEST_RSCP_1_ACT_MED) AS BEST_RSCP_1_ACT_MED
				, NULL AS BEST_ECN0_1_ACT_MED #median(BEST_ECN0_1_ACT_MED) AS BEST_ECN0_1_ACT_MED
				, SUM(RAB_NO_RESOURCE_AVAILABLE) AS RAB_NO_RESOURCE_AVAILABLE
				, SUM(RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON) AS RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON
				, SUM(RAB_OTHER) AS RAB_OTHER
				, SUM(RRC_CONGESTION) AS RRC_CONGESTION
				, SUM(RRC_UNSPECIFIED) AS RRC_UNSPECIFIED
				, CELL_LON,CELL_LAT
				-- CNT
				, SUM(BEST_RSCP_1_CNT) AS BEST_RSCP_1_CNT
				, SUM(BEST_ECN0_1_CNT) AS BEST_ECN0_1_CNT
				, SUM(U_UL_DATA_THRU_CNT) AS U_UL_DATA_THRU_CNT
				, SUM(U_DL_DATA_THRU_CNT) AS U_DL_DATA_THRU_CNT
				, SUM(BEST_RSCP_1_ACT_CNT) AS BEST_RSCP_1_ACT_CNT
				, SUM(BEST_ECN0_1_ACT_CNT) AS BEST_ECN0_1_ACT_CNT
				,1 AS HOUR_CNT
				,SUM(NAS_SM_SUM) AS NAS_SM_SUM
				,SUM(NAS_GPRS_MM_ATTACH_SUM) AS NAS_GPRS_MM_ATTACH_SUM
				,SUM(CALL_TYPE_10) AS CALL_TYPE_10
				,SUM(CALL_TYPE_11) AS CALL_TYPE_11
				,SUM(CALL_TYPE_12) AS CALL_TYPE_12
				,SUM(CALL_TYPE_13) AS CALL_TYPE_13
				,SUM(CALL_TYPE_14) AS CALL_TYPE_14
				,SUM(CALL_TYPE_16) AS CALL_TYPE_16
				,SUM(CALL_TYPE_18) AS CALL_TYPE_18
				,SUM(AUTH_REQUEST) AS AUTH_REQUEST
				,SUM(AUTH_RESPONSE) AS AUTH_RESPONSE
				,SUM(AUTH_FAILURE) AS AUTH_FAILURE
				,SUM(AUTH_REJECT) AS AUTH_REJECT
				,SUM(LU_REQUEST) AS LU_REQUEST
				,SUM(LU_ACCEPT) AS LU_ACCEPT
				,SUM(LU_REJECT) AS LU_REJECT
				,SUM(AUTH_CIPH_REQUEST) AS AUTH_CIPH_REQUEST
				,SUM(AUTH_CIPH_RESPONSE) AS AUTH_CIPH_RESPONSE
				,SUM(AUTH_CIPH_FAILURE) AS AUTH_CIPH_FAILURE
				,SUM(AUTH_CIPH_REJECT) AS AUTH_CIPH_REJECT
				,SUM(RAU_REQUEST) AS RAU_REQUEST
				,SUM(RAU_ACCEPT) AS RAU_ACCEPT
				,SUM(RAU_REJECT) AS RAU_REJECT
				,SUM(PDP_ACTIVATION_REQUEST_CNT) AS PDP_ACTIVATION_REQUEST_CNT
				,SUM(PDP_ACTIVATION_ACCEPT_CNT) AS PDP_ACTIVATION_ACCEPT_CNT
				,SUM(PDP_ACTIVATION_REJECT_CNT) AS PDP_ACTIVATION_REJECT_CNT
				,SUM(RRC_2000000) AS RRC_2000000
				,SUM(RRC_2001000) AS RRC_2001000
				,SUM(RAB_1006000) AS RAB_1006000
				,SUM(RAB_1014000) AS RAB_1014000
				,SUM(RAB_1015000) AS RAB_1015000
				,SUM(RAB_1019000) AS RAB_1019000
				,SUM(RAB_1033000) AS RAB_1033000
				,SUM(RAB_1034000) AS RAB_1034000
				,SUM(RAB_1039000) AS RAB_1039000
				,SUM(RAB_1040000) AS RAB_1040000
				,SUM(RAB_1042000) AS RAB_1042000
				,SUM(RAB_1046000) AS RAB_1046000
				,SUM(RAB_5113000) AS RAB_5113000
				,SUM(RAB_5114000) AS RAB_5114000
				,SUM(RRC_RAB_OTHERS) AS RRC_RAB_OTHERS
				,SUM(CSFB_SETUP_TIME_SUM) AS CSFB_SETUP_TIME_SUM
				,SUM(CSFB_SETUP_TIME_CNT) AS CSFB_SETUP_TIME_CNT
				,MAX(CSFB_SETUP_TIME_MAX) AS CSFB_SETUP_TIME_MAX
				,SUM(CSFB_CALL_CNT) AS CSFB_CALL_CNT
				,SUM(RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE) AS RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE
				,SUM(RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE) AS RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
				,SUM(RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL) AS RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL
				,SUM(RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH) AS RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH
				,SUM(RAB_UNSPECIFIED_FAILURE) AS RAB_UNSPECIFIED_FAILURE
				,SUM(SMS_TYPE_01) AS SMS_TYPE_01
				,SUM(SMS_TYPE_10) AS SMS_TYPE_10
				,SUM(SMS_TYPE_11) AS SMS_TYPE_11
				,SUM(SMS_TYPE_00) AS SMS_TYPE_00
			FROM ',GT_DB,RUN,'.`tmp_table_tile_start_',WORKER_ID,'`
			GROUP BY DATA_DATE
				#, DATA_HOUR
-- 				, FREQUENCY
-- 				, UARFCN
				, INDOOR
				, MOVING
				#, TILE_ID
				, RNC_ID
-- 				, CELL_INDOOR
-- 				, CLUSTER_ID
-- 				, SITE_ID
				, CELL_ID
				, CALL_TYPE 
				, CALL_STATUS
			ORDER BY NULL
		) B
		ON  A.DATA_DATE=B.DATA_DATE
-- 		AND A.FREQUENCY=B.FREQUENCY
-- 		AND A.UARFCN=B.UARFCN
		AND A.INDOOR=B.INDOOR
		AND A.MOVING=B.MOVING
		#AND A.TILE_ID=B.TILE_ID
		AND A.RNC_ID=B.RNC_ID
-- 		AND A.CELL_INDOOR=B.CELL_INDOOR
-- 		AND A.CLUSTER_ID=B.CLUSTER_ID
-- 		AND A.SITE_ID=B.SITE_ID
		AND A.CELL_ID=B.CELL_ID
		AND A.CALL_TYPE=B.CALL_TYPE
		AND A.CALL_STATUS=B.CALL_STATUS
		;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Insert into table_tile_start_dy_def ', NOW());
	SET @SqlCmd=CONCAT('REPLACE INTO ',GT_DB,'.table_tile_start_dy_def
		(DATA_DATE,`FREQUENCY`,`UARFCN`,`TILE_ID`,RNC_ID,`CELL_INDOOR`,CLUSTER_ID,SITE_ID,CELL_ID
		,CELL_LON,CELL_LAT,CELL_NAME,CALL_CNT,BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED
		,SUB_DENSITY,ERLANG,DL_DATA_THRU,UL_DATA_THRU,DL_TRAFFIC,UL_TRAFFIC,U_UL_DATA_THRU,U_MAX_UL_DATA_THRU
		,U_DL_DATA_THRU,U_MAX_DL_DATA_THRU,CALL_CNT_ACT,BEST_RSCP_1_ACT,BEST_ECN0_1_ACT,BEST_RSCP_1_ACT_MED
		,BEST_ECN0_1_ACT_MED,RAB_NO_RESOURCE_AVAILABLE,RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,RAB_OTHER
		,RRC_CONGESTION,RRC_UNSPECIFIED,BEST_RSCP_1_CNT,BEST_ECN0_1_CNT,U_UL_DATA_THRU_CNT,U_DL_DATA_THRU_CNT
		,BEST_RSCP_1_ACT_CNT,BEST_ECN0_1_ACT_CNT
		,HOUR_CNT,NAS_SM_SUM,NAS_GPRS_MM_ATTACH_SUM,CALL_TYPE_10,CALL_TYPE_11,CALL_TYPE_12,CALL_TYPE_13,CALL_TYPE_14,CALL_TYPE_16,CALL_TYPE_18
		,AUTH_REQUEST,AUTH_RESPONSE,AUTH_FAILURE,AUTH_REJECT,LU_REQUEST,LU_ACCEPT,LU_REJECT,AUTH_CIPH_REQUEST,AUTH_CIPH_RESPONSE,AUTH_CIPH_FAILURE,AUTH_CIPH_REJECT,RAU_REQUEST,RAU_ACCEPT,RAU_REJECT
		,PDP_ACTIVATION_REQUEST_CNT,PDP_ACTIVATION_ACCEPT_CNT,PDP_ACTIVATION_REJECT_CNT
		,RRC_2000000,RRC_2001000,RAB_1006000,RAB_1014000,RAB_1015000,RAB_1019000,RAB_1033000,RAB_1034000,RAB_1039000,RAB_1040000,RAB_1042000,RAB_1046000,RAB_5113000,RAB_5114000,RRC_RAB_OTHERS
		,CSFB_SETUP_TIME_SUM,CSFB_SETUP_TIME_CNT,CSFB_SETUP_TIME_MAX,CSFB_CALL_CNT
		,RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
		,RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,RAB_UNSPECIFIED_FAILURE
		,SMS_TYPE_01,SMS_TYPE_10,SMS_TYPE_11,SMS_TYPE_00
		)
		SELECT
			B.DATA_DATE
			#, DATA_HOUR
			, B.FREQUENCY
			, B.UARFCN
			#, B.INDOOR
			#, B.MOVING
			, B.TILE_ID
			, B.RNC_ID
			, B.CELL_INDOOR
			, B.CLUSTER_ID
			, B.SITE_ID
			, B.CELL_ID
			, B.CELL_LON
			, B.CELL_LAT
			#, B.CALL_TYPE 
			#, B.CALL_STATUS	
			, B.CELL_NAME
			, CASE WHEN A.CALL_CNT IS NULL AND B.CALL_CNT IS NULL THEN NULL ELSE IFNULL(A.CALL_CNT,0) + IFNULL(B.CALL_CNT,0) END AS CALL_CNT
			, CASE WHEN A.BEST_RSCP_1 IS NULL AND B.BEST_RSCP_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1,0) + IFNULL(B.BEST_RSCP_1,0) END AS BEST_RSCP_1
			, CASE WHEN A.BEST_ECN0_1 IS NULL AND B.BEST_ECN0_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1,0) + IFNULL(B.BEST_ECN0_1,0) END AS BEST_ECN0_1
			, NULL AS BEST_RSCP_1_MED #CASE WHEN A.BEST_RSCP_1_MED IS NULL THEN B.BEST_RSCP_1_MED WHEN B.BEST_RSCP_1_MED IS NULL THEN A.BEST_RSCP_1_MED ELSE (A.BEST_RSCP_1_MED + B.BEST_RSCP_1_MED)/2 END AS BEST_RSCP_1_MED
			, NULL AS BEST_ECN0_1_MED #CASE WHEN A.BEST_ECN0_1_MED IS NULL THEN B.BEST_ECN0_1_MED WHEN B.BEST_ECN0_1_MED IS NULL THEN A.BEST_ECN0_1_MED ELSE (A.BEST_ECN0_1_MED + B.BEST_ECN0_1_MED)/2 END AS BEST_ECN0_1_MED
			, NULL AS SUB_DENSITY
			, CASE WHEN A.ERLANG IS NULL AND B.ERLANG IS NULL THEN NULL ELSE IFNULL(A.ERLANG,0) + IFNULL(B.ERLANG,0) END AS ERLANG
			, CASE WHEN A.DL_DATA_THRU IS NULL AND B.DL_DATA_THRU IS NULL THEN NULL ELSE IFNULL(A.DL_DATA_THRU,0) + IFNULL(B.DL_DATA_THRU,0) END AS DL_DATA_THRU
			, CASE WHEN A.UL_DATA_THRU IS NULL AND B.UL_DATA_THRU IS NULL THEN NULL ELSE IFNULL(A.UL_DATA_THRU,0) + IFNULL(B.UL_DATA_THRU,0) END AS UL_DATA_THRU
			, CASE WHEN A.DL_TRAFFIC IS NULL AND B.DL_TRAFFIC IS NULL THEN NULL ELSE IFNULL(A.DL_TRAFFIC,0) + IFNULL(B.DL_TRAFFIC,0) END AS DL_TRAFFIC
			, CASE WHEN A.UL_TRAFFIC IS NULL AND B.UL_TRAFFIC IS NULL THEN NULL ELSE IFNULL(A.UL_TRAFFIC,0) + IFNULL(B.UL_TRAFFIC,0) END AS UL_TRAFFIC
			, (IFNULL(A.U_UL_DATA_THRU,0) + IFNULL(B.U_UL_DATA_THRU,0)) AS U_UL_DATA_THRU
			, CASE WHEN IFNULL(A.U_MAX_UL_DATA_THRU,0) > IFNULL(B.U_MAX_UL_DATA_THRU,0) THEN A.U_MAX_UL_DATA_THRU ELSE B.U_MAX_UL_DATA_THRU END AS U_MAX_UL_DATA_THRU
			, (IFNULL(A.U_DL_DATA_THRU,0) + IFNULL(B.U_DL_DATA_THRU,0)) AS U_DL_DATA_THRU
			, CASE WHEN IFNULL(A.U_MAX_DL_DATA_THRU,0) > IFNULL(B.U_MAX_DL_DATA_THRU,0) THEN A.U_MAX_DL_DATA_THRU ELSE B.U_MAX_DL_DATA_THRU END AS U_MAX_DL_DATA_THRU
			, CASE WHEN A.CALL_CNT_ACT IS NULL AND B.CALL_CNT_ACT IS NULL THEN NULL ELSE IFNULL(A.CALL_CNT_ACT,0) + IFNULL(B.CALL_CNT_ACT,0) END AS CALL_CNT_ACT
			, CASE WHEN A.BEST_RSCP_1_ACT IS NULL AND B.BEST_RSCP_1_ACT IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1_ACT,0) + IFNULL(B.BEST_RSCP_1_ACT,0) END AS BEST_RSCP_1_ACT
			, CASE WHEN A.BEST_ECN0_1_ACT IS NULL AND B.BEST_ECN0_1_ACT IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1_ACT,0) + IFNULL(B.BEST_ECN0_1_ACT,0) END AS BEST_ECN0_1_ACT
			, NULL AS BEST_RSCP_1_ACT_MED #CASE WHEN A.BEST_RSCP_1_ACT_MED IS NULL THEN B.BEST_RSCP_1_ACT_MED WHEN B.BEST_RSCP_1_ACT_MED IS NULL THEN A.BEST_RSCP_1_ACT_MED ELSE (A.BEST_RSCP_1_ACT_MED + B.BEST_RSCP_1_ACT_MED)/2 END AS BEST_RSCP_1_ACT_MED
			, NULL AS BEST_ECN0_1_ACT_MED #CASE WHEN A.BEST_ECN0_1_ACT_MED IS NULL THEN B.BEST_ECN0_1_ACT_MED WHEN B.BEST_ECN0_1_ACT_MED IS NULL THEN A.BEST_ECN0_1_ACT_MED ELSE (A.BEST_ECN0_1_ACT_MED + B.BEST_ECN0_1_ACT_MED)/2 END AS BEST_ECN0_1_ACT_MED
			, CASE WHEN A.RAB_NO_RESOURCE_AVAILABLE IS NULL AND B.RAB_NO_RESOURCE_AVAILABLE IS NULL THEN NULL ELSE IFNULL(A.RAB_NO_RESOURCE_AVAILABLE,0) + IFNULL(B.RAB_NO_RESOURCE_AVAILABLE,0) END AS RAB_NO_RESOURCE_AVAILABLE
			, CASE WHEN A.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON IS NULL AND B.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON IS NULL THEN NULL ELSE IFNULL(A.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,0) + IFNULL(B.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,0) END AS RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON
			, CASE WHEN A.RAB_OTHER IS NULL AND B.RAB_OTHER IS NULL THEN NULL ELSE IFNULL(A.RAB_OTHER,0) + IFNULL(B.RAB_OTHER,0) END AS RAB_OTHER
			, CASE WHEN A.RRC_CONGESTION IS NULL AND B.RRC_CONGESTION IS NULL THEN NULL ELSE IFNULL(A.RRC_CONGESTION,0) + IFNULL(B.RRC_CONGESTION,0) END AS RRC_CONGESTION
			, CASE WHEN A.RRC_UNSPECIFIED IS NULL AND B.RRC_UNSPECIFIED IS NULL THEN NULL ELSE IFNULL(A.RRC_UNSPECIFIED,0) + IFNULL(B.RRC_UNSPECIFIED,0) END AS RRC_UNSPECIFIED
			-- CNT
			, CASE WHEN A.BEST_RSCP_1_CNT IS NULL AND B.BEST_RSCP_1_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1_CNT,0) + IFNULL(B.BEST_RSCP_1_CNT,0) END AS BEST_RSCP_1_CNT
			, CASE WHEN A.BEST_ECN0_1_CNT IS NULL AND B.BEST_ECN0_1_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1_CNT,0) + IFNULL(B.BEST_ECN0_1_CNT,0) END AS BEST_ECN0_1_CNT
			, CASE WHEN A.U_UL_DATA_THRU_CNT IS NULL AND B.U_UL_DATA_THRU_CNT IS NULL THEN NULL ELSE IFNULL(A.U_UL_DATA_THRU_CNT,0) + IFNULL(B.U_UL_DATA_THRU_CNT,0) END AS U_UL_DATA_THRU_CNT
			, CASE WHEN A.U_DL_DATA_THRU_CNT IS NULL AND B.U_DL_DATA_THRU_CNT IS NULL THEN NULL ELSE IFNULL(A.U_DL_DATA_THRU_CNT,0) + IFNULL(B.U_DL_DATA_THRU_CNT,0) END AS U_DL_DATA_THRU_CNT
			, CASE WHEN A.BEST_RSCP_1_ACT_CNT IS NULL AND B.BEST_RSCP_1_ACT_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1_ACT_CNT,0) + IFNULL(B.BEST_RSCP_1_ACT_CNT,0) END AS BEST_RSCP_1_ACT_CNT
			, CASE WHEN A.BEST_ECN0_1_ACT_CNT IS NULL AND B.BEST_ECN0_1_ACT_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1_ACT_CNT,0) + IFNULL(B.BEST_ECN0_1_ACT_CNT,0) END AS BEST_ECN0_1_ACT_CNT
			, CASE WHEN A.HOUR_CNT IS NULL AND B.HOUR_CNT IS NULL THEN NULL ELSE IFNULL(A.HOUR_CNT,0) + IFNULL(B.HOUR_CNT,0) END AS HOUR_CNT
			, CASE WHEN A.NAS_SM_SUM IS NULL AND B.NAS_SM_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_SM_SUM,0) + IFNULL(B.NAS_SM_SUM,0) END AS NAS_SM_SUM
			, CASE WHEN A.NAS_GPRS_MM_ATTACH_SUM IS NULL AND B.NAS_GPRS_MM_ATTACH_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_GPRS_MM_ATTACH_SUM,0) + IFNULL(B.NAS_GPRS_MM_ATTACH_SUM,0) END AS NAS_GPRS_MM_ATTACH_SUM
			, CASE WHEN A.CALL_TYPE_10 IS NULL AND B.CALL_TYPE_10 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_10,0) + IFNULL(B.CALL_TYPE_10,0) END AS CALL_TYPE_10
			, CASE WHEN A.CALL_TYPE_11 IS NULL AND B.CALL_TYPE_11 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_11,0) + IFNULL(B.CALL_TYPE_11,0) END AS CALL_TYPE_11
			, CASE WHEN A.CALL_TYPE_12 IS NULL AND B.CALL_TYPE_12 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_12,0) + IFNULL(B.CALL_TYPE_12,0) END AS CALL_TYPE_12
			, CASE WHEN A.CALL_TYPE_13 IS NULL AND B.CALL_TYPE_13 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_13,0) + IFNULL(B.CALL_TYPE_13,0) END AS CALL_TYPE_13
			, CASE WHEN A.CALL_TYPE_14 IS NULL AND B.CALL_TYPE_14 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_14,0) + IFNULL(B.CALL_TYPE_14,0) END AS CALL_TYPE_14
			, CASE WHEN A.CALL_TYPE_16 IS NULL AND B.CALL_TYPE_16 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_16,0) + IFNULL(B.CALL_TYPE_16,0) END AS CALL_TYPE_16
			, CASE WHEN A.CALL_TYPE_18 IS NULL AND B.CALL_TYPE_18 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_18,0) + IFNULL(B.CALL_TYPE_18,0) END AS CALL_TYPE_18
			, CASE WHEN A.AUTH_REQUEST IS NULL AND B.AUTH_REQUEST IS NULL THEN NULL ELSE IFNULL(A.AUTH_REQUEST,0) + IFNULL(B.AUTH_REQUEST,0) END AS AUTH_REQUEST
			, CASE WHEN A.AUTH_RESPONSE IS NULL AND B.AUTH_RESPONSE IS NULL THEN NULL ELSE IFNULL(A.AUTH_RESPONSE,0) + IFNULL(B.AUTH_RESPONSE,0) END AS AUTH_RESPONSE
			, CASE WHEN A.AUTH_FAILURE IS NULL AND B.AUTH_FAILURE IS NULL THEN NULL ELSE IFNULL(A.AUTH_FAILURE,0) + IFNULL(B.AUTH_FAILURE,0) END AS AUTH_FAILURE
			, CASE WHEN A.AUTH_REJECT IS NULL AND B.AUTH_REJECT IS NULL THEN NULL ELSE IFNULL(A.AUTH_REJECT,0) + IFNULL(B.AUTH_REJECT,0) END AS AUTH_REJECT
			, CASE WHEN A.LU_REQUEST IS NULL AND B.LU_REQUEST IS NULL THEN NULL ELSE IFNULL(A.LU_REQUEST,0) + IFNULL(B.LU_REQUEST,0) END AS LU_REQUEST
			, CASE WHEN A.LU_ACCEPT IS NULL AND B.LU_ACCEPT IS NULL THEN NULL ELSE IFNULL(A.LU_ACCEPT,0) + IFNULL(B.LU_ACCEPT,0) END AS LU_ACCEPT
			, CASE WHEN A.LU_REJECT IS NULL AND B.LU_REJECT IS NULL THEN NULL ELSE IFNULL(A.LU_REJECT,0) + IFNULL(B.LU_REJECT,0) END AS LU_REJECT
			, CASE WHEN A.AUTH_CIPH_REQUEST IS NULL AND B.AUTH_CIPH_REQUEST IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_REQUEST,0) + IFNULL(B.AUTH_CIPH_REQUEST,0) END AS AUTH_CIPH_REQUEST
			, CASE WHEN A.AUTH_CIPH_RESPONSE IS NULL AND B.AUTH_CIPH_RESPONSE IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_RESPONSE,0) + IFNULL(B.AUTH_CIPH_RESPONSE,0) END AS AUTH_CIPH_RESPONSE
			, CASE WHEN A.AUTH_CIPH_FAILURE IS NULL AND B.AUTH_CIPH_FAILURE IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_FAILURE,0) + IFNULL(B.AUTH_CIPH_FAILURE,0) END AS AUTH_CIPH_FAILURE
			, CASE WHEN A.AUTH_CIPH_REJECT IS NULL AND B.AUTH_CIPH_REJECT IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_REJECT,0) + IFNULL(B.AUTH_CIPH_REJECT,0) END AS AUTH_CIPH_REJECT
			, CASE WHEN A.RAU_REQUEST IS NULL AND B.RAU_REQUEST IS NULL THEN NULL ELSE IFNULL(A.RAU_REQUEST,0) + IFNULL(B.RAU_REQUEST,0) END AS RAU_REQUEST
			, CASE WHEN A.RAU_ACCEPT IS NULL AND B.RAU_ACCEPT IS NULL THEN NULL ELSE IFNULL(A.RAU_ACCEPT,0) + IFNULL(B.RAU_ACCEPT,0) END AS RAU_ACCEPT
			, CASE WHEN A.RAU_REJECT IS NULL AND B.RAU_REJECT IS NULL THEN NULL ELSE IFNULL(A.RAU_REJECT,0) + IFNULL(B.RAU_REJECT,0) END AS RAU_REJECT
			, CASE WHEN A.PDP_ACTIVATION_REQUEST_CNT IS NULL AND B.PDP_ACTIVATION_REQUEST_CNT IS NULL THEN NULL ELSE IFNULL(A.PDP_ACTIVATION_REQUEST_CNT,0) + IFNULL(B.PDP_ACTIVATION_REQUEST_CNT,0) END AS PDP_ACTIVATION_REQUEST_CNT
			, CASE WHEN A.PDP_ACTIVATION_ACCEPT_CNT IS NULL AND B.PDP_ACTIVATION_ACCEPT_CNT IS NULL THEN NULL ELSE IFNULL(A.PDP_ACTIVATION_ACCEPT_CNT,0) + IFNULL(B.PDP_ACTIVATION_ACCEPT_CNT,0) END AS PDP_ACTIVATION_ACCEPT_CNT
			, CASE WHEN A.PDP_ACTIVATION_REJECT_CNT IS NULL AND B.PDP_ACTIVATION_REJECT_CNT IS NULL THEN NULL ELSE IFNULL(A.PDP_ACTIVATION_REJECT_CNT,0) + IFNULL(B.PDP_ACTIVATION_REJECT_CNT,0) END AS PDP_ACTIVATION_REJECT_CNT
			, CASE WHEN A.RRC_2000000 IS NULL AND B.RRC_2000000 IS NULL THEN NULL ELSE IFNULL(A.RRC_2000000,0) + IFNULL(B.RRC_2000000,0) END AS RRC_2000000
			, CASE WHEN A.RRC_2001000 IS NULL AND B.RRC_2001000 IS NULL THEN NULL ELSE IFNULL(A.RRC_2001000,0) + IFNULL(B.RRC_2001000,0) END AS RRC_2001000
			, CASE WHEN A.RAB_1006000 IS NULL AND B.RAB_1006000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1006000,0) + IFNULL(B.RAB_1006000,0) END AS RAB_1006000
			, CASE WHEN A.RAB_1014000 IS NULL AND B.RAB_1014000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1014000,0) + IFNULL(B.RAB_1014000,0) END AS RAB_1014000
			, CASE WHEN A.RAB_1015000 IS NULL AND B.RAB_1015000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1015000,0) + IFNULL(B.RAB_1015000,0) END AS RAB_1015000
			, CASE WHEN A.RAB_1019000 IS NULL AND B.RAB_1019000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1019000,0) + IFNULL(B.RAB_1019000,0) END AS RAB_1019000
			, CASE WHEN A.RAB_1033000 IS NULL AND B.RAB_1033000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1033000,0) + IFNULL(B.RAB_1033000,0) END AS RAB_1033000
			, CASE WHEN A.RAB_1034000 IS NULL AND B.RAB_1034000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1034000,0) + IFNULL(B.RAB_1034000,0) END AS RAB_1034000
			, CASE WHEN A.RAB_1039000 IS NULL AND B.RAB_1039000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1039000,0) + IFNULL(B.RAB_1039000,0) END AS RAB_1039000
			, CASE WHEN A.RAB_1040000 IS NULL AND B.RAB_1040000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1040000,0) + IFNULL(B.RAB_1040000,0) END AS RAB_1040000
			, CASE WHEN A.RAB_1042000 IS NULL AND B.RAB_1042000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1042000,0) + IFNULL(B.RAB_1042000,0) END AS RAB_1042000
			, CASE WHEN A.RAB_1046000 IS NULL AND B.RAB_1046000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1046000,0) + IFNULL(B.RAB_1046000,0) END AS RAB_1046000
			, CASE WHEN A.RAB_5113000 IS NULL AND B.RAB_5113000 IS NULL THEN NULL ELSE IFNULL(A.RAB_5113000,0) + IFNULL(B.RAB_5113000,0) END AS RAB_5113000
			, CASE WHEN A.RAB_5114000 IS NULL AND B.RAB_5114000 IS NULL THEN NULL ELSE IFNULL(A.RAB_5114000,0) + IFNULL(B.RAB_5114000,0) END AS RAB_5114000
			, CASE WHEN A.RRC_RAB_OTHERS IS NULL AND B.RRC_RAB_OTHERS IS NULL THEN NULL ELSE IFNULL(A.RRC_RAB_OTHERS,0) + IFNULL(B.RRC_RAB_OTHERS,0) END AS RRC_RAB_OTHERS
			, CASE WHEN A.CSFB_SETUP_TIME_SUM IS NULL AND B.CSFB_SETUP_TIME_SUM IS NULL THEN NULL ELSE IFNULL(A.CSFB_SETUP_TIME_SUM,0) + IFNULL(B.CSFB_SETUP_TIME_SUM,0) END AS CSFB_SETUP_TIME_SUM
			, CASE WHEN A.CSFB_SETUP_TIME_CNT IS NULL AND B.CSFB_SETUP_TIME_CNT IS NULL THEN NULL ELSE IFNULL(A.CSFB_SETUP_TIME_CNT,0) + IFNULL(B.CSFB_SETUP_TIME_CNT,0) END AS CSFB_SETUP_TIME_CNT
			, CASE WHEN IFNULL(A.CSFB_SETUP_TIME_MAX,0) > IFNULL(B.CSFB_SETUP_TIME_MAX,0) THEN A.CSFB_SETUP_TIME_MAX ELSE B.CSFB_SETUP_TIME_MAX END AS CSFB_SETUP_TIME_MAX
			, CASE WHEN A.CSFB_CALL_CNT IS NULL AND B.CSFB_CALL_CNT IS NULL THEN NULL ELSE IFNULL(A.CSFB_CALL_CNT,0) + IFNULL(B.CSFB_CALL_CNT,0) END AS CSFB_CALL_CNT
			, CASE WHEN A.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE IS NULL AND B.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE IS NULL THEN NULL ELSE IFNULL(A.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,0) + IFNULL(B.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,0) END AS RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE
			, CASE WHEN A.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE IS NULL AND B.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE IS NULL THEN NULL ELSE IFNULL(A.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE,0) + IFNULL(B.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE,0) END AS RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
			, CASE WHEN A.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL IS NULL AND B.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL IS NULL THEN NULL ELSE IFNULL(A.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,0) + IFNULL(B.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,0) END AS RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL
			, CASE WHEN A.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH IS NULL AND B.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH IS NULL THEN NULL ELSE IFNULL(A.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,0) + IFNULL(B.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,0) END AS RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH
			, CASE WHEN A.RAB_UNSPECIFIED_FAILURE IS NULL AND B.RAB_UNSPECIFIED_FAILURE IS NULL THEN NULL ELSE IFNULL(A.RAB_UNSPECIFIED_FAILURE,0) + IFNULL(B.RAB_UNSPECIFIED_FAILURE,0) END AS RAB_UNSPECIFIED_FAILURE
			, CASE WHEN A.SMS_TYPE_01 IS NULL AND B.SMS_TYPE_01 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_01,0) + IFNULL(B.SMS_TYPE_01,0) END AS SMS_TYPE_01
			, CASE WHEN A.SMS_TYPE_10 IS NULL AND B.SMS_TYPE_10 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_10,0) + IFNULL(B.SMS_TYPE_10,0) END AS SMS_TYPE_10
			, CASE WHEN A.SMS_TYPE_11 IS NULL AND B.SMS_TYPE_11 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_11,0) + IFNULL(B.SMS_TYPE_11,0) END AS SMS_TYPE_11
			, CASE WHEN A.SMS_TYPE_00 IS NULL AND B.SMS_TYPE_00 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_00,0) + IFNULL(B.SMS_TYPE_00,0) END AS SMS_TYPE_00
		FROM ',GT_DB,'.table_tile_start_dy_def a RIGHT JOIN 
		(
		 	SELECT
				 DATA_DATE AS DATA_DATE
				#, DATA_HOUR
				, FREQUENCY AS FREQUENCY
				, UARFCN AS UARFCN
				#, INDOOR AS INDOOR
				#, MOVING AS MOVING
				, TILE_ID AS TILE_ID
				, RNC_ID AS RNC_ID
				, CELL_INDOOR AS CELL_INDOOR
				, CLUSTER_ID AS CLUSTER_ID
				, SITE_ID AS SITE_ID
				, CELL_ID AS CELL_ID
				#, CALL_TYPE AS CALL_TYPE
				#, CALL_STATUS AS CALL_STATUS
				, CELL_NAME AS CELL_NAME
				, SUM(CALL_CNT) AS CALL_CNT
				, SUM(BEST_RSCP_1) AS BEST_RSCP_1
				, SUM(BEST_ECN0_1) AS BEST_ECN0_1
				, NULL AS BEST_RSCP_1_MED #median(BEST_RSCP_1_MED) AS BEST_RSCP_1_MED
				, NULL AS BEST_ECN0_1_MED #median(BEST_ECN0_1_MED) AS BEST_ECN0_1_MED
				, NULL AS SUB_DENSITY
				, SUM(ERLANG) AS ERLANG
				, SUM(DL_DATA_THRU) AS DL_DATA_THRU
				, SUM(UL_DATA_THRU) AS UL_DATA_THRU
				, SUM(DL_TRAFFIC) AS DL_TRAFFIC
				, SUM(UL_TRAFFIC) AS UL_TRAFFIC
				, SUM(U_UL_DATA_THRU) AS U_UL_DATA_THRU
				, MAX(U_MAX_UL_DATA_THRU) AS U_MAX_UL_DATA_THRU
				, SUM(U_DL_DATA_THRU) AS U_DL_DATA_THRU
				, MAX(U_MAX_DL_DATA_THRU) AS U_MAX_DL_DATA_THRU
				, SUM(CALL_CNT_ACT) AS CALL_CNT_ACT
				, SUM(BEST_RSCP_1_ACT) AS BEST_RSCP_1_ACT
				, SUM(BEST_ECN0_1_ACT) AS BEST_ECN0_1_ACT
				, NULL AS BEST_RSCP_1_ACT_MED #median(BEST_RSCP_1_ACT_MED) AS BEST_RSCP_1_ACT_MED
				, NULL AS BEST_ECN0_1_ACT_MED #median(BEST_ECN0_1_ACT_MED) AS BEST_ECN0_1_ACT_MED
				, SUM(RAB_NO_RESOURCE_AVAILABLE) AS RAB_NO_RESOURCE_AVAILABLE
				, SUM(RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON) AS RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON
				, SUM(RAB_OTHER) AS RAB_OTHER
				, SUM(RRC_CONGESTION) AS RRC_CONGESTION
				, SUM(RRC_UNSPECIFIED) AS RRC_UNSPECIFIED
				, CELL_LON,CELL_LAT
				-- CNT
				, SUM(BEST_RSCP_1_CNT) AS BEST_RSCP_1_CNT
				, SUM(BEST_ECN0_1_CNT) AS BEST_ECN0_1_CNT
				, SUM(U_UL_DATA_THRU_CNT) AS U_UL_DATA_THRU_CNT
				, SUM(U_DL_DATA_THRU_CNT) AS U_DL_DATA_THRU_CNT
				, SUM(BEST_RSCP_1_ACT_CNT) AS BEST_RSCP_1_ACT_CNT
				, SUM(BEST_ECN0_1_ACT_CNT) AS BEST_ECN0_1_ACT_CNT
				,1 AS HOUR_CNT
				,SUM(NAS_SM_SUM) AS NAS_SM_SUM
				,SUM(NAS_GPRS_MM_ATTACH_SUM) AS NAS_GPRS_MM_ATTACH_SUM
				,SUM(CALL_TYPE_10) AS CALL_TYPE_10
				,SUM(CALL_TYPE_11) AS CALL_TYPE_11
				,SUM(CALL_TYPE_12) AS CALL_TYPE_12
				,SUM(CALL_TYPE_13) AS CALL_TYPE_13
				,SUM(CALL_TYPE_14) AS CALL_TYPE_14
				,SUM(CALL_TYPE_16) AS CALL_TYPE_16
				,SUM(CALL_TYPE_18) AS CALL_TYPE_18
				,SUM(AUTH_REQUEST) AS AUTH_REQUEST
				,SUM(AUTH_RESPONSE) AS AUTH_RESPONSE
				,SUM(AUTH_FAILURE) AS AUTH_FAILURE
				,SUM(AUTH_REJECT) AS AUTH_REJECT
				,SUM(LU_REQUEST) AS LU_REQUEST
				,SUM(LU_ACCEPT) AS LU_ACCEPT
				,SUM(LU_REJECT) AS LU_REJECT
				,SUM(AUTH_CIPH_REQUEST) AS AUTH_CIPH_REQUEST
				,SUM(AUTH_CIPH_RESPONSE) AS AUTH_CIPH_RESPONSE
				,SUM(AUTH_CIPH_FAILURE) AS AUTH_CIPH_FAILURE
				,SUM(AUTH_CIPH_REJECT) AS AUTH_CIPH_REJECT
				,SUM(RAU_REQUEST) AS RAU_REQUEST
				,SUM(RAU_ACCEPT) AS RAU_ACCEPT
				,SUM(RAU_REJECT) AS RAU_REJECT
				,SUM(PDP_ACTIVATION_REQUEST_CNT) AS PDP_ACTIVATION_REQUEST_CNT
				,SUM(PDP_ACTIVATION_ACCEPT_CNT) AS PDP_ACTIVATION_ACCEPT_CNT
				,SUM(PDP_ACTIVATION_REJECT_CNT) AS PDP_ACTIVATION_REJECT_CNT
				,SUM(RRC_2000000) AS RRC_2000000
				,SUM(RRC_2001000) AS RRC_2001000
				,SUM(RAB_1006000) AS RAB_1006000
				,SUM(RAB_1014000) AS RAB_1014000
				,SUM(RAB_1015000) AS RAB_1015000
				,SUM(RAB_1019000) AS RAB_1019000
				,SUM(RAB_1033000) AS RAB_1033000
				,SUM(RAB_1034000) AS RAB_1034000
				,SUM(RAB_1039000) AS RAB_1039000
				,SUM(RAB_1040000) AS RAB_1040000
				,SUM(RAB_1042000) AS RAB_1042000
				,SUM(RAB_1046000) AS RAB_1046000
				,SUM(RAB_5113000) AS RAB_5113000
				,SUM(RAB_5114000) AS RAB_5114000
				,SUM(RRC_RAB_OTHERS) AS RRC_RAB_OTHERS
				,SUM(CSFB_SETUP_TIME_SUM) AS CSFB_SETUP_TIME_SUM
				,SUM(CSFB_SETUP_TIME_CNT) AS CSFB_SETUP_TIME_CNT
				,MAX(CSFB_SETUP_TIME_MAX) AS CSFB_SETUP_TIME_MAX
				,SUM(CSFB_CALL_CNT) AS CSFB_CALL_CNT
				,SUM(RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE) AS RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE
				,SUM(RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE) AS RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
				,SUM(RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL) AS RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL
				,SUM(RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH) AS RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH
				,SUM(RAB_UNSPECIFIED_FAILURE) AS RAB_UNSPECIFIED_FAILURE
				,SUM(SMS_TYPE_01) AS SMS_TYPE_01
				,SUM(SMS_TYPE_10) AS SMS_TYPE_10
				,SUM(SMS_TYPE_11) AS SMS_TYPE_11
				,SUM(SMS_TYPE_00) AS SMS_TYPE_00
			FROM ',GT_DB,RUN,'.`tmp_table_tile_start_',WORKER_ID,'`
			GROUP BY DATA_DATE
				#, DATA_HOUR
				#, FREQUENCY
				#, UARFCN
				#, INDOOR
				#, MOVING
				, TILE_ID
				, RNC_ID
				#, CELL_INDOOR
				#, CLUSTER_ID
				#, SITE_ID
				, CELL_ID
				#, CALL_TYPE 
				#, CALL_STATUS
			ORDER BY NULL
		) B
		ON  A.DATA_DATE=B.DATA_DATE
		#AND A.FREQUENCY=B.FREQUENCY
		#AND A.UARFCN=B.UARFCN
		#AND A.INDOOR=B.INDOOR
		#AND A.MOVING=B.MOVING
		AND A.TILE_ID=B.TILE_ID
		AND A.RNC_ID=B.RNC_ID
		#AND A.CELL_INDOOR=B.CELL_INDOOR
		#AND A.CLUSTER_ID=B.CLUSTER_ID
		#AND A.SITE_ID=B.SITE_ID
		AND A.CELL_ID=B.CELL_ID
		#AND A.CALL_TYPE=B.CALL_TYPE
		#AND A.CALL_STATUS=B.CALL_STATUS
		;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Insert into table_tile_start_dy_t_def ', NOW());
	SET @SqlCmd=CONCAT('REPLACE INTO ',GT_DB,'.table_tile_start_dy_t_def
		(DATA_DATE,TILE_ID,RNC_ID
		,CELL_LON,CELL_LAT,CALL_CNT,BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED
		,SUB_DENSITY,ERLANG,DL_DATA_THRU,UL_DATA_THRU,DL_TRAFFIC,UL_TRAFFIC,U_UL_DATA_THRU,U_MAX_UL_DATA_THRU
		,U_DL_DATA_THRU,U_MAX_DL_DATA_THRU,CALL_CNT_ACT,BEST_RSCP_1_ACT,BEST_ECN0_1_ACT,BEST_RSCP_1_ACT_MED
		,BEST_ECN0_1_ACT_MED,RAB_NO_RESOURCE_AVAILABLE,RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,RAB_OTHER
		,RRC_CONGESTION,RRC_UNSPECIFIED,BEST_RSCP_1_CNT,BEST_ECN0_1_CNT,U_UL_DATA_THRU_CNT,U_DL_DATA_THRU_CNT
		,BEST_RSCP_1_ACT_CNT,BEST_ECN0_1_ACT_CNT
		,HOUR_CNT,NAS_SM_SUM,NAS_GPRS_MM_ATTACH_SUM,CALL_TYPE_10,CALL_TYPE_11,CALL_TYPE_12,CALL_TYPE_13,CALL_TYPE_14,CALL_TYPE_16,CALL_TYPE_18
		,AUTH_REQUEST,AUTH_RESPONSE,AUTH_FAILURE,AUTH_REJECT,LU_REQUEST,LU_ACCEPT,LU_REJECT,AUTH_CIPH_REQUEST,AUTH_CIPH_RESPONSE,AUTH_CIPH_FAILURE,AUTH_CIPH_REJECT,RAU_REQUEST,RAU_ACCEPT,RAU_REJECT
		,PDP_ACTIVATION_REQUEST_CNT,PDP_ACTIVATION_ACCEPT_CNT,PDP_ACTIVATION_REJECT_CNT
		,RRC_2000000,RRC_2001000,RAB_1006000,RAB_1014000,RAB_1015000,RAB_1019000,RAB_1033000,RAB_1034000,RAB_1039000,RAB_1040000,RAB_1042000,RAB_1046000,RAB_5113000,RAB_5114000,RRC_RAB_OTHERS
		,CSFB_SETUP_TIME_SUM,CSFB_SETUP_TIME_CNT,CSFB_SETUP_TIME_MAX,CSFB_CALL_CNT
		,RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
		,RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,RAB_UNSPECIFIED_FAILURE
		,SMS_TYPE_01,SMS_TYPE_10,SMS_TYPE_11,SMS_TYPE_00
		)
		SELECT
			B.DATA_DATE
			#, DATA_HOUR
			#, B.FREQUENCY
			#, B.UARFCN
			#, B.INDOOR
			#, B.MOVING
			, B.TILE_ID
			, B.RNC_ID
			#, B.CELL_INDOOR
			#, B.CLUSTER_ID
			#, B.SITE_ID
			#, B.CELL_ID
			, B.CELL_LON
			, B.CELL_LAT
			#, B.CALL_TYPE 
			#, B.CALL_STATUS	
			, CASE WHEN A.CALL_CNT IS NULL AND B.CALL_CNT IS NULL THEN NULL ELSE IFNULL(A.CALL_CNT,0) + IFNULL(B.CALL_CNT,0) END AS CALL_CNT
			, CASE WHEN A.BEST_RSCP_1 IS NULL AND B.BEST_RSCP_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1,0) + IFNULL(B.BEST_RSCP_1,0) END AS BEST_RSCP_1
			, CASE WHEN A.BEST_ECN0_1 IS NULL AND B.BEST_ECN0_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1,0) + IFNULL(B.BEST_ECN0_1,0) END AS BEST_ECN0_1
			, NULL AS BEST_RSCP_1_MED #CASE WHEN A.BEST_RSCP_1_MED IS NULL THEN B.BEST_RSCP_1_MED WHEN B.BEST_RSCP_1_MED IS NULL THEN A.BEST_RSCP_1_MED ELSE (A.BEST_RSCP_1_MED + B.BEST_RSCP_1_MED)/2 END AS BEST_RSCP_1_MED
			, NULL AS BEST_ECN0_1_MED #CASE WHEN A.BEST_ECN0_1_MED IS NULL THEN B.BEST_ECN0_1_MED WHEN B.BEST_ECN0_1_MED IS NULL THEN A.BEST_ECN0_1_MED ELSE (A.BEST_ECN0_1_MED + B.BEST_ECN0_1_MED)/2 END AS BEST_ECN0_1_MED
			, NULL AS SUB_DENSITY
			, CASE WHEN A.ERLANG IS NULL AND B.ERLANG IS NULL THEN NULL ELSE IFNULL(A.ERLANG,0) + IFNULL(B.ERLANG,0) END AS ERLANG
			, CASE WHEN A.DL_DATA_THRU IS NULL AND B.DL_DATA_THRU IS NULL THEN NULL ELSE IFNULL(A.DL_DATA_THRU,0) + IFNULL(B.DL_DATA_THRU,0) END AS DL_DATA_THRU
			, CASE WHEN A.UL_DATA_THRU IS NULL AND B.UL_DATA_THRU IS NULL THEN NULL ELSE IFNULL(A.UL_DATA_THRU,0) + IFNULL(B.UL_DATA_THRU,0) END AS UL_DATA_THRU
			, CASE WHEN A.DL_TRAFFIC IS NULL AND B.DL_TRAFFIC IS NULL THEN NULL ELSE IFNULL(A.DL_TRAFFIC,0) + IFNULL(B.DL_TRAFFIC,0) END AS DL_TRAFFIC
			, CASE WHEN A.UL_TRAFFIC IS NULL AND B.UL_TRAFFIC IS NULL THEN NULL ELSE IFNULL(A.UL_TRAFFIC,0) + IFNULL(B.UL_TRAFFIC,0) END AS UL_TRAFFIC
			, (IFNULL(A.U_UL_DATA_THRU,0) + IFNULL(B.U_UL_DATA_THRU,0)) AS U_UL_DATA_THRU
			, CASE WHEN IFNULL(A.U_MAX_UL_DATA_THRU,0) > IFNULL(B.U_MAX_UL_DATA_THRU,0) THEN A.U_MAX_UL_DATA_THRU ELSE B.U_MAX_UL_DATA_THRU END AS U_MAX_UL_DATA_THRU
			, (IFNULL(A.U_DL_DATA_THRU,0) + IFNULL(B.U_DL_DATA_THRU,0)) AS U_DL_DATA_THRU
			, CASE WHEN IFNULL(A.U_MAX_DL_DATA_THRU,0) > IFNULL(B.U_MAX_DL_DATA_THRU,0) THEN A.U_MAX_DL_DATA_THRU ELSE B.U_MAX_DL_DATA_THRU END AS U_MAX_DL_DATA_THRU
			, CASE WHEN A.CALL_CNT_ACT IS NULL AND B.CALL_CNT_ACT IS NULL THEN NULL ELSE IFNULL(A.CALL_CNT_ACT,0) + IFNULL(B.CALL_CNT_ACT,0) END AS CALL_CNT_ACT
			, CASE WHEN A.BEST_RSCP_1_ACT IS NULL AND B.BEST_RSCP_1_ACT IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1_ACT,0) + IFNULL(B.BEST_RSCP_1_ACT,0) END AS BEST_RSCP_1_ACT
			, CASE WHEN A.BEST_ECN0_1_ACT IS NULL AND B.BEST_ECN0_1_ACT IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1_ACT,0) + IFNULL(B.BEST_ECN0_1_ACT,0) END AS BEST_ECN0_1_ACT
			, NULL AS BEST_RSCP_1_ACT_MED #CASE WHEN A.BEST_RSCP_1_ACT_MED IS NULL THEN B.BEST_RSCP_1_ACT_MED WHEN B.BEST_RSCP_1_ACT_MED IS NULL THEN A.BEST_RSCP_1_ACT_MED ELSE (A.BEST_RSCP_1_ACT_MED + B.BEST_RSCP_1_ACT_MED)/2 END AS BEST_RSCP_1_ACT_MED
			, NULL AS BEST_ECN0_1_ACT_MED #CASE WHEN A.BEST_ECN0_1_ACT_MED IS NULL THEN B.BEST_ECN0_1_ACT_MED WHEN B.BEST_ECN0_1_ACT_MED IS NULL THEN A.BEST_ECN0_1_ACT_MED ELSE (A.BEST_ECN0_1_ACT_MED + B.BEST_ECN0_1_ACT_MED)/2 END AS BEST_ECN0_1_ACT_MED
			, CASE WHEN A.RAB_NO_RESOURCE_AVAILABLE IS NULL AND B.RAB_NO_RESOURCE_AVAILABLE IS NULL THEN NULL ELSE IFNULL(A.RAB_NO_RESOURCE_AVAILABLE,0) + IFNULL(B.RAB_NO_RESOURCE_AVAILABLE,0) END AS RAB_NO_RESOURCE_AVAILABLE
			, CASE WHEN A.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON IS NULL AND B.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON IS NULL THEN NULL ELSE IFNULL(A.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,0) + IFNULL(B.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,0) END AS RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON
			, CASE WHEN A.RAB_OTHER IS NULL AND B.RAB_OTHER IS NULL THEN NULL ELSE IFNULL(A.RAB_OTHER,0) + IFNULL(B.RAB_OTHER,0) END AS RAB_OTHER
			, CASE WHEN A.RRC_CONGESTION IS NULL AND B.RRC_CONGESTION IS NULL THEN NULL ELSE IFNULL(A.RRC_CONGESTION,0) + IFNULL(B.RRC_CONGESTION,0) END AS RRC_CONGESTION
			, CASE WHEN A.RRC_UNSPECIFIED IS NULL AND B.RRC_UNSPECIFIED IS NULL THEN NULL ELSE IFNULL(A.RRC_UNSPECIFIED,0) + IFNULL(B.RRC_UNSPECIFIED,0) END AS RRC_UNSPECIFIED
			-- CNT
			, CASE WHEN A.BEST_RSCP_1_CNT IS NULL AND B.BEST_RSCP_1_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1_CNT,0) + IFNULL(B.BEST_RSCP_1_CNT,0) END AS BEST_RSCP_1_CNT
			, CASE WHEN A.BEST_ECN0_1_CNT IS NULL AND B.BEST_ECN0_1_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1_CNT,0) + IFNULL(B.BEST_ECN0_1_CNT,0) END AS BEST_ECN0_1_CNT
			, CASE WHEN A.U_UL_DATA_THRU_CNT IS NULL AND B.U_UL_DATA_THRU_CNT IS NULL THEN NULL ELSE IFNULL(A.U_UL_DATA_THRU_CNT,0) + IFNULL(B.U_UL_DATA_THRU_CNT,0) END AS U_UL_DATA_THRU_CNT
			, CASE WHEN A.U_DL_DATA_THRU_CNT IS NULL AND B.U_DL_DATA_THRU_CNT IS NULL THEN NULL ELSE IFNULL(A.U_DL_DATA_THRU_CNT,0) + IFNULL(B.U_DL_DATA_THRU_CNT,0) END AS U_DL_DATA_THRU_CNT
			, CASE WHEN A.BEST_RSCP_1_ACT_CNT IS NULL AND B.BEST_RSCP_1_ACT_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1_ACT_CNT,0) + IFNULL(B.BEST_RSCP_1_ACT_CNT,0) END AS BEST_RSCP_1_ACT_CNT
			, CASE WHEN A.BEST_ECN0_1_ACT_CNT IS NULL AND B.BEST_ECN0_1_ACT_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1_ACT_CNT,0) + IFNULL(B.BEST_ECN0_1_ACT_CNT,0) END AS BEST_ECN0_1_ACT_CNT
			, CASE WHEN A.HOUR_CNT IS NULL AND B.HOUR_CNT IS NULL THEN NULL ELSE IFNULL(A.HOUR_CNT,0) + IFNULL(B.HOUR_CNT,0) END AS HOUR_CNT
			, CASE WHEN A.NAS_SM_SUM IS NULL AND B.NAS_SM_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_SM_SUM,0) + IFNULL(B.NAS_SM_SUM,0) END AS NAS_SM_SUM
			, CASE WHEN A.NAS_GPRS_MM_ATTACH_SUM IS NULL AND B.NAS_GPRS_MM_ATTACH_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_GPRS_MM_ATTACH_SUM,0) + IFNULL(B.NAS_GPRS_MM_ATTACH_SUM,0) END AS NAS_GPRS_MM_ATTACH_SUM
			, CASE WHEN A.CALL_TYPE_10 IS NULL AND B.CALL_TYPE_10 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_10,0) + IFNULL(B.CALL_TYPE_10,0) END AS CALL_TYPE_10
			, CASE WHEN A.CALL_TYPE_11 IS NULL AND B.CALL_TYPE_11 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_11,0) + IFNULL(B.CALL_TYPE_11,0) END AS CALL_TYPE_11
			, CASE WHEN A.CALL_TYPE_12 IS NULL AND B.CALL_TYPE_12 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_12,0) + IFNULL(B.CALL_TYPE_12,0) END AS CALL_TYPE_12
			, CASE WHEN A.CALL_TYPE_13 IS NULL AND B.CALL_TYPE_13 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_13,0) + IFNULL(B.CALL_TYPE_13,0) END AS CALL_TYPE_13
			, CASE WHEN A.CALL_TYPE_14 IS NULL AND B.CALL_TYPE_14 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_14,0) + IFNULL(B.CALL_TYPE_14,0) END AS CALL_TYPE_14
			, CASE WHEN A.CALL_TYPE_16 IS NULL AND B.CALL_TYPE_16 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_16,0) + IFNULL(B.CALL_TYPE_16,0) END AS CALL_TYPE_16
			, CASE WHEN A.CALL_TYPE_18 IS NULL AND B.CALL_TYPE_18 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_18,0) + IFNULL(B.CALL_TYPE_18,0) END AS CALL_TYPE_18
			, CASE WHEN A.AUTH_REQUEST IS NULL AND B.AUTH_REQUEST IS NULL THEN NULL ELSE IFNULL(A.AUTH_REQUEST,0) + IFNULL(B.AUTH_REQUEST,0) END AS AUTH_REQUEST
			, CASE WHEN A.AUTH_RESPONSE IS NULL AND B.AUTH_RESPONSE IS NULL THEN NULL ELSE IFNULL(A.AUTH_RESPONSE,0) + IFNULL(B.AUTH_RESPONSE,0) END AS AUTH_RESPONSE
			, CASE WHEN A.AUTH_FAILURE IS NULL AND B.AUTH_FAILURE IS NULL THEN NULL ELSE IFNULL(A.AUTH_FAILURE,0) + IFNULL(B.AUTH_FAILURE,0) END AS AUTH_FAILURE
			, CASE WHEN A.AUTH_REJECT IS NULL AND B.AUTH_REJECT IS NULL THEN NULL ELSE IFNULL(A.AUTH_REJECT,0) + IFNULL(B.AUTH_REJECT,0) END AS AUTH_REJECT
			, CASE WHEN A.LU_REQUEST IS NULL AND B.LU_REQUEST IS NULL THEN NULL ELSE IFNULL(A.LU_REQUEST,0) + IFNULL(B.LU_REQUEST,0) END AS LU_REQUEST
			, CASE WHEN A.LU_ACCEPT IS NULL AND B.LU_ACCEPT IS NULL THEN NULL ELSE IFNULL(A.LU_ACCEPT,0) + IFNULL(B.LU_ACCEPT,0) END AS LU_ACCEPT
			, CASE WHEN A.LU_REJECT IS NULL AND B.LU_REJECT IS NULL THEN NULL ELSE IFNULL(A.LU_REJECT,0) + IFNULL(B.LU_REJECT,0) END AS LU_REJECT
			, CASE WHEN A.AUTH_CIPH_REQUEST IS NULL AND B.AUTH_CIPH_REQUEST IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_REQUEST,0) + IFNULL(B.AUTH_CIPH_REQUEST,0) END AS AUTH_CIPH_REQUEST
			, CASE WHEN A.AUTH_CIPH_RESPONSE IS NULL AND B.AUTH_CIPH_RESPONSE IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_RESPONSE,0) + IFNULL(B.AUTH_CIPH_RESPONSE,0) END AS AUTH_CIPH_RESPONSE
			, CASE WHEN A.AUTH_CIPH_FAILURE IS NULL AND B.AUTH_CIPH_FAILURE IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_FAILURE,0) + IFNULL(B.AUTH_CIPH_FAILURE,0) END AS AUTH_CIPH_FAILURE
			, CASE WHEN A.AUTH_CIPH_REJECT IS NULL AND B.AUTH_CIPH_REJECT IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_REJECT,0) + IFNULL(B.AUTH_CIPH_REJECT,0) END AS AUTH_CIPH_REJECT
			, CASE WHEN A.RAU_REQUEST IS NULL AND B.RAU_REQUEST IS NULL THEN NULL ELSE IFNULL(A.RAU_REQUEST,0) + IFNULL(B.RAU_REQUEST,0) END AS RAU_REQUEST
			, CASE WHEN A.RAU_ACCEPT IS NULL AND B.RAU_ACCEPT IS NULL THEN NULL ELSE IFNULL(A.RAU_ACCEPT,0) + IFNULL(B.RAU_ACCEPT,0) END AS RAU_ACCEPT
			, CASE WHEN A.RAU_REJECT IS NULL AND B.RAU_REJECT IS NULL THEN NULL ELSE IFNULL(A.RAU_REJECT,0) + IFNULL(B.RAU_REJECT,0) END AS RAU_REJECT
			, CASE WHEN A.PDP_ACTIVATION_REQUEST_CNT IS NULL AND B.PDP_ACTIVATION_REQUEST_CNT IS NULL THEN NULL ELSE IFNULL(A.PDP_ACTIVATION_REQUEST_CNT,0) + IFNULL(B.PDP_ACTIVATION_REQUEST_CNT,0) END AS PDP_ACTIVATION_REQUEST_CNT
			, CASE WHEN A.PDP_ACTIVATION_ACCEPT_CNT IS NULL AND B.PDP_ACTIVATION_ACCEPT_CNT IS NULL THEN NULL ELSE IFNULL(A.PDP_ACTIVATION_ACCEPT_CNT,0) + IFNULL(B.PDP_ACTIVATION_ACCEPT_CNT,0) END AS PDP_ACTIVATION_ACCEPT_CNT
			, CASE WHEN A.PDP_ACTIVATION_REJECT_CNT IS NULL AND B.PDP_ACTIVATION_REJECT_CNT IS NULL THEN NULL ELSE IFNULL(A.PDP_ACTIVATION_REJECT_CNT,0) + IFNULL(B.PDP_ACTIVATION_REJECT_CNT,0) END AS PDP_ACTIVATION_REJECT_CNT
			, CASE WHEN A.RRC_2000000 IS NULL AND B.RRC_2000000 IS NULL THEN NULL ELSE IFNULL(A.RRC_2000000,0) + IFNULL(B.RRC_2000000,0) END AS RRC_2000000
			, CASE WHEN A.RRC_2001000 IS NULL AND B.RRC_2001000 IS NULL THEN NULL ELSE IFNULL(A.RRC_2001000,0) + IFNULL(B.RRC_2001000,0) END AS RRC_2001000
			, CASE WHEN A.RAB_1006000 IS NULL AND B.RAB_1006000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1006000,0) + IFNULL(B.RAB_1006000,0) END AS RAB_1006000
			, CASE WHEN A.RAB_1014000 IS NULL AND B.RAB_1014000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1014000,0) + IFNULL(B.RAB_1014000,0) END AS RAB_1014000
			, CASE WHEN A.RAB_1015000 IS NULL AND B.RAB_1015000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1015000,0) + IFNULL(B.RAB_1015000,0) END AS RAB_1015000
			, CASE WHEN A.RAB_1019000 IS NULL AND B.RAB_1019000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1019000,0) + IFNULL(B.RAB_1019000,0) END AS RAB_1019000
			, CASE WHEN A.RAB_1033000 IS NULL AND B.RAB_1033000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1033000,0) + IFNULL(B.RAB_1033000,0) END AS RAB_1033000
			, CASE WHEN A.RAB_1034000 IS NULL AND B.RAB_1034000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1034000,0) + IFNULL(B.RAB_1034000,0) END AS RAB_1034000
			, CASE WHEN A.RAB_1039000 IS NULL AND B.RAB_1039000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1039000,0) + IFNULL(B.RAB_1039000,0) END AS RAB_1039000
			, CASE WHEN A.RAB_1040000 IS NULL AND B.RAB_1040000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1040000,0) + IFNULL(B.RAB_1040000,0) END AS RAB_1040000
			, CASE WHEN A.RAB_1042000 IS NULL AND B.RAB_1042000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1042000,0) + IFNULL(B.RAB_1042000,0) END AS RAB_1042000
			, CASE WHEN A.RAB_1046000 IS NULL AND B.RAB_1046000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1046000,0) + IFNULL(B.RAB_1046000,0) END AS RAB_1046000
			, CASE WHEN A.RAB_5113000 IS NULL AND B.RAB_5113000 IS NULL THEN NULL ELSE IFNULL(A.RAB_5113000,0) + IFNULL(B.RAB_5113000,0) END AS RAB_5113000
			, CASE WHEN A.RAB_5114000 IS NULL AND B.RAB_5114000 IS NULL THEN NULL ELSE IFNULL(A.RAB_5114000,0) + IFNULL(B.RAB_5114000,0) END AS RAB_5114000
			, CASE WHEN A.RRC_RAB_OTHERS IS NULL AND B.RRC_RAB_OTHERS IS NULL THEN NULL ELSE IFNULL(A.RRC_RAB_OTHERS,0) + IFNULL(B.RRC_RAB_OTHERS,0) END AS RRC_RAB_OTHERS
			, CASE WHEN A.CSFB_SETUP_TIME_SUM IS NULL AND B.CSFB_SETUP_TIME_SUM IS NULL THEN NULL ELSE IFNULL(A.CSFB_SETUP_TIME_SUM,0) + IFNULL(B.CSFB_SETUP_TIME_SUM,0) END AS CSFB_SETUP_TIME_SUM
			, CASE WHEN A.CSFB_SETUP_TIME_CNT IS NULL AND B.CSFB_SETUP_TIME_CNT IS NULL THEN NULL ELSE IFNULL(A.CSFB_SETUP_TIME_CNT,0) + IFNULL(B.CSFB_SETUP_TIME_CNT,0) END AS CSFB_SETUP_TIME_CNT
			, CASE WHEN IFNULL(A.CSFB_SETUP_TIME_MAX,0) > IFNULL(B.CSFB_SETUP_TIME_MAX,0) THEN A.CSFB_SETUP_TIME_MAX ELSE B.CSFB_SETUP_TIME_MAX END AS CSFB_SETUP_TIME_MAX
			, CASE WHEN A.CSFB_CALL_CNT IS NULL AND B.CSFB_CALL_CNT IS NULL THEN NULL ELSE IFNULL(A.CSFB_CALL_CNT,0) + IFNULL(B.CSFB_CALL_CNT,0) END AS CSFB_CALL_CNT
			, CASE WHEN A.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE IS NULL AND B.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE IS NULL THEN NULL ELSE IFNULL(A.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,0) + IFNULL(B.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,0) END AS RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE
			, CASE WHEN A.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE IS NULL AND B.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE IS NULL THEN NULL ELSE IFNULL(A.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE,0) + IFNULL(B.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE,0) END AS RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
			, CASE WHEN A.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL IS NULL AND B.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL IS NULL THEN NULL ELSE IFNULL(A.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,0) + IFNULL(B.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,0) END AS RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL
			, CASE WHEN A.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH IS NULL AND B.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH IS NULL THEN NULL ELSE IFNULL(A.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,0) + IFNULL(B.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,0) END AS RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH
			, CASE WHEN A.RAB_UNSPECIFIED_FAILURE IS NULL AND B.RAB_UNSPECIFIED_FAILURE IS NULL THEN NULL ELSE IFNULL(A.RAB_UNSPECIFIED_FAILURE,0) + IFNULL(B.RAB_UNSPECIFIED_FAILURE,0) END AS RAB_UNSPECIFIED_FAILURE
			, CASE WHEN A.SMS_TYPE_01 IS NULL AND B.SMS_TYPE_01 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_01,0) + IFNULL(B.SMS_TYPE_01,0) END AS SMS_TYPE_01
			, CASE WHEN A.SMS_TYPE_10 IS NULL AND B.SMS_TYPE_10 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_10,0) + IFNULL(B.SMS_TYPE_10,0) END AS SMS_TYPE_10
			, CASE WHEN A.SMS_TYPE_11 IS NULL AND B.SMS_TYPE_11 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_11,0) + IFNULL(B.SMS_TYPE_11,0) END AS SMS_TYPE_11
			, CASE WHEN A.SMS_TYPE_00 IS NULL AND B.SMS_TYPE_00 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_00,0) + IFNULL(B.SMS_TYPE_00,0) END AS SMS_TYPE_00
		FROM ',GT_DB,'.table_tile_start_dy_t_def a RIGHT JOIN 
		(
		 	SELECT
				 DATA_DATE AS DATA_DATE
				#, DATA_HOUR
				#, FREQUENCY AS FREQUENCY
				#, UARFCN AS UARFCN
				#, INDOOR AS INDOOR
				#, MOVING AS MOVING
				, TILE_ID AS TILE_ID
				, RNC_ID AS RNC_ID
				#, CELL_INDOOR AS CELL_INDOOR
				#, CLUSTER_ID AS CLUSTER_ID
				#, SITE_ID AS SITE_ID
				#, CELL_ID AS CELL_ID
				#, CALL_TYPE AS CALL_TYPE
				#, CALL_STATUS AS CALL_STATUS
	
				, SUM(CALL_CNT) AS CALL_CNT
				, SUM(BEST_RSCP_1) AS BEST_RSCP_1
				, SUM(BEST_ECN0_1) AS BEST_ECN0_1
				, NULL AS BEST_RSCP_1_MED #median(BEST_RSCP_1_MED) AS BEST_RSCP_1_MED
				, NULL AS BEST_ECN0_1_MED #median(BEST_ECN0_1_MED) AS BEST_ECN0_1_MED
				, NULL AS SUB_DENSITY
				, SUM(ERLANG) AS ERLANG
				, SUM(DL_DATA_THRU) AS DL_DATA_THRU
				, SUM(UL_DATA_THRU) AS UL_DATA_THRU
				, SUM(DL_TRAFFIC) AS DL_TRAFFIC
				, SUM(UL_TRAFFIC) AS UL_TRAFFIC
				, SUM(U_UL_DATA_THRU) AS U_UL_DATA_THRU
				, MAX(U_MAX_UL_DATA_THRU) AS U_MAX_UL_DATA_THRU
				, SUM(U_DL_DATA_THRU) AS U_DL_DATA_THRU
				, MAX(U_MAX_DL_DATA_THRU) AS U_MAX_DL_DATA_THRU
				, SUM(CALL_CNT_ACT) AS CALL_CNT_ACT
				, SUM(BEST_RSCP_1_ACT) AS BEST_RSCP_1_ACT
				, SUM(BEST_ECN0_1_ACT) AS BEST_ECN0_1_ACT
				, NULL AS BEST_RSCP_1_ACT_MED #median(BEST_RSCP_1_ACT_MED) AS BEST_RSCP_1_ACT_MED
				, NULL AS BEST_ECN0_1_ACT_MED #median(BEST_ECN0_1_ACT_MED) AS BEST_ECN0_1_ACT_MED
				, SUM(RAB_NO_RESOURCE_AVAILABLE) AS RAB_NO_RESOURCE_AVAILABLE
				, SUM(RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON) AS RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON
				, SUM(RAB_OTHER) AS RAB_OTHER
				, SUM(RRC_CONGESTION) AS RRC_CONGESTION
				, SUM(RRC_UNSPECIFIED) AS RRC_UNSPECIFIED
				, CELL_LON,CELL_LAT
				-- CNT
				, SUM(BEST_RSCP_1_CNT) AS BEST_RSCP_1_CNT
				, SUM(BEST_ECN0_1_CNT) AS BEST_ECN0_1_CNT
				, SUM(U_UL_DATA_THRU_CNT) AS U_UL_DATA_THRU_CNT
				, SUM(U_DL_DATA_THRU_CNT) AS U_DL_DATA_THRU_CNT
				, SUM(BEST_RSCP_1_ACT_CNT) AS BEST_RSCP_1_ACT_CNT
				, SUM(BEST_ECN0_1_ACT_CNT) AS BEST_ECN0_1_ACT_CNT
				,1 AS HOUR_CNT
				,SUM(NAS_SM_SUM) AS NAS_SM_SUM
				,SUM(NAS_GPRS_MM_ATTACH_SUM) AS NAS_GPRS_MM_ATTACH_SUM
				,SUM(CALL_TYPE_10) AS CALL_TYPE_10
				,SUM(CALL_TYPE_11) AS CALL_TYPE_11
				,SUM(CALL_TYPE_12) AS CALL_TYPE_12
				,SUM(CALL_TYPE_13) AS CALL_TYPE_13
				,SUM(CALL_TYPE_14) AS CALL_TYPE_14
				,SUM(CALL_TYPE_16) AS CALL_TYPE_16
				,SUM(CALL_TYPE_18) AS CALL_TYPE_18
				,SUM(AUTH_REQUEST) AS AUTH_REQUEST
				,SUM(AUTH_RESPONSE) AS AUTH_RESPONSE
				,SUM(AUTH_FAILURE) AS AUTH_FAILURE
				,SUM(AUTH_REJECT) AS AUTH_REJECT
				,SUM(LU_REQUEST) AS LU_REQUEST
				,SUM(LU_ACCEPT) AS LU_ACCEPT
				,SUM(LU_REJECT) AS LU_REJECT
				,SUM(AUTH_CIPH_REQUEST) AS AUTH_CIPH_REQUEST
				,SUM(AUTH_CIPH_RESPONSE) AS AUTH_CIPH_RESPONSE
				,SUM(AUTH_CIPH_FAILURE) AS AUTH_CIPH_FAILURE
				,SUM(AUTH_CIPH_REJECT) AS AUTH_CIPH_REJECT
				,SUM(RAU_REQUEST) AS RAU_REQUEST
				,SUM(RAU_ACCEPT) AS RAU_ACCEPT
				,SUM(RAU_REJECT) AS RAU_REJECT
				,SUM(PDP_ACTIVATION_REQUEST_CNT) AS PDP_ACTIVATION_REQUEST_CNT
				,SUM(PDP_ACTIVATION_ACCEPT_CNT) AS PDP_ACTIVATION_ACCEPT_CNT
				,SUM(PDP_ACTIVATION_REJECT_CNT) AS PDP_ACTIVATION_REJECT_CNT
				,SUM(RRC_2000000) AS RRC_2000000
				,SUM(RRC_2001000) AS RRC_2001000
				,SUM(RAB_1006000) AS RAB_1006000
				,SUM(RAB_1014000) AS RAB_1014000
				,SUM(RAB_1015000) AS RAB_1015000
				,SUM(RAB_1019000) AS RAB_1019000
				,SUM(RAB_1033000) AS RAB_1033000
				,SUM(RAB_1034000) AS RAB_1034000
				,SUM(RAB_1039000) AS RAB_1039000
				,SUM(RAB_1040000) AS RAB_1040000
				,SUM(RAB_1042000) AS RAB_1042000
				,SUM(RAB_1046000) AS RAB_1046000
				,SUM(RAB_5113000) AS RAB_5113000
				,SUM(RAB_5114000) AS RAB_5114000
				,SUM(RRC_RAB_OTHERS) AS RRC_RAB_OTHERS
				,SUM(CSFB_SETUP_TIME_SUM) AS CSFB_SETUP_TIME_SUM
				,SUM(CSFB_SETUP_TIME_CNT) AS CSFB_SETUP_TIME_CNT
				,MAX(CSFB_SETUP_TIME_MAX) AS CSFB_SETUP_TIME_MAX
				,SUM(CSFB_CALL_CNT) AS CSFB_CALL_CNT
				,SUM(RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE) AS RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE
				,SUM(RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE) AS RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
				,SUM(RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL) AS RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL
				,SUM(RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH) AS RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH
				,SUM(RAB_UNSPECIFIED_FAILURE) AS RAB_UNSPECIFIED_FAILURE
				,SUM(SMS_TYPE_01) AS SMS_TYPE_01
				,SUM(SMS_TYPE_10) AS SMS_TYPE_10
				,SUM(SMS_TYPE_11) AS SMS_TYPE_11
				,SUM(SMS_TYPE_00) AS SMS_TYPE_00
			FROM ',GT_DB,RUN,'.`tmp_table_tile_start_',WORKER_ID,'`
			GROUP BY DATA_DATE
				#, DATA_HOUR
				#, FREQUENCY
				#, UARFCN
				#, INDOOR
				#, MOVING
				, TILE_ID
				, RNC_ID
				#, CELL_INDOOR
				#, CLUSTER_ID
				#, SITE_ID
				#, CELL_ID
				#, CALL_TYPE 
				#, CALL_STATUS
			ORDER BY NULL
		) B
		ON  A.DATA_DATE=B.DATA_DATE
		#AND A.FREQUENCY=B.FREQUENCY
		#AND A.UARFCN=B.UARFCN
		#AND A.INDOOR=B.INDOOR
		#AND A.MOVING=B.MOVING
		AND A.TILE_ID=B.TILE_ID
		AND A.RNC_ID=B.RNC_ID
		#AND A.CELL_INDOOR=B.CELL_INDOOR
		#AND A.CLUSTER_ID=B.CLUSTER_ID
		#AND A.SITE_ID=B.SITE_ID
		#AND A.CELL_ID=B.CELL_ID
		#AND A.CALL_TYPE=B.CALL_TYPE
		#AND A.CALL_STATUS=B.CALL_STATUS
		;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Insert into table_tile_start_dy_c_def ', NOW());
	SET @SqlCmd=CONCAT('REPLACE INTO ',GT_DB,'.table_tile_start_dy_c_def
		(DATA_DATE,`FREQUENCY`,`UARFCN`,RNC_ID,`CELL_INDOOR`,CLUSTER_ID,SITE_ID,CELL_ID
		,CELL_LON,CELL_LAT,CELL_NAME,CALL_CNT,BEST_RSCP_1,BEST_ECN0_1,BEST_RSCP_1_MED,BEST_ECN0_1_MED
		,SUB_DENSITY,ERLANG,DL_DATA_THRU,UL_DATA_THRU,DL_TRAFFIC,UL_TRAFFIC,U_UL_DATA_THRU,U_MAX_UL_DATA_THRU
		,U_DL_DATA_THRU,U_MAX_DL_DATA_THRU,CALL_CNT_ACT,BEST_RSCP_1_ACT,BEST_ECN0_1_ACT,BEST_RSCP_1_ACT_MED
		,BEST_ECN0_1_ACT_MED,RAB_NO_RESOURCE_AVAILABLE,RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,RAB_OTHER
		,RRC_CONGESTION,RRC_UNSPECIFIED,BEST_RSCP_1_CNT,BEST_ECN0_1_CNT,U_UL_DATA_THRU_CNT,U_DL_DATA_THRU_CNT
		,BEST_RSCP_1_ACT_CNT,BEST_ECN0_1_ACT_CNT
		,HOUR_CNT,NAS_SM_SUM,NAS_GPRS_MM_ATTACH_SUM,CALL_TYPE_10,CALL_TYPE_11,CALL_TYPE_12,CALL_TYPE_13,CALL_TYPE_14,CALL_TYPE_16,CALL_TYPE_18
		,AUTH_REQUEST,AUTH_RESPONSE,AUTH_FAILURE,AUTH_REJECT,LU_REQUEST,LU_ACCEPT,LU_REJECT,AUTH_CIPH_REQUEST,AUTH_CIPH_RESPONSE,AUTH_CIPH_FAILURE,AUTH_CIPH_REJECT,RAU_REQUEST,RAU_ACCEPT,RAU_REJECT
		,PDP_ACTIVATION_REQUEST_CNT,PDP_ACTIVATION_ACCEPT_CNT,PDP_ACTIVATION_REJECT_CNT
		,RRC_2000000,RRC_2001000,RAB_1006000,RAB_1014000,RAB_1015000,RAB_1019000,RAB_1033000,RAB_1034000,RAB_1039000,RAB_1040000,RAB_1042000,RAB_1046000,RAB_5113000,RAB_5114000,RRC_RAB_OTHERS
		,CSFB_SETUP_TIME_SUM,CSFB_SETUP_TIME_CNT,CSFB_SETUP_TIME_MAX,CSFB_CALL_CNT
		,RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
		,RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,RAB_UNSPECIFIED_FAILURE
		,SMS_TYPE_01,SMS_TYPE_10,SMS_TYPE_11,SMS_TYPE_00
		)
		SELECT
			B.DATA_DATE
			#, DATA_HOUR
			, B.FREQUENCY
			, B.UARFCN
			#, B.INDOOR
			#, B.MOVING
			#, B.TILE_ID
			, B.RNC_ID
			, B.CELL_INDOOR
			, B.CLUSTER_ID
			, B.SITE_ID
			, B.CELL_ID
			, B.CELL_LON
			, B.CELL_LAT
			#, B.CALL_TYPE 
			#, B.CALL_STATUS
			, B.CELL_NAME
			, CASE WHEN A.CALL_CNT IS NULL AND B.CALL_CNT IS NULL THEN NULL ELSE IFNULL(A.CALL_CNT,0) + IFNULL(B.CALL_CNT,0) END AS CALL_CNT
			, CASE WHEN A.BEST_RSCP_1 IS NULL AND B.BEST_RSCP_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1,0) + IFNULL(B.BEST_RSCP_1,0) END AS BEST_RSCP_1
			, CASE WHEN A.BEST_ECN0_1 IS NULL AND B.BEST_ECN0_1 IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1,0) + IFNULL(B.BEST_ECN0_1,0) END AS BEST_ECN0_1
			, NULL AS BEST_RSCP_1_MED #CASE WHEN A.BEST_RSCP_1_MED IS NULL THEN B.BEST_RSCP_1_MED WHEN B.BEST_RSCP_1_MED IS NULL THEN A.BEST_RSCP_1_MED ELSE (A.BEST_RSCP_1_MED + B.BEST_RSCP_1_MED)/2 END AS BEST_RSCP_1_MED
			, NULL AS BEST_ECN0_1_MED #CASE WHEN A.BEST_ECN0_1_MED IS NULL THEN B.BEST_ECN0_1_MED WHEN B.BEST_ECN0_1_MED IS NULL THEN A.BEST_ECN0_1_MED ELSE (A.BEST_ECN0_1_MED + B.BEST_ECN0_1_MED)/2 END AS BEST_ECN0_1_MED
			, NULL AS SUB_DENSITY
			, CASE WHEN A.ERLANG IS NULL AND B.ERLANG IS NULL THEN NULL ELSE IFNULL(A.ERLANG,0) + IFNULL(B.ERLANG,0) END AS ERLANG
			, CASE WHEN A.DL_DATA_THRU IS NULL AND B.DL_DATA_THRU IS NULL THEN NULL ELSE IFNULL(A.DL_DATA_THRU,0) + IFNULL(B.DL_DATA_THRU,0) END AS DL_DATA_THRU
			, CASE WHEN A.UL_DATA_THRU IS NULL AND B.UL_DATA_THRU IS NULL THEN NULL ELSE IFNULL(A.UL_DATA_THRU,0) + IFNULL(B.UL_DATA_THRU,0) END AS UL_DATA_THRU
			, CASE WHEN A.DL_TRAFFIC IS NULL AND B.DL_TRAFFIC IS NULL THEN NULL ELSE IFNULL(A.DL_TRAFFIC,0) + IFNULL(B.DL_TRAFFIC,0) END AS DL_TRAFFIC
			, CASE WHEN A.UL_TRAFFIC IS NULL AND B.UL_TRAFFIC IS NULL THEN NULL ELSE IFNULL(A.UL_TRAFFIC,0) + IFNULL(B.UL_TRAFFIC,0) END AS UL_TRAFFIC
			, (IFNULL(A.U_UL_DATA_THRU,0) + IFNULL(B.U_UL_DATA_THRU,0)) AS U_UL_DATA_THRU
			, CASE WHEN IFNULL(A.U_MAX_UL_DATA_THRU,0) > IFNULL(B.U_MAX_UL_DATA_THRU,0) THEN A.U_MAX_UL_DATA_THRU ELSE B.U_MAX_UL_DATA_THRU END AS U_MAX_UL_DATA_THRU
			, (IFNULL(A.U_DL_DATA_THRU,0) + IFNULL(B.U_DL_DATA_THRU,0)) AS U_DL_DATA_THRU
			, CASE WHEN IFNULL(A.U_MAX_DL_DATA_THRU,0) > IFNULL(B.U_MAX_DL_DATA_THRU,0) THEN A.U_MAX_DL_DATA_THRU ELSE B.U_MAX_DL_DATA_THRU END AS U_MAX_DL_DATA_THRU
			, CASE WHEN A.CALL_CNT_ACT IS NULL AND B.CALL_CNT_ACT IS NULL THEN NULL ELSE IFNULL(A.CALL_CNT_ACT,0) + IFNULL(B.CALL_CNT_ACT,0) END AS CALL_CNT_ACT
			, CASE WHEN A.BEST_RSCP_1_ACT IS NULL AND B.BEST_RSCP_1_ACT IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1_ACT,0) + IFNULL(B.BEST_RSCP_1_ACT,0) END AS BEST_RSCP_1_ACT
			, CASE WHEN A.BEST_ECN0_1_ACT IS NULL AND B.BEST_ECN0_1_ACT IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1_ACT,0) + IFNULL(B.BEST_ECN0_1_ACT,0) END AS BEST_ECN0_1_ACT
			, NULL AS BEST_RSCP_1_ACT_MED #CASE WHEN A.BEST_RSCP_1_ACT_MED IS NULL THEN B.BEST_RSCP_1_ACT_MED WHEN B.BEST_RSCP_1_ACT_MED IS NULL THEN A.BEST_RSCP_1_ACT_MED ELSE (A.BEST_RSCP_1_ACT_MED + B.BEST_RSCP_1_ACT_MED)/2 END AS BEST_RSCP_1_ACT_MED
			, NULL AS BEST_ECN0_1_ACT_MED #CASE WHEN A.BEST_ECN0_1_ACT_MED IS NULL THEN B.BEST_ECN0_1_ACT_MED WHEN B.BEST_ECN0_1_ACT_MED IS NULL THEN A.BEST_ECN0_1_ACT_MED ELSE (A.BEST_ECN0_1_ACT_MED + B.BEST_ECN0_1_ACT_MED)/2 END AS BEST_ECN0_1_ACT_MED
			, CASE WHEN A.RAB_NO_RESOURCE_AVAILABLE IS NULL AND B.RAB_NO_RESOURCE_AVAILABLE IS NULL THEN NULL ELSE IFNULL(A.RAB_NO_RESOURCE_AVAILABLE,0) + IFNULL(B.RAB_NO_RESOURCE_AVAILABLE,0) END AS RAB_NO_RESOURCE_AVAILABLE
			, CASE WHEN A.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON IS NULL AND B.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON IS NULL THEN NULL ELSE IFNULL(A.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,0) + IFNULL(B.RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON,0) END AS RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON
			, CASE WHEN A.RAB_OTHER IS NULL AND B.RAB_OTHER IS NULL THEN NULL ELSE IFNULL(A.RAB_OTHER,0) + IFNULL(B.RAB_OTHER,0) END AS RAB_OTHER
			, CASE WHEN A.RRC_CONGESTION IS NULL AND B.RRC_CONGESTION IS NULL THEN NULL ELSE IFNULL(A.RRC_CONGESTION,0) + IFNULL(B.RRC_CONGESTION,0) END AS RRC_CONGESTION
			, CASE WHEN A.RRC_UNSPECIFIED IS NULL AND B.RRC_UNSPECIFIED IS NULL THEN NULL ELSE IFNULL(A.RRC_UNSPECIFIED,0) + IFNULL(B.RRC_UNSPECIFIED,0) END AS RRC_UNSPECIFIED
			-- CNT
			, CASE WHEN A.BEST_RSCP_1_CNT IS NULL AND B.BEST_RSCP_1_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1_CNT,0) + IFNULL(B.BEST_RSCP_1_CNT,0) END AS BEST_RSCP_1_CNT
			, CASE WHEN A.BEST_ECN0_1_CNT IS NULL AND B.BEST_ECN0_1_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1_CNT,0) + IFNULL(B.BEST_ECN0_1_CNT,0) END AS BEST_ECN0_1_CNT
			, CASE WHEN A.U_UL_DATA_THRU_CNT IS NULL AND B.U_UL_DATA_THRU_CNT IS NULL THEN NULL ELSE IFNULL(A.U_UL_DATA_THRU_CNT,0) + IFNULL(B.U_UL_DATA_THRU_CNT,0) END AS U_UL_DATA_THRU_CNT
			, CASE WHEN A.U_DL_DATA_THRU_CNT IS NULL AND B.U_DL_DATA_THRU_CNT IS NULL THEN NULL ELSE IFNULL(A.U_DL_DATA_THRU_CNT,0) + IFNULL(B.U_DL_DATA_THRU_CNT,0) END AS U_DL_DATA_THRU_CNT
			, CASE WHEN A.BEST_RSCP_1_ACT_CNT IS NULL AND B.BEST_RSCP_1_ACT_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_RSCP_1_ACT_CNT,0) + IFNULL(B.BEST_RSCP_1_ACT_CNT,0) END AS BEST_RSCP_1_ACT_CNT
			, CASE WHEN A.BEST_ECN0_1_ACT_CNT IS NULL AND B.BEST_ECN0_1_ACT_CNT IS NULL THEN NULL ELSE IFNULL(A.BEST_ECN0_1_ACT_CNT,0) + IFNULL(B.BEST_ECN0_1_ACT_CNT,0) END AS BEST_ECN0_1_ACT_CNT
			, CASE WHEN A.HOUR_CNT IS NULL AND B.HOUR_CNT IS NULL THEN NULL ELSE IFNULL(A.HOUR_CNT,0) + IFNULL(B.HOUR_CNT,0) END AS HOUR_CNT
			, CASE WHEN A.NAS_SM_SUM IS NULL AND B.NAS_SM_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_SM_SUM,0) + IFNULL(B.NAS_SM_SUM,0) END AS NAS_SM_SUM
			, CASE WHEN A.NAS_GPRS_MM_ATTACH_SUM IS NULL AND B.NAS_GPRS_MM_ATTACH_SUM IS NULL THEN NULL ELSE IFNULL(A.NAS_GPRS_MM_ATTACH_SUM,0) + IFNULL(B.NAS_GPRS_MM_ATTACH_SUM,0) END AS NAS_GPRS_MM_ATTACH_SUM
			, CASE WHEN A.CALL_TYPE_10 IS NULL AND B.CALL_TYPE_10 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_10,0) + IFNULL(B.CALL_TYPE_10,0) END AS CALL_TYPE_10
			, CASE WHEN A.CALL_TYPE_11 IS NULL AND B.CALL_TYPE_11 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_11,0) + IFNULL(B.CALL_TYPE_11,0) END AS CALL_TYPE_11
			, CASE WHEN A.CALL_TYPE_12 IS NULL AND B.CALL_TYPE_12 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_12,0) + IFNULL(B.CALL_TYPE_12,0) END AS CALL_TYPE_12
			, CASE WHEN A.CALL_TYPE_13 IS NULL AND B.CALL_TYPE_13 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_13,0) + IFNULL(B.CALL_TYPE_13,0) END AS CALL_TYPE_13
			, CASE WHEN A.CALL_TYPE_14 IS NULL AND B.CALL_TYPE_14 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_14,0) + IFNULL(B.CALL_TYPE_14,0) END AS CALL_TYPE_14
			, CASE WHEN A.CALL_TYPE_16 IS NULL AND B.CALL_TYPE_16 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_16,0) + IFNULL(B.CALL_TYPE_16,0) END AS CALL_TYPE_16
			, CASE WHEN A.CALL_TYPE_18 IS NULL AND B.CALL_TYPE_18 IS NULL THEN NULL ELSE IFNULL(A.CALL_TYPE_18,0) + IFNULL(B.CALL_TYPE_18,0) END AS CALL_TYPE_18
			, CASE WHEN A.AUTH_REQUEST IS NULL AND B.AUTH_REQUEST IS NULL THEN NULL ELSE IFNULL(A.AUTH_REQUEST,0) + IFNULL(B.AUTH_REQUEST,0) END AS AUTH_REQUEST
			, CASE WHEN A.AUTH_RESPONSE IS NULL AND B.AUTH_RESPONSE IS NULL THEN NULL ELSE IFNULL(A.AUTH_RESPONSE,0) + IFNULL(B.AUTH_RESPONSE,0) END AS AUTH_RESPONSE
			, CASE WHEN A.AUTH_FAILURE IS NULL AND B.AUTH_FAILURE IS NULL THEN NULL ELSE IFNULL(A.AUTH_FAILURE,0) + IFNULL(B.AUTH_FAILURE,0) END AS AUTH_FAILURE
			, CASE WHEN A.AUTH_REJECT IS NULL AND B.AUTH_REJECT IS NULL THEN NULL ELSE IFNULL(A.AUTH_REJECT,0) + IFNULL(B.AUTH_REJECT,0) END AS AUTH_REJECT
			, CASE WHEN A.LU_REQUEST IS NULL AND B.LU_REQUEST IS NULL THEN NULL ELSE IFNULL(A.LU_REQUEST,0) + IFNULL(B.LU_REQUEST,0) END AS LU_REQUEST
			, CASE WHEN A.LU_ACCEPT IS NULL AND B.LU_ACCEPT IS NULL THEN NULL ELSE IFNULL(A.LU_ACCEPT,0) + IFNULL(B.LU_ACCEPT,0) END AS LU_ACCEPT
			, CASE WHEN A.LU_REJECT IS NULL AND B.LU_REJECT IS NULL THEN NULL ELSE IFNULL(A.LU_REJECT,0) + IFNULL(B.LU_REJECT,0) END AS LU_REJECT
			, CASE WHEN A.AUTH_CIPH_REQUEST IS NULL AND B.AUTH_CIPH_REQUEST IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_REQUEST,0) + IFNULL(B.AUTH_CIPH_REQUEST,0) END AS AUTH_CIPH_REQUEST
			, CASE WHEN A.AUTH_CIPH_RESPONSE IS NULL AND B.AUTH_CIPH_RESPONSE IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_RESPONSE,0) + IFNULL(B.AUTH_CIPH_RESPONSE,0) END AS AUTH_CIPH_RESPONSE
			, CASE WHEN A.AUTH_CIPH_FAILURE IS NULL AND B.AUTH_CIPH_FAILURE IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_FAILURE,0) + IFNULL(B.AUTH_CIPH_FAILURE,0) END AS AUTH_CIPH_FAILURE
			, CASE WHEN A.AUTH_CIPH_REJECT IS NULL AND B.AUTH_CIPH_REJECT IS NULL THEN NULL ELSE IFNULL(A.AUTH_CIPH_REJECT,0) + IFNULL(B.AUTH_CIPH_REJECT,0) END AS AUTH_CIPH_REJECT
			, CASE WHEN A.RAU_REQUEST IS NULL AND B.RAU_REQUEST IS NULL THEN NULL ELSE IFNULL(A.RAU_REQUEST,0) + IFNULL(B.RAU_REQUEST,0) END AS RAU_REQUEST
			, CASE WHEN A.RAU_ACCEPT IS NULL AND B.RAU_ACCEPT IS NULL THEN NULL ELSE IFNULL(A.RAU_ACCEPT,0) + IFNULL(B.RAU_ACCEPT,0) END AS RAU_ACCEPT
			, CASE WHEN A.RAU_REJECT IS NULL AND B.RAU_REJECT IS NULL THEN NULL ELSE IFNULL(A.RAU_REJECT,0) + IFNULL(B.RAU_REJECT,0) END AS RAU_REJECT
			, CASE WHEN A.PDP_ACTIVATION_REQUEST_CNT IS NULL AND B.PDP_ACTIVATION_REQUEST_CNT IS NULL THEN NULL ELSE IFNULL(A.PDP_ACTIVATION_REQUEST_CNT,0) + IFNULL(B.PDP_ACTIVATION_REQUEST_CNT,0) END AS PDP_ACTIVATION_REQUEST_CNT
			, CASE WHEN A.PDP_ACTIVATION_ACCEPT_CNT IS NULL AND B.PDP_ACTIVATION_ACCEPT_CNT IS NULL THEN NULL ELSE IFNULL(A.PDP_ACTIVATION_ACCEPT_CNT,0) + IFNULL(B.PDP_ACTIVATION_ACCEPT_CNT,0) END AS PDP_ACTIVATION_ACCEPT_CNT
			, CASE WHEN A.PDP_ACTIVATION_REJECT_CNT IS NULL AND B.PDP_ACTIVATION_REJECT_CNT IS NULL THEN NULL ELSE IFNULL(A.PDP_ACTIVATION_REJECT_CNT,0) + IFNULL(B.PDP_ACTIVATION_REJECT_CNT,0) END AS PDP_ACTIVATION_REJECT_CNT
			, CASE WHEN A.RRC_2000000 IS NULL AND B.RRC_2000000 IS NULL THEN NULL ELSE IFNULL(A.RRC_2000000,0) + IFNULL(B.RRC_2000000,0) END AS RRC_2000000
			, CASE WHEN A.RRC_2001000 IS NULL AND B.RRC_2001000 IS NULL THEN NULL ELSE IFNULL(A.RRC_2001000,0) + IFNULL(B.RRC_2001000,0) END AS RRC_2001000
			, CASE WHEN A.RAB_1006000 IS NULL AND B.RAB_1006000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1006000,0) + IFNULL(B.RAB_1006000,0) END AS RAB_1006000
			, CASE WHEN A.RAB_1014000 IS NULL AND B.RAB_1014000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1014000,0) + IFNULL(B.RAB_1014000,0) END AS RAB_1014000
			, CASE WHEN A.RAB_1015000 IS NULL AND B.RAB_1015000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1015000,0) + IFNULL(B.RAB_1015000,0) END AS RAB_1015000
			, CASE WHEN A.RAB_1019000 IS NULL AND B.RAB_1019000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1019000,0) + IFNULL(B.RAB_1019000,0) END AS RAB_1019000
			, CASE WHEN A.RAB_1033000 IS NULL AND B.RAB_1033000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1033000,0) + IFNULL(B.RAB_1033000,0) END AS RAB_1033000
			, CASE WHEN A.RAB_1034000 IS NULL AND B.RAB_1034000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1034000,0) + IFNULL(B.RAB_1034000,0) END AS RAB_1034000
			, CASE WHEN A.RAB_1039000 IS NULL AND B.RAB_1039000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1039000,0) + IFNULL(B.RAB_1039000,0) END AS RAB_1039000
			, CASE WHEN A.RAB_1040000 IS NULL AND B.RAB_1040000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1040000,0) + IFNULL(B.RAB_1040000,0) END AS RAB_1040000
			, CASE WHEN A.RAB_1042000 IS NULL AND B.RAB_1042000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1042000,0) + IFNULL(B.RAB_1042000,0) END AS RAB_1042000
			, CASE WHEN A.RAB_1046000 IS NULL AND B.RAB_1046000 IS NULL THEN NULL ELSE IFNULL(A.RAB_1046000,0) + IFNULL(B.RAB_1046000,0) END AS RAB_1046000
			, CASE WHEN A.RAB_5113000 IS NULL AND B.RAB_5113000 IS NULL THEN NULL ELSE IFNULL(A.RAB_5113000,0) + IFNULL(B.RAB_5113000,0) END AS RAB_5113000
			, CASE WHEN A.RAB_5114000 IS NULL AND B.RAB_5114000 IS NULL THEN NULL ELSE IFNULL(A.RAB_5114000,0) + IFNULL(B.RAB_5114000,0) END AS RAB_5114000
			, CASE WHEN A.RRC_RAB_OTHERS IS NULL AND B.RRC_RAB_OTHERS IS NULL THEN NULL ELSE IFNULL(A.RRC_RAB_OTHERS,0) + IFNULL(B.RRC_RAB_OTHERS,0) END AS RRC_RAB_OTHERS
			, CASE WHEN A.CSFB_SETUP_TIME_SUM IS NULL AND B.CSFB_SETUP_TIME_SUM IS NULL THEN NULL ELSE IFNULL(A.CSFB_SETUP_TIME_SUM,0) + IFNULL(B.CSFB_SETUP_TIME_SUM,0) END AS CSFB_SETUP_TIME_SUM
			, CASE WHEN A.CSFB_SETUP_TIME_CNT IS NULL AND B.CSFB_SETUP_TIME_CNT IS NULL THEN NULL ELSE IFNULL(A.CSFB_SETUP_TIME_CNT,0) + IFNULL(B.CSFB_SETUP_TIME_CNT,0) END AS CSFB_SETUP_TIME_CNT
			, CASE WHEN IFNULL(A.CSFB_SETUP_TIME_MAX,0) > IFNULL(B.CSFB_SETUP_TIME_MAX,0) THEN A.CSFB_SETUP_TIME_MAX ELSE B.CSFB_SETUP_TIME_MAX END AS CSFB_SETUP_TIME_MAX
			, CASE WHEN A.CSFB_CALL_CNT IS NULL AND B.CSFB_CALL_CNT IS NULL THEN NULL ELSE IFNULL(A.CSFB_CALL_CNT,0) + IFNULL(B.CSFB_CALL_CNT,0) END AS CSFB_CALL_CNT
			, CASE WHEN A.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE IS NULL AND B.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE IS NULL THEN NULL ELSE IFNULL(A.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,0) + IFNULL(B.RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE,0) END AS RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE
			, CASE WHEN A.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE IS NULL AND B.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE IS NULL THEN NULL ELSE IFNULL(A.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE,0) + IFNULL(B.RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE,0) END AS RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
			, CASE WHEN A.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL IS NULL AND B.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL IS NULL THEN NULL ELSE IFNULL(A.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,0) + IFNULL(B.RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL,0) END AS RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL
			, CASE WHEN A.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH IS NULL AND B.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH IS NULL THEN NULL ELSE IFNULL(A.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,0) + IFNULL(B.RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH,0) END AS RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH
			, CASE WHEN A.RAB_UNSPECIFIED_FAILURE IS NULL AND B.RAB_UNSPECIFIED_FAILURE IS NULL THEN NULL ELSE IFNULL(A.RAB_UNSPECIFIED_FAILURE,0) + IFNULL(B.RAB_UNSPECIFIED_FAILURE,0) END AS RAB_UNSPECIFIED_FAILURE
			, CASE WHEN A.SMS_TYPE_01 IS NULL AND B.SMS_TYPE_01 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_01,0) + IFNULL(B.SMS_TYPE_01,0) END AS SMS_TYPE_01
			, CASE WHEN A.SMS_TYPE_10 IS NULL AND B.SMS_TYPE_10 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_10,0) + IFNULL(B.SMS_TYPE_10,0) END AS SMS_TYPE_10
			, CASE WHEN A.SMS_TYPE_11 IS NULL AND B.SMS_TYPE_11 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_11,0) + IFNULL(B.SMS_TYPE_11,0) END AS SMS_TYPE_11
			, CASE WHEN A.SMS_TYPE_00 IS NULL AND B.SMS_TYPE_00 IS NULL THEN NULL ELSE IFNULL(A.SMS_TYPE_00,0) + IFNULL(B.SMS_TYPE_00,0) END AS SMS_TYPE_00
		FROM ',GT_DB,'.table_tile_start_dy_c_def a RIGHT JOIN 
		(
		 	SELECT
				 DATA_DATE AS DATA_DATE
				#, DATA_HOUR
				, FREQUENCY AS FREQUENCY
				, UARFCN AS UARFCN
				#, INDOOR AS INDOOR
				#, MOVING AS MOVING
				#, TILE_ID AS TILE_ID
				, RNC_ID AS RNC_ID
				, CELL_INDOOR AS CELL_INDOOR
				, CLUSTER_ID AS CLUSTER_ID
				, SITE_ID AS SITE_ID
				, CELL_ID AS CELL_ID
				#, CALL_TYPE AS CALL_TYPE
				#, CALL_STATUS AS CALL_STATUS
				, CELL_NAME AS CELL_NAME
				, SUM(CALL_CNT) AS CALL_CNT
				, SUM(BEST_RSCP_1) AS BEST_RSCP_1
				, SUM(BEST_ECN0_1) AS BEST_ECN0_1
				, NULL AS BEST_RSCP_1_MED #median(BEST_RSCP_1_MED) AS BEST_RSCP_1_MED
				, NULL AS BEST_ECN0_1_MED #median(BEST_ECN0_1_MED) AS BEST_ECN0_1_MED
				, NULL AS SUB_DENSITY
				, SUM(ERLANG) AS ERLANG
				, SUM(DL_DATA_THRU) AS DL_DATA_THRU
				, SUM(UL_DATA_THRU) AS UL_DATA_THRU
				, SUM(DL_TRAFFIC) AS DL_TRAFFIC
				, SUM(UL_TRAFFIC) AS UL_TRAFFIC
				, SUM(U_UL_DATA_THRU) AS U_UL_DATA_THRU
				, MAX(U_MAX_UL_DATA_THRU) AS U_MAX_UL_DATA_THRU
				, SUM(U_DL_DATA_THRU) AS U_DL_DATA_THRU
				, MAX(U_MAX_DL_DATA_THRU) AS U_MAX_DL_DATA_THRU
				, SUM(CALL_CNT_ACT) AS CALL_CNT_ACT
				, SUM(BEST_RSCP_1_ACT) AS BEST_RSCP_1_ACT
				, SUM(BEST_ECN0_1_ACT) AS BEST_ECN0_1_ACT
				, NULL AS BEST_RSCP_1_ACT_MED #median(BEST_RSCP_1_ACT_MED) AS BEST_RSCP_1_ACT_MED
				, NULL AS BEST_ECN0_1_ACT_MED #median(BEST_ECN0_1_ACT_MED) AS BEST_ECN0_1_ACT_MED
				, SUM(RAB_NO_RESOURCE_AVAILABLE) AS RAB_NO_RESOURCE_AVAILABLE
				, SUM(RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON) AS RAB_RELEASE_DUE_TO_UTRAN_GENERATED_REASON
				, SUM(RAB_OTHER) AS RAB_OTHER
				, SUM(RRC_CONGESTION) AS RRC_CONGESTION
				, SUM(RRC_UNSPECIFIED) AS RRC_UNSPECIFIED
				, CELL_LON,CELL_LAT
				-- CNT
				, SUM(BEST_RSCP_1_CNT) AS BEST_RSCP_1_CNT
				, SUM(BEST_ECN0_1_CNT) AS BEST_ECN0_1_CNT
				, SUM(U_UL_DATA_THRU_CNT) AS U_UL_DATA_THRU_CNT
				, SUM(U_DL_DATA_THRU_CNT) AS U_DL_DATA_THRU_CNT
				, SUM(BEST_RSCP_1_ACT_CNT) AS BEST_RSCP_1_ACT_CNT
				, SUM(BEST_ECN0_1_ACT_CNT) AS BEST_ECN0_1_ACT_CNT
				,1 AS HOUR_CNT
				,SUM(NAS_SM_SUM) AS NAS_SM_SUM
				,SUM(NAS_GPRS_MM_ATTACH_SUM) AS NAS_GPRS_MM_ATTACH_SUM
				,SUM(CALL_TYPE_10) AS CALL_TYPE_10
				,SUM(CALL_TYPE_11) AS CALL_TYPE_11
				,SUM(CALL_TYPE_12) AS CALL_TYPE_12
				,SUM(CALL_TYPE_13) AS CALL_TYPE_13
				,SUM(CALL_TYPE_14) AS CALL_TYPE_14
				,SUM(CALL_TYPE_16) AS CALL_TYPE_16
				,SUM(CALL_TYPE_18) AS CALL_TYPE_18
				,SUM(AUTH_REQUEST) AS AUTH_REQUEST
				,SUM(AUTH_RESPONSE) AS AUTH_RESPONSE
				,SUM(AUTH_FAILURE) AS AUTH_FAILURE
				,SUM(AUTH_REJECT) AS AUTH_REJECT
				,SUM(LU_REQUEST) AS LU_REQUEST
				,SUM(LU_ACCEPT) AS LU_ACCEPT
				,SUM(LU_REJECT) AS LU_REJECT
				,SUM(AUTH_CIPH_REQUEST) AS AUTH_CIPH_REQUEST
				,SUM(AUTH_CIPH_RESPONSE) AS AUTH_CIPH_RESPONSE
				,SUM(AUTH_CIPH_FAILURE) AS AUTH_CIPH_FAILURE
				,SUM(AUTH_CIPH_REJECT) AS AUTH_CIPH_REJECT
				,SUM(RAU_REQUEST) AS RAU_REQUEST
				,SUM(RAU_ACCEPT) AS RAU_ACCEPT
				,SUM(RAU_REJECT) AS RAU_REJECT
				,SUM(PDP_ACTIVATION_REQUEST_CNT) AS PDP_ACTIVATION_REQUEST_CNT
				,SUM(PDP_ACTIVATION_ACCEPT_CNT) AS PDP_ACTIVATION_ACCEPT_CNT
				,SUM(PDP_ACTIVATION_REJECT_CNT) AS PDP_ACTIVATION_REJECT_CNT
				,SUM(RRC_2000000) AS RRC_2000000
				,SUM(RRC_2001000) AS RRC_2001000
				,SUM(RAB_1006000) AS RAB_1006000
				,SUM(RAB_1014000) AS RAB_1014000
				,SUM(RAB_1015000) AS RAB_1015000
				,SUM(RAB_1019000) AS RAB_1019000
				,SUM(RAB_1033000) AS RAB_1033000
				,SUM(RAB_1034000) AS RAB_1034000
				,SUM(RAB_1039000) AS RAB_1039000
				,SUM(RAB_1040000) AS RAB_1040000
				,SUM(RAB_1042000) AS RAB_1042000
				,SUM(RAB_1046000) AS RAB_1046000
				,SUM(RAB_5113000) AS RAB_5113000
				,SUM(RAB_5114000) AS RAB_5114000
				,SUM(RRC_RAB_OTHERS) AS RRC_RAB_OTHERS
				,SUM(CSFB_SETUP_TIME_SUM) AS CSFB_SETUP_TIME_SUM
				,SUM(CSFB_SETUP_TIME_CNT) AS CSFB_SETUP_TIME_CNT
				,MAX(CSFB_SETUP_TIME_MAX) AS CSFB_SETUP_TIME_MAX
				,SUM(CSFB_CALL_CNT) AS CSFB_CALL_CNT
				,SUM(RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE) AS RAB_FAILURE_IN_THE_RADIO_INTERFACE_PROCEDURE
				,SUM(RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE) AS RAB_REQUESTED_MAXIMUM_BIT_RATE_FOR_DL_UL_NOT_AVAILABLE
				,SUM(RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL) AS RAB_NO_RADIO_RESOURCES_AVAILABLE_IN_TARGET_CELL
				,SUM(RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH) AS RAB_LU_TRANSPORT_CONNECTION_FAILED_TO_ESTABLISH
				,SUM(RAB_UNSPECIFIED_FAILURE) AS RAB_UNSPECIFIED_FAILURE
				,SUM(SMS_TYPE_01) AS SMS_TYPE_01
				,SUM(SMS_TYPE_10) AS SMS_TYPE_10
				,SUM(SMS_TYPE_11) AS SMS_TYPE_11
				,SUM(SMS_TYPE_00) AS SMS_TYPE_00
			FROM ',GT_DB,RUN,'.`tmp_table_tile_start_',WORKER_ID,'`
			GROUP BY DATA_DATE
				#, DATA_HOUR
				#, FREQUENCY
				#, UARFCN
				#, INDOOR
				#, MOVING
				#, TILE_ID
				, RNC_ID
				#, CELL_INDOOR
				#, CLUSTER_ID
				#, SITE_ID
				, CELL_ID
				#, CALL_TYPE 
				#, CALL_STATUS
			ORDER BY NULL
		) B
		ON  A.DATA_DATE=B.DATA_DATE
		#AND A.FREQUENCY=B.FREQUENCY
		#AND A.UARFCN=B.UARFCN
		#AND A.INDOOR=B.INDOOR
		#AND A.MOVING=B.MOVING
		#AND A.TILE_ID=B.TILE_ID
		AND A.RNC_ID=B.RNC_ID
		#AND A.CELL_INDOOR=B.CELL_INDOOR
		#AND A.CLUSTER_ID=B.CLUSTER_ID
		#AND A.SITE_ID=B.SITE_ID
		AND A.CELL_ID=B.CELL_ID
		#AND A.CALL_TYPE=B.CALL_TYPE
		#AND A.CALL_STATUS=B.CALL_STATUS
		;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	INSERT INTO sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Create table tmp_table_tile_dl_thru_high ', NOW());
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_t_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_c_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_def_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_t_def_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_c_def_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_t_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_c_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_def_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_t_def_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_c_def_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_',WORKER_ID,' engine=myisam
				SELECT
					 DATA_DATE
					, DATA_HOUR
					, INDOOR
					, MOVING
					, gt_covmo_proj_geohash_to_hex_geohash(POS_FIRST_LOC, ',@ZOOM_LEVEL,') AS TILE_ID
					, POS_FIRST_RNC AS RNC_ID
					, POS_FIRST_CELL AS CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
-- 					, COUNT(*) AS DL_THRU_HIGH_CALL_CNT
					, SUM(UL_THROUGHPUT_EVENT_CNT) AS DL_THRU_HIGH_CALL_CNT
-- 					, SUM(DL_THROUGHPUT_AVG*UL_THROUGHPUT_EVENT_CNT)/SUM(UL_THROUGHPUT_EVENT_CNT)  AS DL_THRU_HIGH
					, SUM(DL_THROUGHPUT_AVG*UL_THROUGHPUT_EVENT_CNT) AS DL_THROUGHPUT_AVG_SUM
				FROM ',GT_DB,RUN,'.table_call
				WHERE POS_FIRST_CELL IS NOT NULL
				AND DL_TRAFFIC_VOLUME > 1024
				AND DATA_HOUR >= ',STARTHOUR,' AND DATA_HOUR < ',ENDHOUR,'
				GROUP BY  DATA_DATE
					, DATA_HOUR
					, INDOOR
					, MOVING
					, gt_covmo_proj_geohash_to_hex_geohash(POS_FIRST_LOC, ',@ZOOM_LEVEL,')
					, POS_FIRST_RNC
					, POS_FIRST_CELL
					, CALL_TYPE 
					, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
		
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_t_',WORKER_ID,' engine=myisam
				SELECT
					 DATA_DATE
					, DATA_HOUR
					, INDOOR
					, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
					, SUM(DL_THRU_HIGH_CALL_CNT) AS DL_THRU_HIGH_CALL_CNT
					, SUM(DL_THROUGHPUT_AVG_SUM) AS DL_THROUGHPUT_AVG_SUM
				FROM ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					, DATA_HOUR
					, INDOOR
					, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_c_',WORKER_ID,' engine=myisam
				SELECT
					 DATA_DATE
					, DATA_HOUR
					, INDOOR
					, MOVING
					#, TILE_ID
					, RNC_ID
					, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
					, SUM(DL_THRU_HIGH_CALL_CNT) AS DL_THRU_HIGH_CALL_CNT
					, SUM(DL_THROUGHPUT_AVG_SUM) AS DL_THROUGHPUT_AVG_SUM
				FROM ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					, DATA_HOUR
					, INDOOR
					, MOVING
					#, TILE_ID
					, RNC_ID
					, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_def_',WORKER_ID,' engine=myisam
				SELECT
					 DATA_DATE
					, DATA_HOUR
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
					, SUM(DL_THRU_HIGH_CALL_CNT) AS DL_THRU_HIGH_CALL_CNT
					, SUM(DL_THROUGHPUT_AVG_SUM) AS DL_THROUGHPUT_AVG_SUM
				FROM ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					, DATA_HOUR
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_t_def_',WORKER_ID,' engine=myisam
				SELECT
					 DATA_DATE
					, DATA_HOUR
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
					, SUM(DL_THRU_HIGH_CALL_CNT) AS DL_THRU_HIGH_CALL_CNT
					, SUM(DL_THROUGHPUT_AVG_SUM) AS DL_THROUGHPUT_AVG_SUM
				FROM ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					, DATA_HOUR
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_c_def_',WORKER_ID,' engine=myisam
				SELECT
					 DATA_DATE
					, DATA_HOUR
					#, INDOOR
					#, MOVING
					#, TILE_ID
					, RNC_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
					, SUM(DL_THRU_HIGH_CALL_CNT) AS DL_THRU_HIGH_CALL_CNT
					, SUM(DL_THROUGHPUT_AVG_SUM) AS DL_THROUGHPUT_AVG_SUM
				FROM ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					, DATA_HOUR
					#, INDOOR
					#, MOVING
					#, TILE_ID
					, RNC_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_',WORKER_ID,' engine=myisam
				SELECT
					 DATA_DATE
					#, DATA_HOUR
					, INDOOR
					, MOVING
					, TILE_ID
					, RNC_ID
					, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
					, SUM(DL_THRU_HIGH_CALL_CNT) AS DL_THRU_HIGH_CALL_CNT
					, SUM(DL_THROUGHPUT_AVG_SUM) AS DL_THROUGHPUT_AVG_SUM
				FROM ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					#, DATA_HOUR
					, INDOOR
					, MOVING
					, TILE_ID
					, RNC_ID
					, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_t_',WORKER_ID,' engine=myisam
				SELECT
					 DATA_DATE
					#, DATA_HOUR
					, INDOOR
					, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
					, SUM(DL_THRU_HIGH_CALL_CNT) AS DL_THRU_HIGH_CALL_CNT
					, SUM(DL_THROUGHPUT_AVG_SUM) AS DL_THROUGHPUT_AVG_SUM
				FROM ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					#, DATA_HOUR
					, INDOOR
					, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_c_',WORKER_ID,' engine=myisam
				SELECT
					 DATA_DATE
					#, DATA_HOUR
					, INDOOR
					, MOVING
					#, TILE_ID
					, RNC_ID
					, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
					, SUM(DL_THRU_HIGH_CALL_CNT) AS DL_THRU_HIGH_CALL_CNT
					, SUM(DL_THROUGHPUT_AVG_SUM) AS DL_THROUGHPUT_AVG_SUM
				FROM ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					#, DATA_HOUR
					, INDOOR
					, MOVING
					#, TILE_ID
					, RNC_ID
					, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_def_',WORKER_ID,' engine=myisam
				SELECT
					 DATA_DATE
					#, DATA_HOUR
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
					, SUM(DL_THRU_HIGH_CALL_CNT) AS DL_THRU_HIGH_CALL_CNT
					, SUM(DL_THROUGHPUT_AVG_SUM) AS DL_THROUGHPUT_AVG_SUM
				FROM ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					#, DATA_HOUR
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_t_def_',WORKER_ID,' engine=myisam
				SELECT
					 DATA_DATE
					#, DATA_HOUR
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
					, SUM(DL_THRU_HIGH_CALL_CNT) AS DL_THRU_HIGH_CALL_CNT
					, SUM(DL_THROUGHPUT_AVG_SUM) AS DL_THROUGHPUT_AVG_SUM
				FROM ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					#, DATA_HOUR
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_c_def_',WORKER_ID,' engine=myisam
				SELECT
					 DATA_DATE
					#, DATA_HOUR
					#, INDOOR
					#, MOVING
					#, TILE_ID
					, RNC_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
					, SUM(DL_THRU_HIGH_CALL_CNT) AS DL_THRU_HIGH_CALL_CNT
					, SUM(DL_THROUGHPUT_AVG_SUM) AS DL_THROUGHPUT_AVG_SUM
				FROM ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					#, DATA_HOUR
					#, INDOOR
					#, MOVING
					#, TILE_ID
					, RNC_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Update DL_THRU_HIGH_CALL_CNT, DL_THRU_HIGH in table_tile_start ', NOW());
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start A, 
				    ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_',WORKER_ID,' B
				SET 	A.DL_THRU_HIGH_CALL_CNT=B.DL_THRU_HIGH_CALL_CNT
					,A.DL_THRU_HIGH=(B.DL_THROUGHPUT_AVG_SUM/B.DL_THRU_HIGH_CALL_CNT)
				WHERE   A.DATA_DATE=B.DATA_DATE
				AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				AND A.INDOOR=B.INDOOR
				AND A.MOVING=B.MOVING
				AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_t A, 
				    ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_t_',WORKER_ID,' B
				SET 	A.DL_THRU_HIGH_CALL_CNT=B.DL_THRU_HIGH_CALL_CNT
					,A.DL_THRU_HIGH=(B.DL_THROUGHPUT_AVG_SUM/B.DL_THRU_HIGH_CALL_CNT)
				WHERE   A.DATA_DATE=B.DATA_DATE
				AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				#AND A.CELL_ID=B.CELL_ID
				AND A.INDOOR=B.INDOOR
				AND A.MOVING=B.MOVING
				AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_c A, 
				    ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_c_',WORKER_ID,' B
				SET 	A.DL_THRU_HIGH_CALL_CNT=B.DL_THRU_HIGH_CALL_CNT
					,A.DL_THRU_HIGH=(B.DL_THROUGHPUT_AVG_SUM/B.DL_THRU_HIGH_CALL_CNT)
				WHERE   A.DATA_DATE=B.DATA_DATE
				AND A.DATA_HOUR=B.DATA_HOUR
				#AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				AND A.INDOOR=B.INDOOR
				AND A.MOVING=B.MOVING
				AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_def A, 
				    ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_def_',WORKER_ID,' B
				SET 	A.DL_THRU_HIGH_CALL_CNT=B.DL_THRU_HIGH_CALL_CNT
					,A.DL_THRU_HIGH=(B.DL_THROUGHPUT_AVG_SUM/B.DL_THRU_HIGH_CALL_CNT)
				WHERE   A.DATA_DATE=B.DATA_DATE
				AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				#AND A.INDOOR=B.INDOOR
				#AND A.MOVING=B.MOVING
				#AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				#AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_t_def A, 
				    ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_t_def_',WORKER_ID,' B
				SET 	A.DL_THRU_HIGH_CALL_CNT=B.DL_THRU_HIGH_CALL_CNT
					,A.DL_THRU_HIGH=(B.DL_THROUGHPUT_AVG_SUM/B.DL_THRU_HIGH_CALL_CNT)
				WHERE   A.DATA_DATE=B.DATA_DATE
				AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				#AND A.CELL_ID=B.CELL_ID
				#AND A.INDOOR=B.INDOOR
				#AND A.MOVING=B.MOVING
				#AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				#AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_c_def A, 
				    ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_c_def_',WORKER_ID,' B
				SET 	A.DL_THRU_HIGH_CALL_CNT=B.DL_THRU_HIGH_CALL_CNT
					,A.DL_THRU_HIGH=(B.DL_THROUGHPUT_AVG_SUM/B.DL_THRU_HIGH_CALL_CNT)
				WHERE   A.DATA_DATE=B.DATA_DATE
				AND A.DATA_HOUR=B.DATA_HOUR
				#AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				#AND A.INDOOR=B.INDOOR
				#AND A.MOVING=B.MOVING
				#AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				#AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_dy A, 
				    ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_',WORKER_ID,' B
				SET 	A.DL_THRU_HIGH_CALL_CNT=(IFNULL(A.DL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.DL_THRU_HIGH_CALL_CNT,0))
					,A.DL_THRU_HIGH=((IFNULL(A.DL_THRU_HIGH,0) * IFNULL(A.DL_THRU_HIGH_CALL_CNT,0)) + (IFNULL(B.DL_THROUGHPUT_AVG_SUM,0)))
							/(IFNULL(A.DL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.DL_THRU_HIGH_CALL_CNT,0))
				WHERE   A.DATA_DATE=B.DATA_DATE
				#AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				AND A.INDOOR=B.INDOOR
				AND A.MOVING=B.MOVING
				AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				#AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_dy_t A, 
				    ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_t_',WORKER_ID,' B
				SET 	A.DL_THRU_HIGH_CALL_CNT=(IFNULL(A.DL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.DL_THRU_HIGH_CALL_CNT,0))
					,A.DL_THRU_HIGH=((IFNULL(A.DL_THRU_HIGH,0) * IFNULL(A.DL_THRU_HIGH_CALL_CNT,0)) + (IFNULL(B.DL_THROUGHPUT_AVG_SUM,0)))
							/(IFNULL(A.DL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.DL_THRU_HIGH_CALL_CNT,0))
				WHERE   A.DATA_DATE=B.DATA_DATE
				#AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				#AND A.CELL_ID=B.CELL_ID
				AND A.INDOOR=B.INDOOR
				AND A.MOVING=B.MOVING
				AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				#AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_dy_c A, 
				    ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_c_',WORKER_ID,' B
				SET 	A.DL_THRU_HIGH_CALL_CNT=(IFNULL(A.DL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.DL_THRU_HIGH_CALL_CNT,0))
					,A.DL_THRU_HIGH=((IFNULL(A.DL_THRU_HIGH,0) * IFNULL(A.DL_THRU_HIGH_CALL_CNT,0)) + (IFNULL(B.DL_THROUGHPUT_AVG_SUM,0)))
							/(IFNULL(A.DL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.DL_THRU_HIGH_CALL_CNT,0))
				WHERE   A.DATA_DATE=B.DATA_DATE
				#AND A.DATA_HOUR=B.DATA_HOUR
				#AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				AND A.INDOOR=B.INDOOR
				AND A.MOVING=B.MOVING
				AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				#AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_dy_def A, 
				    ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_def_',WORKER_ID,' B
				SET 	A.DL_THRU_HIGH_CALL_CNT=(IFNULL(A.DL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.DL_THRU_HIGH_CALL_CNT,0))
					,A.DL_THRU_HIGH=((IFNULL(A.DL_THRU_HIGH,0) * IFNULL(A.DL_THRU_HIGH_CALL_CNT,0)) + (IFNULL(B.DL_THROUGHPUT_AVG_SUM,0)))
							/(IFNULL(A.DL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.DL_THRU_HIGH_CALL_CNT,0))
				WHERE   A.DATA_DATE=B.DATA_DATE
				#AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				#AND A.INDOOR=B.INDOOR
				#AND A.MOVING=B.MOVING
				#AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				#AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				#AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_dy_def A, 
				    ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_def_',WORKER_ID,' B
				SET 	A.DL_THRU_HIGH_CALL_CNT=(IFNULL(A.DL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.DL_THRU_HIGH_CALL_CNT,0))
					,A.DL_THRU_HIGH=((IFNULL(A.DL_THRU_HIGH,0) * IFNULL(A.DL_THRU_HIGH_CALL_CNT,0)) + (IFNULL(B.DL_THROUGHPUT_AVG_SUM,0)))
							/(IFNULL(A.DL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.DL_THRU_HIGH_CALL_CNT,0))
				WHERE   A.DATA_DATE=B.DATA_DATE
				#AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				#AND A.INDOOR=B.INDOOR
				#AND A.MOVING=B.MOVING
				#AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				#AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				#AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_dy_t_def A, 
				    ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_t_def_',WORKER_ID,' B
				SET 	A.DL_THRU_HIGH_CALL_CNT=(IFNULL(A.DL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.DL_THRU_HIGH_CALL_CNT,0))
					,A.DL_THRU_HIGH=((IFNULL(A.DL_THRU_HIGH,0) * IFNULL(A.DL_THRU_HIGH_CALL_CNT,0)) + (IFNULL(B.DL_THROUGHPUT_AVG_SUM,0)))
							/(IFNULL(A.DL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.DL_THRU_HIGH_CALL_CNT,0))
				WHERE   A.DATA_DATE=B.DATA_DATE
				#AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				#AND A.CELL_ID=B.CELL_ID
				#AND A.INDOOR=B.INDOOR
				#AND A.MOVING=B.MOVING
				#AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				#AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				#AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_dy_c_def A, 
				    ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_c_def_',WORKER_ID,' B
				SET 	A.DL_THRU_HIGH_CALL_CNT=(IFNULL(A.DL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.DL_THRU_HIGH_CALL_CNT,0))
					,A.DL_THRU_HIGH=((IFNULL(A.DL_THRU_HIGH,0) * IFNULL(A.DL_THRU_HIGH_CALL_CNT,0)) + (IFNULL(B.DL_THROUGHPUT_AVG_SUM,0)))
							/(IFNULL(A.DL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.DL_THRU_HIGH_CALL_CNT,0))
				WHERE   A.DATA_DATE=B.DATA_DATE
				#AND A.DATA_HOUR=B.DATA_HOUR
				#AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				#AND A.INDOOR=B.INDOOR
				#AND A.MOVING=B.MOVING
				#AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				#AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				#AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
		
	INSERT INTO sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Create table tmp_table_tile_thru_ul_high ', NOW());
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_t_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_c_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_def_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_t_def_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_c_def_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_t_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_c_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_def_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_t_def_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_c_def_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_',WORKER_ID,' engine=myisam
			    SELECT
					 DATA_DATE
					, DATA_HOUR
					, INDOOR
					, MOVING
					, gt_covmo_proj_geohash_to_hex_geohash(POS_FIRST_LOC, ',@ZOOM_LEVEL,') AS TILE_ID
					, POS_FIRST_RNC AS RNC_ID
					, POS_FIRST_CELL AS CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
-- 					, COUNT(*) AS UL_THRU_HIGH_CALL_CNT
					, SUM(UL_THROUGHPUT_EVENT_CNT) AS UL_THRU_HIGH_CALL_CNT
-- 					, SUM(UL_THROUGHPUT_AVG*UL_THROUGHPUT_EVENT_CNT)/SUM(UL_THROUGHPUT_EVENT_CNT) AS UL_THRU_HIGH
					, SUM(UL_THROUGHPUT_AVG*UL_THROUGHPUT_EVENT_CNT) AS UL_THROUGHPUT_AVG_SUM
				FROM  ',GT_DB,RUN,'.table_call
				WHERE POS_FIRST_CELL IS NOT NULL
				AND UL_TRAFFIC_VOLUME > 200
				AND DATA_HOUR >= ',STARTHOUR,' AND DATA_HOUR < ',ENDHOUR,'
				GROUP BY  DATA_DATE
					, DATA_HOUR
					, INDOOR
					, MOVING
					, gt_covmo_proj_geohash_to_hex_geohash(POS_FIRST_LOC, ',@ZOOM_LEVEL,')
					, POS_FIRST_RNC
					, POS_FIRST_CELL
					, CALL_TYPE 
					, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
		
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_t_',WORKER_ID,' engine=myisam
			    SELECT
					 DATA_DATE
					, DATA_HOUR
					, INDOOR
					, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
					, SUM(UL_THRU_HIGH_CALL_CNT) AS UL_THRU_HIGH_CALL_CNT
					, SUM(UL_THROUGHPUT_AVG_SUM) AS UL_THROUGHPUT_AVG_SUM
				FROM  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					, DATA_HOUR
					, INDOOR
					, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_c_',WORKER_ID,' engine=myisam
			    SELECT
					 DATA_DATE
					, DATA_HOUR
					, INDOOR
					, MOVING
					#, TILE_ID
					, RNC_ID
					, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
					, SUM(UL_THRU_HIGH_CALL_CNT) AS UL_THRU_HIGH_CALL_CNT
					, SUM(UL_THROUGHPUT_AVG_SUM) AS UL_THROUGHPUT_AVG_SUM
				FROM  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					, DATA_HOUR
					, INDOOR
					, MOVING
					#, TILE_ID
					, RNC_ID
					, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_def_',WORKER_ID,' engine=myisam
			    SELECT
					 DATA_DATE
					, DATA_HOUR
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
					, SUM(UL_THRU_HIGH_CALL_CNT) AS UL_THRU_HIGH_CALL_CNT
					, SUM(UL_THROUGHPUT_AVG_SUM) AS UL_THROUGHPUT_AVG_SUM
				FROM  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					, DATA_HOUR
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_t_def_',WORKER_ID,' engine=myisam
			    SELECT
					 DATA_DATE
					, DATA_HOUR
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
					, SUM(UL_THRU_HIGH_CALL_CNT) AS UL_THRU_HIGH_CALL_CNT
					, SUM(UL_THROUGHPUT_AVG_SUM) AS UL_THROUGHPUT_AVG_SUM
				FROM  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					, DATA_HOUR
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_c_def_',WORKER_ID,' engine=myisam
			    SELECT
					 DATA_DATE
					, DATA_HOUR
					#, INDOOR
					#, MOVING
					#, TILE_ID
					, RNC_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
					, SUM(UL_THRU_HIGH_CALL_CNT) AS UL_THRU_HIGH_CALL_CNT
					, SUM(UL_THROUGHPUT_AVG_SUM) AS UL_THROUGHPUT_AVG_SUM
				FROM  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					, DATA_HOUR
					#, INDOOR
					#, MOVING
					#, TILE_ID
					, RNC_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_',WORKER_ID,' engine=myisam
			    SELECT
					 DATA_DATE
					#, DATA_HOUR
					, INDOOR
					, MOVING
					, TILE_ID
					, RNC_ID
					, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
					, SUM(UL_THRU_HIGH_CALL_CNT) AS UL_THRU_HIGH_CALL_CNT
					, SUM(UL_THROUGHPUT_AVG_SUM) AS UL_THROUGHPUT_AVG_SUM
				FROM  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					#, DATA_HOUR
					, INDOOR
					, MOVING
					, TILE_ID
					, RNC_ID
					, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_t_',WORKER_ID,' engine=myisam
			    SELECT
					 DATA_DATE
					#, DATA_HOUR
					, INDOOR
					, MOVING
					, TILE_ID
					, RNC_ID
					, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
					, SUM(UL_THRU_HIGH_CALL_CNT) AS UL_THRU_HIGH_CALL_CNT
					, SUM(UL_THROUGHPUT_AVG_SUM) AS UL_THROUGHPUT_AVG_SUM
				FROM  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					#, DATA_HOUR
					, INDOOR
					, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_c_',WORKER_ID,' engine=myisam
			    SELECT
					 DATA_DATE
					#, DATA_HOUR
					, INDOOR
					, MOVING
					, TILE_ID
					, RNC_ID
					, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
					, SUM(UL_THRU_HIGH_CALL_CNT) AS UL_THRU_HIGH_CALL_CNT
					, SUM(UL_THROUGHPUT_AVG_SUM) AS UL_THROUGHPUT_AVG_SUM
				FROM  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					#, DATA_HOUR
					, INDOOR
					, MOVING
					#, TILE_ID
					, RNC_ID
					, CELL_ID
					, CALL_TYPE 
					, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_def_',WORKER_ID,' engine=myisam
			    SELECT
					 DATA_DATE
					#, DATA_HOUR
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
					, SUM(UL_THRU_HIGH_CALL_CNT) AS UL_THRU_HIGH_CALL_CNT
					, SUM(UL_THROUGHPUT_AVG_SUM) AS UL_THROUGHPUT_AVG_SUM
				FROM  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					#, DATA_HOUR
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_t_def_',WORKER_ID,' engine=myisam
			    SELECT
					 DATA_DATE
					#, DATA_HOUR
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
					, SUM(UL_THRU_HIGH_CALL_CNT) AS UL_THRU_HIGH_CALL_CNT
					, SUM(UL_THROUGHPUT_AVG_SUM) AS UL_THROUGHPUT_AVG_SUM
				FROM  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					#, DATA_HOUR
					#, INDOOR
					#, MOVING
					, TILE_ID
					, RNC_ID
					#, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Create TEMPORARY table  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_c_def_',WORKER_ID,' engine=myisam
			    SELECT
					 DATA_DATE
					#, DATA_HOUR
					#, INDOOR
					#, MOVING
					#, TILE_ID
					, RNC_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
					, SUM(UL_THRU_HIGH_CALL_CNT) AS UL_THRU_HIGH_CALL_CNT
					, SUM(UL_THROUGHPUT_AVG_SUM) AS UL_THROUGHPUT_AVG_SUM
				FROM  ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_',WORKER_ID,'
				GROUP BY  DATA_DATE
					#, DATA_HOUR
					#, INDOOR
					#, MOVING
					#, TILE_ID
					, RNC_ID
					, CELL_ID
					#, CALL_TYPE 
					#, CALL_STATUS
				ORDER BY NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Update UL_THRU_HIGH_CALL_CNT, UL_THRU_HIGH in table_tile_start ', NOW());
	
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start A, 
				    ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_',WORKER_ID,' B
				SET 	A.UL_THRU_HIGH_CALL_CNT=B.UL_THRU_HIGH_CALL_CNT
					,A.UL_THRU_HIGH=(B.UL_THROUGHPUT_AVG_SUM/B.UL_THRU_HIGH_CALL_CNT)
				WHERE   A.DATA_DATE=B.DATA_DATE
				AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				AND A.INDOOR=B.INDOOR
				AND A.MOVING=B.MOVING
				AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');	
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_t A, 
				    ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_t_',WORKER_ID,' B
				SET 	A.UL_THRU_HIGH_CALL_CNT=B.UL_THRU_HIGH_CALL_CNT
					,A.UL_THRU_HIGH=(B.UL_THROUGHPUT_AVG_SUM/B.UL_THRU_HIGH_CALL_CNT)
				WHERE   A.DATA_DATE=B.DATA_DATE
				AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				#AND A.CELL_ID=B.CELL_ID
				AND A.INDOOR=B.INDOOR
				AND A.MOVING=B.MOVING
				AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');	
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_c A, 
				    ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_c_',WORKER_ID,' B
				SET 	A.UL_THRU_HIGH_CALL_CNT=B.UL_THRU_HIGH_CALL_CNT
					,A.UL_THRU_HIGH=(B.UL_THROUGHPUT_AVG_SUM/B.UL_THRU_HIGH_CALL_CNT)
				WHERE   A.DATA_DATE=B.DATA_DATE
				AND A.DATA_HOUR=B.DATA_HOUR
				#AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				AND A.INDOOR=B.INDOOR
				AND A.MOVING=B.MOVING
				AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');	
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_def A, 
				    ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_def_',WORKER_ID,' B
				SET 	A.UL_THRU_HIGH_CALL_CNT=B.UL_THRU_HIGH_CALL_CNT
					,A.UL_THRU_HIGH=(B.UL_THROUGHPUT_AVG_SUM/B.UL_THRU_HIGH_CALL_CNT)
				WHERE   A.DATA_DATE=B.DATA_DATE
				AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				#AND A.INDOOR=B.INDOOR
				#AND A.MOVING=B.MOVING
				#AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				#AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');	
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_t_def A, 
				    ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_t_def_',WORKER_ID,' B
				SET 	A.UL_THRU_HIGH_CALL_CNT=B.UL_THRU_HIGH_CALL_CNT
					,A.UL_THRU_HIGH=(B.UL_THROUGHPUT_AVG_SUM/B.UL_THRU_HIGH_CALL_CNT)
				WHERE   A.DATA_DATE=B.DATA_DATE
				AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				#AND A.CELL_ID=B.CELL_ID
				#AND A.INDOOR=B.INDOOR
				#AND A.MOVING=B.MOVING
				#AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				#AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');	
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_c_def A, 
				    ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_c_def_',WORKER_ID,' B
				SET 	A.UL_THRU_HIGH_CALL_CNT=B.UL_THRU_HIGH_CALL_CNT
					,A.UL_THRU_HIGH=(B.UL_THROUGHPUT_AVG_SUM/B.UL_THRU_HIGH_CALL_CNT)
				WHERE   A.DATA_DATE=B.DATA_DATE
				AND A.DATA_HOUR=B.DATA_HOUR
				#AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				#AND A.INDOOR=B.INDOOR
				#AND A.MOVING=B.MOVING
				#AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				#AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');	
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_dy A, 
				    ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_',WORKER_ID,' B
				SET 	A.UL_THRU_HIGH_CALL_CNT=(IFNULL(A.UL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.UL_THRU_HIGH_CALL_CNT,0))
					,A.UL_THRU_HIGH=((IFNULL(A.UL_THRU_HIGH,0) * IFNULL(A.UL_THRU_HIGH_CALL_CNT,0)) + (IFNULL(B.UL_THROUGHPUT_AVG_SUM,0)))
							/(IFNULL(A.UL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.UL_THRU_HIGH_CALL_CNT,0))
				WHERE   A.DATA_DATE=B.DATA_DATE
				#AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				AND A.INDOOR=B.INDOOR
				AND A.MOVING=B.MOVING
				AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				#AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');	
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_dy_t A, 
				    ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_t_',WORKER_ID,' B
				SET 	A.UL_THRU_HIGH_CALL_CNT=(IFNULL(A.UL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.UL_THRU_HIGH_CALL_CNT,0))
					,A.UL_THRU_HIGH=((IFNULL(A.UL_THRU_HIGH,0) * IFNULL(A.UL_THRU_HIGH_CALL_CNT,0)) + (IFNULL(B.UL_THROUGHPUT_AVG_SUM,0)))
							/(IFNULL(A.UL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.UL_THRU_HIGH_CALL_CNT,0))
				WHERE   A.DATA_DATE=B.DATA_DATE
				#AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				#AND A.CELL_ID=B.CELL_ID
				AND A.INDOOR=B.INDOOR
				AND A.MOVING=B.MOVING
				AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				#AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');	
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_dy_c A, 
				    ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_c_',WORKER_ID,' B
				SET 	A.UL_THRU_HIGH_CALL_CNT=(IFNULL(A.UL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.UL_THRU_HIGH_CALL_CNT,0))
					,A.UL_THRU_HIGH=((IFNULL(A.UL_THRU_HIGH,0) * IFNULL(A.UL_THRU_HIGH_CALL_CNT,0)) + (IFNULL(B.UL_THROUGHPUT_AVG_SUM,0)))
							/(IFNULL(A.UL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.UL_THRU_HIGH_CALL_CNT,0))
				WHERE   A.DATA_DATE=B.DATA_DATE
				#AND A.DATA_HOUR=B.DATA_HOUR
				#AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				AND A.INDOOR=B.INDOOR
				AND A.MOVING=B.MOVING
				AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				#AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');	
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_dy_def A, 
				    ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_def_',WORKER_ID,' B
				SET 	A.UL_THRU_HIGH_CALL_CNT=(IFNULL(A.UL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.UL_THRU_HIGH_CALL_CNT,0))
					,A.UL_THRU_HIGH=((IFNULL(A.UL_THRU_HIGH,0) * IFNULL(A.UL_THRU_HIGH_CALL_CNT,0)) + (IFNULL(B.UL_THROUGHPUT_AVG_SUM,0)))
							/(IFNULL(A.UL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.UL_THRU_HIGH_CALL_CNT,0))
				WHERE   A.DATA_DATE=B.DATA_DATE
				#AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				#AND A.INDOOR=B.INDOOR
				#AND A.MOVING=B.MOVING
				#AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				#AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				#AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');	
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_dy_t_def A, 
				    ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_t_def_',WORKER_ID,' B
				SET 	A.UL_THRU_HIGH_CALL_CNT=(IFNULL(A.UL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.UL_THRU_HIGH_CALL_CNT,0))
					,A.UL_THRU_HIGH=((IFNULL(A.UL_THRU_HIGH,0) * IFNULL(A.UL_THRU_HIGH_CALL_CNT,0)) + (IFNULL(B.UL_THROUGHPUT_AVG_SUM,0)))
							/(IFNULL(A.UL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.UL_THRU_HIGH_CALL_CNT,0))
				WHERE   A.DATA_DATE=B.DATA_DATE
				#AND A.DATA_HOUR=B.DATA_HOUR
				AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				#AND A.CELL_ID=B.CELL_ID
				#AND A.INDOOR=B.INDOOR
				#AND A.MOVING=B.MOVING
				#AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				#AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				#AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');	
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	SET @SqlCmd=CONCAT(' UPDATE ',GT_DB,RUN,'.table_tile_start_dy_c_def A, 
				    ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_c_def_',WORKER_ID,' B
				SET 	A.UL_THRU_HIGH_CALL_CNT=(IFNULL(A.UL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.UL_THRU_HIGH_CALL_CNT,0))
					,A.UL_THRU_HIGH=((IFNULL(A.UL_THRU_HIGH,0) * IFNULL(A.UL_THRU_HIGH_CALL_CNT,0)) + (IFNULL(B.UL_THROUGHPUT_AVG_SUM,0)))
							/(IFNULL(A.UL_THRU_HIGH_CALL_CNT,0) + IFNULL(B.UL_THRU_HIGH_CALL_CNT,0))
				WHERE   A.DATA_DATE=B.DATA_DATE
				#AND A.DATA_HOUR=B.DATA_HOUR
				#AND A.TILE_ID=B.TILE_ID
				AND A.RNC_ID=B.RNC_ID
				AND A.CELL_ID=B.CELL_ID
				#AND A.INDOOR=B.INDOOR
				#AND A.MOVING=B.MOVING
				#AND IFNULL(A.CALL_TYPE,65535) =IFNULL(B.CALL_TYPE,65535)
				#AND IFNULL(A.CALL_STATUS,65535)=IFNULL(B.CALL_STATUS,65535)
				#AND A.DATA_HOUR >= ',STARTHOUR,' AND A.DATA_HOUR < ',ENDHOUR,';');	
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR','Insert Data to table_tile_cnt ', NOW());
	
	
	SET @SqlCmd=CONCAT(' INSERT INTO  ',GT_DB,RUN,'.table_call_cnt 
				( DATA_DATE,DATA_HOUR,PU_ID,SERVICETYPE,TOT_CALL_CNT,NOTE)
				SELECT DATA_DATE,DATA_HOUR,RNC_ID,
				CASE WHEN CALL_TYPE=10 THEN ''CS'' 
				     WHEN CALL_TYPE=11 THEN ''CS''
				END AS SERVICETYPE
				,SUM(CALL_CNT) AS TOT_CALL_CNT
				,''',note,'''
				FROM  ',GT_DB,RUN,'.table_tile_start
				WHERE RNC_ID=',RNC_ID,'
				AND DATA_HOUR >= ',STARTHOUR,' AND DATA_HOUR < ',ENDHOUR,'
				GROUP BY  DATA_DATE,DATA_HOUR,RNC_ID
					,CASE WHEN CALL_TYPE=10 THEN ''CS''
					     WHEN CALL_TYPE=11 THEN ''CS''
					END
				HAVING SERVICETYPE IS NOT NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT(' INSERT INTO  ',GT_DB,RUN,'.table_call_cnt 
				( DATA_DATE,DATA_HOUR,PU_ID,SERVICETYPE,TOT_CALL_CNT,NOTE)
				SELECT DATA_DATE,DATA_HOUR,RNC_ID,
				CASE WHEN CALL_TYPE=12 THEN ''PS'' 
				     WHEN CALL_TYPE=13 THEN ''PS''
				     WHEN CALL_TYPE=14 THEN ''PS''
				     WHEN CALL_TYPE=18 THEN ''PS''
				END AS SERVICETYPE
				,SUM(CALL_CNT) AS TOT_CALL_CNT
				,''',note,'''
				FROM  ',GT_DB,RUN,'.table_tile_start
				WHERE RNC_ID=',RNC_ID,'
				AND DATA_HOUR >= ',STARTHOUR,' AND DATA_HOUR < ',ENDHOUR,'
				GROUP BY  DATA_DATE,DATA_HOUR,RNC_ID
					,CASE WHEN CALL_TYPE=12 THEN ''PS''
					     WHEN CALL_TYPE=13 THEN ''PS''
					     WHEN CALL_TYPE=14 THEN ''PS''
					     WHEN CALL_TYPE=18 THEN ''PS''
					END
				HAVING SERVICETYPE IS NOT NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT(' INSERT INTO  ',GT_DB,RUN,'.table_call_cnt 
				( DATA_DATE,DATA_HOUR,PU_ID,SERVICETYPE,TOT_CALL_CNT,NOTE)
				SELECT DATA_DATE,DATA_HOUR,RNC_ID,
				CASE WHEN CALL_TYPE=12 THEN ''PT'' 
				     WHEN CALL_TYPE=13 THEN ''PT'' 
				     WHEN CALL_TYPE=14 THEN ''PT'' 
				     WHEN CALL_TYPE=18 THEN ''PT'' 
				END AS SERVICETYPE
				,SUM(DL_TRAFFIC+UL_TRAFFIC) AS TRAFFIC
				,''',note,'''
				FROM  ',GT_DB,RUN,'.table_tile_start
				WHERE RNC_ID=',RNC_ID,'
				AND DATA_HOUR >= ',STARTHOUR,' AND DATA_HOUR < ',ENDHOUR,'
				GROUP BY  DATA_DATE,DATA_HOUR,RNC_ID
					,CASE WHEN CALL_TYPE=12 THEN ''PT'' 
					     WHEN CALL_TYPE=13 THEN ''PT''
					     WHEN CALL_TYPE=14 THEN ''PT''
					     WHEN CALL_TYPE=18 THEN ''PT''
					END
				HAVING SERVICETYPE IS NOT NULL');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;	
	
	SET @SqlCmd=CONCAT(' INSERT INTO  ',GT_DB,RUN,'.table_call_cnt 
				( DATA_DATE,DATA_HOUR,PU_ID,SERVICETYPE,TOT_CALL_CNT,NOTE)
				SELECT DATA_DATE,DATA_HOUR,RNC_ID,''CS_MOU'' AS SERVICETYPE
				,SUM(`ERLANG`)*60*1000 AS MOU
				,''',note,'''
				FROM  ',GT_DB,RUN,'.table_tile_start
				WHERE RNC_ID=',RNC_ID,' AND CALL_TYPE IN (10,11)
				AND DATA_HOUR >= ',STARTHOUR,' AND DATA_HOUR < ',ENDHOUR,'
				GROUP BY  DATA_DATE,DATA_HOUR,RNC_ID');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;	
	
	SET @SqlCmd=CONCAT(' INSERT INTO  ',GT_DB,RUN,'.table_call_cnt 
				( DATA_DATE,DATA_HOUR,PU_ID,SERVICETYPE,TOT_CALL_CNT,NOTE)
				SELECT DATA_DATE,DATA_HOUR,RNC_ID,''SMS'' AS SERVICETYPE
				,SUM(CALL_CNT) AS TOT_CALL_CNT
				,''',note,'''
				FROM  ',GT_DB,RUN,'.table_tile_start
				WHERE RNC_ID=',RNC_ID,' AND CALL_TYPE =16
				AND DATA_HOUR >= ',STARTHOUR,' AND DATA_HOUR < ',ENDHOUR,'
				GROUP BY DATA_DATE,DATA_HOUR,RNC_ID');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE  IF EXISTS ',GT_DB,RUN,'.tmp_table_tile_start_',WORKER_ID,';');
	PREPARE stmt FROM @sqlcmd;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_t_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_c_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_t_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_c_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_def_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_t_def_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_dl_thru_high_dy_c_def_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_t_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_c_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_t_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_c_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_def_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_t_def_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('Drop TEMPORARY table if exists   ',GT_DB,RUN,'.tmp_table_tile_ul_thru_high_dy_c_def_',WORKER_ID,' ');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	CALL gt_gw_Main.SP_Sub_Update_IMSI_CNT(O_GT_DB,KIND,VENDOR_SOURCE,'h');
	
	INSERT INTO gt_gw_main.sp_log VALUES(O_GT_DB,'SP_Sub_Generate_Start_AGR',CONCAT('Done: ',TIMESTAMPDIFF(SECOND,START_TIME,SYSDATE()),' seconds.'), NOW());
	
		
END$$
DELIMITER ;

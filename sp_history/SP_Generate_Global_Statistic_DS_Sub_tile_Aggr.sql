DELIMITER $$
USE `gt_global_statistic`$$
DROP PROCEDURE IF EXISTS `SP_CreateDB_LTE`$$
CREATE DEFINER=`covmo`@`%` PROCEDURE `SP_Generate_Global_Statistic_DS_Sub_tile_Aggr`(IN TECH_MASK TINYINT(2),IN WORKER_ID VARCHAR(10),IN FLAG TINYINT(2),IN exDate VARCHAR(10),IN DS_FLAG TINYINT(2),PENDING_FLAG TINYINT(2),IN TileResolution VARCHAR(10))
BEGIN
	DECLARE START_TIME DATETIME DEFAULT SYSDATE();
	DECLARE STEP_START_TIME DATETIME DEFAULT SYSDATE();
	DECLARE SP_Process VARCHAR(100) DEFAULT NULL;
	DECLARE KPI_ERROR CONDITION FOR SQLSTATE '99999' ;
	DECLARE FIRSTDAY_OF_WEEK TINYINT(4) DEFAULT 6;
	DECLARE v_DATA_DATE VARCHAR(10) DEFAULT NULL;
	DECLARE v_DATA_HOUR TINYINT(2) DEFAULT NULL;
	DECLARE v_PU_ID MEDIUMINT(9) DEFAULT NULL;
	DECLARE v_TECH_MASK TINYINT(2) DEFAULT NULL;
	DECLARE v_i TINYINT(2) DEFAULT 1;
	DECLARE v_R_Max TINYINT(2) DEFAULT 0;
	DECLARE v_group_db_name VARCHAR(100) DEFAULT '';
	
	DECLARE TILE_UMTS_COLUMN_STR VARCHAR(1500) DEFAULT 
		' `RSCP_SUM`,
		  `RSCP_CNT`,
		  `ECNO_SUM`,
		  `ECNO_CNT`,
		  `UMTS_CS_CALL_CNT`,
		  `UMTS_PS_CALL_CNT`,
		  `UMTS_VOICE_DROP_CNT`,
		  `UMTS_PS_DROP_CNT`,
		  `UMTS_CS_CALL_DURATION`,
		  `UMTS_CS_BLOCK_CNT`,
		  `UMTS_PS_BLOCK_CNT`,
		  `UMTS_UL_VOLUME`,
		  `UMTS_DL_VOLUME`,
		  `UMTS_UL_THROUPUT_SUM`,
		  `UMTS_UL_THROUPUT_CNT`,
		  `UMTS_DL_THROUPUT_SUM`,
		  `UMTS_DL_THROUPUT_CNT`,
		  `UMTS_CALL_SETUP_TIME_SUM`,
		  `UMTS_CALL_SETUP_TIME_CNT`,
	
		  `UMTS_CS_CALL_SETUP_TIME_SUM`,
		  `UMTS_CS_CALL_SETUP_TIME_CNT`,
		  `UMTS_PS_CALL_SETUP_TIME_SUM`,
		  `UMTS_PS_CALL_SETUP_TIME_CNT`,
	
		  `UMTS_CS_SETUP_FAILURE_CNT`,
		  `UMTS_PS_SETUP_FAILURE_CNT`,
		  `UMTS_MAX_UL_THROUPUT`,
		  `UMTS_MAX_DL_THROUPUT`,
	
		  `UMTS_IRAT_HO_ATMP`,
		  `UMTS_IRAT_HO_FAIL`';
			
		  
	DECLARE TILE_UMTS_COLUMN_IFNULL_STR VARCHAR(5000) DEFAULT 
		' IFNULL(`RSCP_SUM`,0) AS `RSCP_SUM`,               
		  IFNULL(`RSCP_CNT`,0) AS `RSCP_CNT`,               
		  IFNULL(`ECNO_SUM`,0) AS `ECNO_SUM`,               
		  IFNULL(`ECNO_CNT`,0) AS `ECNO_CNT`,               
		  IFNULL(`UMTS_CS_CALL_CNT`,0) AS `UMTS_CS_CALL_CNT`,         
		  IFNULL(`UMTS_PS_CALL_CNT`,0) AS `UMTS_PS_CALL_CNT`,         
		  IFNULL(`UMTS_VOICE_DROP_CNT`,0) AS `UMTS_VOICE_DROP_CNT`,         
		  IFNULL(`UMTS_PS_DROP_CNT`,0) AS `UMTS_PS_DROP_CNT`,         
		  IFNULL(`UMTS_CS_CALL_DURATION`,0) AS `UMTS_CS_CALL_DURATION`,    
		  IFNULL(`UMTS_CS_BLOCK_CNT`,0) AS `UMTS_CS_BLOCK_CNT`,        
		  IFNULL(`UMTS_PS_BLOCK_CNT`,0) AS `UMTS_PS_BLOCK_CNT`,        
		  IFNULL(`UMTS_UL_VOLUME`,0) AS `UMTS_UL_VOLUME`,           
		  IFNULL(`UMTS_DL_VOLUME`,0) AS `UMTS_DL_VOLUME`,           
		  IFNULL(`UMTS_UL_THROUPUT_SUM`,0) AS `UMTS_UL_THROUPUT_SUM`,     
		  IFNULL(`UMTS_UL_THROUPUT_CNT`,0) AS `UMTS_UL_THROUPUT_CNT`,     
		  IFNULL(`UMTS_DL_THROUPUT_SUM`,0) AS `UMTS_DL_THROUPUT_SUM`,     
		  IFNULL(`UMTS_DL_THROUPUT_CNT`,0) AS `UMTS_DL_THROUPUT_CNT`,     
		  IFNULL(`UMTS_CALL_SETUP_TIME_SUM`,0) AS `UMTS_CALL_SETUP_TIME_SUM`, 
		  IFNULL(`UMTS_CALL_SETUP_TIME_CNT`,0) AS `UMTS_CALL_SETUP_TIME_CNT`, 
	
		  IFNULL(`UMTS_CS_CALL_SETUP_TIME_SUM`,0) AS `UMTS_CS_CALL_SETUP_TIME_SUM`, 
		  IFNULL(`UMTS_CS_CALL_SETUP_TIME_CNT`,0) AS `UMTS_CS_CALL_SETUP_TIME_CNT`, 
		  IFNULL(`UMTS_PS_CALL_SETUP_TIME_SUM`,0) AS `UMTS_PS_CALL_SETUP_TIME_SUM`, 
		  IFNULL(`UMTS_PS_CALL_SETUP_TIME_CNT`,0) AS `UMTS_PS_CALL_SETUP_TIME_CNT`, 
		  IFNULL(`UMTS_CS_SETUP_FAILURE_CNT`,0) AS `UMTS_CS_SETUP_FAILURE_CNT`,
		  IFNULL(`UMTS_PS_SETUP_FAILURE_CNT`,0) AS `UMTS_PS_SETUP_FAILURE_CNT`,
		  IFNULL(`UMTS_MAX_UL_THROUPUT`,0) AS `UMTS_MAX_UL_THROUPUT`,
		  IFNULL(`UMTS_MAX_DL_THROUPUT`,0) AS `UMTS_MAX_DL_THROUPUT`,
	
		  IFNULL(`UMTS_IRAT_HO_ATMP`,0) AS `UMTS_IRAT_HO_ATMP`,
		  IFNULL(`UMTS_IRAT_HO_FAIL`,0) AS `UMTS_IRAT_HO_FAIL`';
		
	DECLARE TILE_UMTS_COLUMN_SUM_STR VARCHAR(5000) DEFAULT 
		' SUM(IFNULL(`RSCP_SUM`,0)) AS `RSCP_SUM`,
		  SUM(IFNULL(`RSCP_CNT`,0)) AS `RSCP_CNT`,
		  SUM(IFNULL(`ECNO_SUM`,0)) AS `ECNO_SUM`,
		  SUM(IFNULL(`ECNO_CNT`,0)) AS `ECNO_CNT`,
		  SUM(IFNULL(`UMTS_CS_CALL_CNT`,0)) AS `UMTS_CS_CALL_CNT`,
		  SUM(IFNULL(`UMTS_PS_CALL_CNT`,0)) AS `UMTS_PS_CALL_CNT`,
		  SUM(IFNULL(`UMTS_VOICE_DROP_CNT`,0)) AS `UMTS_VOICE_DROP_CNT`,
		  SUM(IFNULL(`UMTS_PS_DROP_CNT`,0)) AS `UMTS_PS_DROP_CNT`,
		  SUM(IFNULL(`UMTS_CS_CALL_DURATION`,0)) AS `UMTS_CS_CALL_DURATION`,    
		  SUM(IFNULL(`UMTS_CS_BLOCK_CNT`,0)) AS `UMTS_CS_BLOCK_CNT`,
		  SUM(IFNULL(`UMTS_PS_BLOCK_CNT`,0)) AS `UMTS_PS_BLOCK_CNT`,
		  SUM(IFNULL(`UMTS_UL_VOLUME`,0)) AS `UMTS_UL_VOLUME`,
		  SUM(IFNULL(`UMTS_DL_VOLUME`,0)) AS `UMTS_DL_VOLUME`,
		  SUM(IFNULL(`UMTS_UL_THROUPUT_SUM`,0)) AS `UMTS_UL_THROUPUT_SUM`,
		  SUM(IFNULL(`UMTS_UL_THROUPUT_CNT`,0)) AS `UMTS_UL_THROUPUT_CNT`,
		  SUM(IFNULL(`UMTS_DL_THROUPUT_SUM`,0)) AS `UMTS_DL_THROUPUT_SUM`,
		  SUM(IFNULL(`UMTS_DL_THROUPUT_CNT`,0)) AS `UMTS_DL_THROUPUT_CNT`,
		  SUM(IFNULL(`UMTS_CALL_SETUP_TIME_SUM`,0)) AS `UMTS_CALL_SETUP_TIME_SUM`,
		  SUM(IFNULL(`UMTS_CALL_SETUP_TIME_CNT`,0)) AS `UMTS_CALL_SETUP_TIME_CNT`,
	
		  SUM(IFNULL(`UMTS_CS_CALL_SETUP_TIME_SUM`,0)) AS `UMTS_CS_CALL_SETUP_TIME_SUM`,
		  SUM(IFNULL(`UMTS_CS_CALL_SETUP_TIME_CNT`,0)) AS `UMTS_CS_CALL_SETUP_TIME_CNT`,
		  SUM(IFNULL(`UMTS_PS_CALL_SETUP_TIME_SUM`,0)) AS `UMTS_PS_CALL_SETUP_TIME_SUM`,
		  SUM(IFNULL(`UMTS_PS_CALL_SETUP_TIME_CNT`,0)) AS `UMTS_PS_CALL_SETUP_TIME_CNT`,
	
	
		  SUM(IFNULL(`UMTS_CS_SETUP_FAILURE_CNT`,0)) AS `UMTS_CS_SETUP_FAILURE_CNT`,
		  SUM(IFNULL(`UMTS_PS_SETUP_FAILURE_CNT`,0)) AS `UMTS_PS_SETUP_FAILURE_CNT`,
		  MAX(IFNULL(`UMTS_MAX_UL_THROUPUT`,0)) AS `UMTS_MAX_UL_THROUPUT`,
		  MAX(IFNULL(`UMTS_MAX_DL_THROUPUT`,0)) AS `UMTS_MAX_DL_THROUPUT`,
	
		  MAX(IFNULL(`UMTS_IRAT_HO_ATMP`,0)) AS `UMTS_IRAT_HO_ATMP`,
		  MAX(IFNULL(`UMTS_IRAT_HO_FAIL`,0)) AS `UMTS_IRAT_HO_FAIL`';
	
	
	DECLARE TILE_LTE_COLUMN_STR VARCHAR(2000) DEFAULT 
		' `RSRP_SUM`,
		  `RSRP_CNT`,
		  `RSRQ_SUM`,
		  `RSRQ_CNT`,
		  `LTE_CALL_CNT`,
		  `LTE_DROP_CNT`,
		  `LTE_BLOCK_CNT`,
		  `LTE_UL_VOLUME`,
		  `LTE_DL_VOLUME`,
		  `LTE_UL_THROUPUT_SUM`,
		  `LTE_UL_THROUPUT_CNT`,
		  `LTE_DL_THROUPUT_SUM`,
		  `LTE_DL_THROUPUT_CNT`,
		  `LATENCY_SUM`,
		  `LATENCY_CNT`,
		  `LTE_CALL_SETUP_TIME_SUM`,
		  `LTE_CALL_SETUP_TIME_CNT`,
		  `LTE_SETUP_FAILURE_CNT`,
		  `SRVCC_ATTEMPT_CNT`,
		  `SRVCC_FAILURE_CNT`,
		  `S1_HO_ATTEMPT`,
		  `S1_HO_FAILURE`,
		  `X2_HO_ATTEMPT`,
		  `X2_HO_FAILURE`,
		  `LTE_MAX_UL_THROUPUT`,
		  `LTE_MAX_DL_THROUPUT`,
	
		  `LTE_IRAT_TO_UMTS_ATMP`,
		  `LTE_IRAT_TO_GERAN_ATMP`,
		  `LTE_IRAT_TO_CDMA_ATMP`,
		  `LTE_IRAT_TO_UMTS_FAIL`,
		  `LTE_IRAT_TO_GERAN_FAIL`,
		  `LTE_IRAT_TO_CDMA_FAIL`';
		  
	DECLARE TILE_LTE_COLUMN_IFNULL_STR VARCHAR(2000) DEFAULT 
		' IFNULL(`RSRP_SUM`,0) AS `RSRP_SUM`,               
		  IFNULL(`RSRP_CNT`,0) AS `RSRP_CNT`,               
		  IFNULL(`RSRQ_SUM`,0) AS `RSRQ_SUM`,               
		  IFNULL(`RSRQ_CNT`,0) AS `RSRQ_CNT`,               
		  IFNULL(`LTE_CALL_CNT`,0) AS `LTE_CALL_CNT`,            
		  IFNULL(`LTE_DROP_CNT`,0) AS `LTE_DROP_CNT`,            
		  IFNULL(`LTE_BLOCK_CNT`,0) AS `LTE_BLOCK_CNT`,           
		  IFNULL(`LTE_UL_VOLUME`,0) AS `LTE_UL_VOLUME`,       
		  IFNULL(`LTE_DL_VOLUME`,0) AS `LTE_DL_VOLUME`,       
		  IFNULL(`LTE_UL_THROUPUT_SUM`,0) AS `LTE_UL_THROUPUT_SUM`,     
		  IFNULL(`LTE_UL_THROUPUT_CNT`,0) AS `LTE_UL_THROUPUT_CNT`,     
		  IFNULL(`LTE_DL_THROUPUT_SUM`,0) AS `LTE_DL_THROUPUT_SUM`,     
		  IFNULL(`LTE_DL_THROUPUT_CNT`,0) AS `LTE_DL_THROUPUT_CNT`,     
		  IFNULL(`LATENCY_SUM`,0) AS `LATENCY_SUM`,            
		  IFNULL(`LATENCY_CNT`,0) AS `LATENCY_CNT`,            
		  IFNULL(`LTE_CALL_SETUP_TIME_SUM`,0) AS `LTE_CALL_SETUP_TIME_SUM`, 
		  IFNULL(`LTE_CALL_SETUP_TIME_CNT`,0) AS `LTE_CALL_SETUP_TIME_CNT`, 
		  IFNULL(`LTE_SETUP_FAILURE_CNT`,0) AS `LTE_SETUP_FAILURE_CNT`,   
		  IFNULL(`SRVCC_ATTEMPT_CNT`,0) AS `SRVCC_ATTEMPT_CNT`,      
		  IFNULL(`SRVCC_FAILURE_CNT`,0) AS `SRVCC_FAILURE_CNT`,      
		  IFNULL(`S1_HO_ATTEMPT`,0) AS `S1_HO_ATTEMPT`,          
		  IFNULL(`S1_HO_FAILURE`,0) AS `S1_HO_FAILURE`,          
		  IFNULL(`X2_HO_ATTEMPT`,0) AS `X2_HO_ATTEMPT`,          
		  IFNULL(`X2_HO_FAILURE`,0) AS `X2_HO_FAILURE`,
		  IFNULL(`LTE_MAX_UL_THROUPUT`,0) AS `LTE_MAX_UL_THROUPUT`,
		  IFNULL(`LTE_MAX_DL_THROUPUT`,0) AS `LTE_MAX_DL_THROUPUT`,
	
		  IFNULL(`LTE_IRAT_TO_UMTS_ATMP`,0) AS `LTE_IRAT_TO_UMTS_ATMP`,
		  IFNULL(`LTE_IRAT_TO_GERAN_ATMP`,0) AS `LTE_IRAT_TO_GERAN_ATMP`,
		  IFNULL(`LTE_IRAT_TO_CDMA_ATMP`,0) AS `LTE_IRAT_TO_CDMA_ATMP`,
		  IFNULL(`LTE_IRAT_TO_UMTS_FAIL`,0) AS `LTE_IRAT_TO_UMTS_FAIL`,
		  IFNULL(`LTE_IRAT_TO_GERAN_FAIL`,0) AS `LTE_IRAT_TO_GERAN_FAIL`,
		  IFNULL(`LTE_IRAT_TO_CDMA_FAIL`,0) AS `LTE_IRAT_TO_CDMA_FAIL`';
		
	DECLARE TILE_LTE_COLUMN_SUM_STR VARCHAR(2500) DEFAULT 
		'SUM(IFNULL(`RSRP_SUM`,0)) AS `RSRP_SUM`,               
		 SUM(IFNULL(`RSRP_CNT`,0)) AS `RSRP_CNT`,               
		 SUM(IFNULL(`RSRQ_SUM`,0)) AS `RSRQ_SUM`,               
		 SUM(IFNULL(`RSRQ_CNT`,0)) AS `RSRQ_CNT`,               
		 SUM(IFNULL(`LTE_CALL_CNT`,0)) AS `LTE_CALL_CNT`,            
		 SUM(IFNULL(`LTE_DROP_CNT`,0)) AS `LTE_DROP_CNT`,            
		 SUM(IFNULL(`LTE_BLOCK_CNT`,0)) AS `LTE_BLOCK_CNT`,           
		 SUM(IFNULL(`LTE_UL_VOLUME`,0)) AS `LTE_UL_VOLUME`,       
		 SUM(IFNULL(`LTE_DL_VOLUME`,0)) AS `LTE_DL_VOLUME`,       
		 SUM(IFNULL(`LTE_UL_THROUPUT_SUM`,0)) AS `LTE_UL_THROUPUT_SUM`,     
		 SUM(IFNULL(`LTE_UL_THROUPUT_CNT`,0)) AS `LTE_UL_THROUPUT_CNT`,     
		 SUM(IFNULL(`LTE_DL_THROUPUT_SUM`,0)) AS `LTE_DL_THROUPUT_SUM`,     
		 SUM(IFNULL(`LTE_DL_THROUPUT_CNT`,0)) AS `LTE_DL_THROUPUT_CNT`,     
		 SUM(IFNULL(`LATENCY_SUM`,0)) AS `LATENCY_SUM`,            
		 SUM(IFNULL(`LATENCY_CNT`,0)) AS `LATENCY_CNT`,
		 SUM(IFNULL(`LTE_CALL_SETUP_TIME_SUM`,0)) AS `LTE_CALL_SETUP_TIME_SUM`,
		 SUM(IFNULL(`LTE_CALL_SETUP_TIME_CNT`,0)) AS `LTE_CALL_SETUP_TIME_CNT`,
		 SUM(IFNULL(`LTE_SETUP_FAILURE_CNT`,0)) AS `LTE_SETUP_FAILURE_CNT`,
		 SUM(IFNULL(`SRVCC_ATTEMPT_CNT`,0)) AS `SRVCC_ATTEMPT_CNT`,
		 SUM(IFNULL(`SRVCC_FAILURE_CNT`,0)) AS `SRVCC_FAILURE_CNT`,
		 SUM(IFNULL(`S1_HO_ATTEMPT`,0)) AS `S1_HO_ATTEMPT`,
		 SUM(IFNULL(`S1_HO_FAILURE`,0)) AS `S1_HO_FAILURE`,
		 SUM(IFNULL(`X2_HO_ATTEMPT`,0)) AS `X2_HO_ATTEMPT`,
		 SUM(IFNULL(`X2_HO_FAILURE`,0)) AS `X2_HO_FAILURE`,
		 MAX(IFNULL(`LTE_MAX_UL_THROUPUT`,0)) AS `LTE_MAX_UL_THROUPUT`,
		 MAX(IFNULL(`LTE_MAX_DL_THROUPUT`,0)) AS `LTE_MAX_DL_THROUPUT`,
	
		 SUM(IFNULL(`LTE_IRAT_TO_UMTS_ATMP`,0)) AS `LTE_IRAT_TO_UMTS_ATMP`,
		 SUM(IFNULL(`LTE_IRAT_TO_GERAN_ATMP`,0)) AS `LTE_IRAT_TO_GERAN_ATMP`,
		 SUM(IFNULL(`LTE_IRAT_TO_CDMA_ATMP`,0)) AS `LTE_IRAT_TO_CDMA_ATMP`,
		 SUM(IFNULL(`LTE_IRAT_TO_UMTS_FAIL`,0)) AS `LTE_IRAT_TO_UMTS_FAIL`,
		 SUM(IFNULL(`LTE_IRAT_TO_GERAN_FAIL`,0)) AS `LTE_IRAT_TO_GERAN_FAIL`,
		 SUM(IFNULL(`LTE_IRAT_TO_CDMA_FAIL`,0)) AS `LTE_IRAT_TO_CDMA_FAIL`';		
		 
	DECLARE TILE_GSM_COLUMN_STR VARCHAR(1500) DEFAULT 
		'RXLEV_SUM, 
		RXLEV_CNT,
		RXQUAL_SUM,
		RXQUAL_CNT,
		GSM_CS_CALL_CNT,
		GSM_PS_CALL_CNT,
		GSM_VOICE_DROP_CNT,
		GSM_GPRS_DROP_CNT,
		GSM_SMS_DROP_CNT,
		GSM_CS_BLOCK_CNT,
		GSM_PS_BLOCK_CNT,
		GSM_CS_CALL_DURATION,
		GSM_CALL_SETUP_TIME_SUM,
		GSM_CALL_SETUP_TIME_CNT,
		GSM_CS_CALL_SETUP_TIME_SUM,
		GSM_CS_CALL_SETUP_TIME_CNT,
		GSM_PS_CALL_SETUP_TIME_SUM,
		GSM_PS_CALL_SETUP_TIME_CNT,
		GSM_CS_SETUP_FAILURE_CNT,
		GSM_PS_SETUP_FAILURE_CNT';
		
	DECLARE TILE_GSM_COLUMN_IFNULL_STR VARCHAR(2000) DEFAULT 
		'IFNULL(RXLEV_SUM,0) AS RXLEV_SUM,
		IFNULL(RXLEV_CNT,0) AS RXLEV_CNT,
		IFNULL(RXQUAL_SUM,0) AS RXQUAL_SUM,
		IFNULL(RXQUAL_CNT,0) AS RXQUAL_CNT,
		IFNULL(GSM_CS_CALL_CNT,0) AS GSM_CS_CALL_CNT,
		IFNULL(GSM_PS_CALL_CNT,0) AS GSM_PS_CALL_CNT,
		IFNULL(GSM_SMS_DROP_CNT,0) AS GSM_SMS_DROP_CNT,
		IFNULL(GSM_VOICE_DROP_CNT,0) AS GSM_VOICE_DROP_CNT,
		IFNULL(GSM_GPRS_DROP_CNT,0) AS GSM_GPRS_DROP_CNT,
		IFNULL(GSM_CS_BLOCK_CNT,0) AS GSM_CS_BLOCK_CNT,
		IFNULL(GSM_PS_BLOCK_CNT,0) AS GSM_PS_BLOCK_CNT,
		IFNULL(GSM_CS_CALL_DURATION,0) AS GSM_CS_CALL_DURATION,
		IFNULL(GSM_CALL_SETUP_TIME_SUM,0) AS GSM_CALL_SETUP_TIME_SUM,
		IFNULL(GSM_CALL_SETUP_TIME_CNT,0) AS GSM_CALL_SETUP_TIME_CNT,
	
		IFNULL(GSM_CS_CALL_SETUP_TIME_SUM,0) AS GSM_CS_CALL_SETUP_TIME_SUM,
		IFNULL(GSM_CS_CALL_SETUP_TIME_CNT,0) AS GSM_CS_CALL_SETUP_TIME_CNT,
		IFNULL(GSM_PS_CALL_SETUP_TIME_SUM,0) AS GSM_PS_CALL_SETUP_TIME_SUM,
		IFNULL(GSM_PS_CALL_SETUP_TIME_CNT,0) AS GSM_PS_CALL_SETUP_TIME_CNT,
	
		IFNULL(GSM_CS_SETUP_FAILURE_CNT,0) AS GSM_CS_SETUP_FAILURE_CNT,
		IFNULL(GSM_PS_SETUP_FAILURE_CNT,0) AS GSM_PS_SETUP_FAILURE_CNT';
		
	DECLARE TILE_GSM_COLUMN_SUM_STR VARCHAR(2000) DEFAULT 
		'SUM(IFNULL(RXLEV_SUM,0)) AS RXLEV_SUM,
		SUM(IFNULL(RXLEV_CNT,0)) AS RXLEV_CNT,
		SUM(IFNULL(RXQUAL_SUM,0)) AS RXQUAL_SUM,
		SUM(IFNULL(RXQUAL_CNT,0)) AS RXQUAL_CNT,
		SUM(IFNULL(GSM_CS_CALL_CNT,0)) AS GSM_CS_CALL_CNT,
		SUM(IFNULL(GSM_PS_CALL_CNT,0)) AS GSM_PS_CALL_CNT,
		SUM(IFNULL(GSM_VOICE_DROP_CNT,0)) AS GSM_VOICE_DROP_CNT,
		SUM(IFNULL(GSM_GPRS_DROP_CNT,0)) AS GSM_GPRS_DROP_CNT,
		SUM(IFNULL(GSM_SMS_DROP_CNT,0)) AS GSM_SMS_DROP_CNT,
		SUM(IFNULL(GSM_CS_BLOCK_CNT,0)) AS GSM_CS_BLOCK_CNT,
		SUM(IFNULL(GSM_PS_BLOCK_CNT,0)) AS GSM_PS_BLOCK_CNT,
		SUM(IFNULL(GSM_CS_CALL_DURATION,0)) AS GSM_CS_CALL_DURATION,
		SUM(IFNULL(GSM_CALL_SETUP_TIME_SUM,0)) AS GSM_CALL_SETUP_TIME_SUM,
		SUM(IFNULL(GSM_CALL_SETUP_TIME_CNT,0)) AS GSM_CALL_SETUP_TIME_CNT,
	
		SUM(IFNULL(GSM_CS_CALL_SETUP_TIME_SUM,0)) AS GSM_CS_CALL_SETUP_TIME_SUM,
		SUM(IFNULL(GSM_CS_CALL_SETUP_TIME_SUM,0)) AS GSM_CS_CALL_SETUP_TIME_SUM,
		SUM(IFNULL(GSM_PS_CALL_SETUP_TIME_SUM,0)) AS GSM_PS_CALL_SETUP_TIME_SUM,
		SUM(IFNULL(GSM_PS_CALL_SETUP_TIME_SUM,0)) AS GSM_PS_CALL_SETUP_TIME_SUM,
	
		SUM(IFNULL(GSM_CS_SETUP_FAILURE_CNT,0)) AS GSM_CS_SETUP_FAILURE_CNT,
		SUM(IFNULL(GSM_PS_SETUP_FAILURE_CNT,0)) AS GSM_PS_SETUP_FAILURE_CNT';
	
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
	BEGIN
		SET @SqlCmd=CONCAT('CREATE TABLE IF NOT EXISTS `gt_global_statistic`.`nw_error_log`
				(
				  `TABLE_NAME` VARCHAR(50) NOT NULL,
				  `SP_NAME` VARCHAR(50) DEFAULT NULL,
				  `INSERT_CMD` VARCHAR(100) DEFAULT NULL,
				  `INSERT_TIME` DATETIME DEFAULT NULL
				) ENGINE=MYISAM;');
		PREPARE Stmt FROM @SqlCmd;
		EXECUTE Stmt;
		DEALLOCATE PREPARE Stmt;
	
		INSERT INTO `gt_global_statistic`.`nw_error_log`(`TABLE_NAME`,`SP_NAME`,`INSERT_CMD`,`INSERT_TIME`)
		VALUES (@SOURCE_TABLE_NAME,
			'SP_Generate_Global_Statistic_DS_Sub_tile_Aggr',
			CONCAT('Step ',@ERROR_FLAG,' error'),
			NOW());
	
		SET @SqlCmd=CONCAT('REPAIR TABLE ',@REPAIR_TABLE_NAME,';');				
		PREPARE Stmt FROM @SqlCmd;
		EXECUTE Stmt;
		DEALLOCATE PREPARE Stmt;
	END;	
			
  	CALL gt_gw_main.`SP_Sub_Set_Session_Param_LTE`('');
  	
	SET @TILE_ID_LVL1 = CONCAT('TILE_ID_',gt_covmo_csv_get(TileResolution,1));
	SET @TILE_ID_LVL2 = CONCAT('TILE_ID_',gt_covmo_csv_get(TileResolution,2));
	
	SET @ZOOM_LEVEL3 = gt_covmo_csv_get(TileResolution,3);
	SET @ZOOM_LEVEL2 = gt_covmo_csv_get(TileResolution,2);
	SET @ZOOM_LEVEL1 = gt_covmo_csv_get(TileResolution,1);
	
	SET @global_db='gt_global_statistic';
	INSERT INTO gt_gw_main.SP_LOG VALUES('gt_global_statistic','SP_Generate_Global_Statistic_DS_Sub_tile_Aggr',CONCAT(TECH_MASK,',',WORKER_ID,' START'), START_TIME);
	SET STEP_START_TIME := SYSDATE();
	SET @SqlCmd=CONCAT('SELECT GROUP_CONCAT(DISTINCT CONCAT(`DATA_DATE`,'','',`DATA_HOUR`,'','',`TECH_MASK`) SEPARATOR ''|'' ) INTO @PU_STR_TECH
				FROM gt_global_statistic.table_running_task_ds 
				WHERE TECH_MASK=',TECH_MASK,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	INSERT INTO gt_gw_main.SP_LOG VALUES('gt_global_statistic','SP_Generate_Global_Statistic_DS_Sub_tile_Aggr',@SqlCmd, START_TIME);		
		
	SET @SqlCmd=CONCAT('SELECT GROUP_CONCAT(DISTINCT `group_id` ORDER BY `group_id` SEPARATOR ''|'' ) INTO @REG_GROUP FROM ',@global_db,'.`usr_polygon_reg_3`;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;		
		
	SET @v_reg_m=1;
	SET @v_reg_Max=gt_covmo_csv_count(@REG_GROUP,'|');
	WHILE @v_reg_m <= @v_reg_Max DO
	BEGIN
		SET v_group_db_name=CONCAT('gt_global_statistic_g',gt_strtok(@REG_GROUP, @v_reg_m, '|'));
			
		SET v_i=1;
		SET v_R_Max=gt_covmo_csv_count(@PU_STR_TECH,'|');
		INSERT INTO gt_gw_main.SP_LOG VALUES('gt_global_statistic','SP_Generate_Global_Statistic_DS_Sub_tile_Aggr',CONCAT(TECH_MASK,',',WORKER_ID,',',v_R_Max), START_TIME);		
		WHILE v_i <= v_R_Max DO
		BEGIN	
			
			SET v_DATA_DATE:=gt_covmo_csv_get(gt_strtok(@PU_STR_TECH, v_i, '|'),1);
			SET v_DATA_HOUR:=gt_covmo_csv_get(gt_strtok(@PU_STR_TECH, v_i, '|'),2);
			SET v_TECH_MASK:=gt_covmo_csv_get(gt_strtok(@PU_STR_TECH, v_i, '|'),3);
			SELECT `DAY_OF_WEEK`(v_DATA_DATE) INTO @DAY_OF_WEEK;
			SET @FIRST_DAY=gt_strtok(@DAY_OF_WEEK, 1, '|');
			SET @END_DAY=gt_strtok(@DAY_OF_WEEK, 2, '|');
			SET @DATE_WK=CONCAT(DATE_FORMAT(@FIRST_DAY,'%Y%m%d'),'_',DATE_FORMAT(@END_DAY,'%Y%m%d'));
			SET @DATE_MN=DATE_FORMAT(v_DATA_DATE,'%Y%m');
			SET @DATE_DY=DATE_FORMAT(v_DATA_DATE,'%Y%m%d');
			SET @EX_DATE=CONCAT(DATE_FORMAT(v_DATA_DATE,'%Y%m%d_'),v_DATA_HOUR,'_',WORKER_ID);
		
			SET @tmp_ds_tile_umts_hr=CONCAT(@global_db,'.tmp_ds_tile_umts_',@EX_DATE);
			SET @tmp_ds_tile_lte_hr=CONCAT(@global_db,'.tmp_ds_tile_lte_',@EX_DATE);
			SET @tmp_ds_tile_gsm_hr=CONCAT(@global_db,'.tmp_ds_tile_gsm_',@EX_DATE);
			
			SET @tmp_ds_tile_umts_agg=CONCAT(v_group_db_name,'.tmp_ds_tile_umts_agg_',@EX_DATE);
			SET @tmp_ds_tile_lte_agg=CONCAT(v_group_db_name,'.tmp_ds_tile_lte_agg_',@EX_DATE);
			SET @tmp_ds_tile_gsm_agg=CONCAT(v_group_db_name,'.tmp_ds_tile_gsm_agg_',@EX_DATE);
			
			IF v_TECH_MASK=2 THEN 
			
				SET @SqlCmd=CONCAT('DROP TABLE IF EXISTS ',@tmp_ds_tile_umts_agg,';');
				PREPARE Stmt FROM @SqlCmd;
				EXECUTE Stmt;
				DEALLOCATE PREPARE Stmt;
				
				SET @SqlCmd=CONCAT('CREATE TABLE ',@tmp_ds_tile_umts_agg,' LIKE ',v_group_db_name,'.table_tile_',@ZOOM_LEVEL3,'_ds_hr_',@DATE_DY,';');
				PREPARE Stmt FROM @SqlCmd;
				EXECUTE Stmt;
				DEALLOCATE PREPARE Stmt;
	
				SET @SOURCE_TABLE_NAME=@tmp_ds_tile_umts_agg;
				SET @REPAIR_TABLE_NAME=@tmp_ds_tile_umts_agg;
				SET @ERROR_FLAG='tmp_ds_tile_umts_agg';
			
				SET @SqlCmd=CONCAT('INSERT INTO ',@tmp_ds_tile_umts_agg,' 
							(`TILE_ID`,
							`DATA_DATE`,
							`DATA_HOUR`,
							',TILE_UMTS_COLUMN_STR,',
							`',@TILE_ID_LVL2,'`,
							`',@TILE_ID_LVL1,'`)
						SELECT
							`TILE_ID`,
							`DATA_DATE`,
							`DATA_HOUR`,
							',TILE_UMTS_COLUMN_SUM_STR,',
							',@TILE_ID_LVL2,' AS ',@TILE_ID_LVL2,',
							',@TILE_ID_LVL1,' AS ',@TILE_ID_LVL1,'
						FROM ',@tmp_ds_tile_umts_hr,' 
						GROUP BY `TILE_ID`,`DATA_DATE`,`DATA_HOUR`
						ORDER BY NULL;');
				PREPARE Stmt FROM @SqlCmd;
				EXECUTE Stmt;
				DEALLOCATE PREPARE Stmt;
				
				CALL gt_global_statistic.SP_Generate_Global_Statistic_Sub_Tile_Reg_Map(@tmp_ds_tile_umts_agg,WORKER_ID,0,gt_strtok(@REG_GROUP, @v_reg_m, '|'));
				
				INSERT INTO gt_gw_main.SP_LOG VALUES('gt_global_statistic','SP_Generate_Global_Statistic_DS_Sub_tile_Aggr',CONCAT('UMTS DS ,',WORKER_ID,' cost:',TIMESTAMPDIFF(SECOND,STEP_START_TIME,SYSDATE()),' sec.'), NOW());
			END IF;
			IF v_TECH_MASK=1 THEN 
								
				SET @SqlCmd=CONCAT('DROP TABLE IF EXISTS ',@tmp_ds_tile_gsm_agg,';');
				PREPARE Stmt FROM @SqlCmd;
				EXECUTE Stmt;
				DEALLOCATE PREPARE Stmt;
				
				SET @SqlCmd=CONCAT('CREATE TABLE ',@tmp_ds_tile_gsm_agg,' LIKE ',v_group_db_name,'.table_tile_',@ZOOM_LEVEL3,'_ds_hr_',@DATE_DY,';');
				PREPARE Stmt FROM @SqlCmd;
				EXECUTE Stmt;
				DEALLOCATE PREPARE Stmt;
	
				SET @SOURCE_TABLE_NAME=@tmp_ds_tile_gsm_agg;
				SET @REPAIR_TABLE_NAME=@tmp_ds_tile_gsm_agg;
				SET @ERROR_FLAG='tmp_ds_tile_gsm_agg';
				
				SET @SqlCmd=CONCAT('INSERT INTO ',@tmp_ds_tile_gsm_agg,' 
							(`TILE_ID`,
							`DATA_DATE`,
							`DATA_HOUR`,
							',TILE_GSM_COLUMN_STR,',
							`',@TILE_ID_LVL2,'`,
							`',@TILE_ID_LVL1,'`)
						SELECT
							`TILE_ID`,
							`DATA_DATE`,
							`DATA_HOUR`,
							',TILE_GSM_COLUMN_SUM_STR,',
							',@TILE_ID_LVL2,' AS ',@TILE_ID_LVL2,',
							',@TILE_ID_LVL1,' AS ',@TILE_ID_LVL1,'
						FROM ',@tmp_ds_tile_gsm_hr,' 
						GROUP BY `TILE_ID`,`DATA_DATE`,`DATA_HOUR`
						ORDER BY NULL;');
				PREPARE Stmt FROM @SqlCmd;
				EXECUTE Stmt;
				DEALLOCATE PREPARE Stmt;	
					
				CALL gt_global_statistic.SP_Generate_Global_Statistic_Sub_Tile_Reg_Map(@tmp_ds_tile_gsm_agg,WORKER_ID,0,gt_strtok(@REG_GROUP, @v_reg_m, '|'));
				
				INSERT INTO gt_gw_main.SP_LOG VALUES('gt_global_statistic','SP_Generate_Global_Statistic_DS_Sub_tile_Aggr',CONCAT('GSM DS ,',WORKER_ID,' cost:',TIMESTAMPDIFF(SECOND,STEP_START_TIME,SYSDATE()),' sec.'), NOW());
			END IF;		
			IF v_TECH_MASK=4 THEN 
				SET @SqlCmd=CONCAT('DROP TABLE IF EXISTS ',@tmp_ds_tile_lte_agg,';');
				PREPARE Stmt FROM @SqlCmd;
				EXECUTE Stmt;
				DEALLOCATE PREPARE Stmt;
				
				SET @SqlCmd=CONCAT('CREATE TABLE ',@tmp_ds_tile_lte_agg,' LIKE ',v_group_db_name,'.table_tile_',@ZOOM_LEVEL3,'_ds_hr_',@DATE_DY,';');
				PREPARE Stmt FROM @SqlCmd;
				EXECUTE Stmt;
				DEALLOCATE PREPARE Stmt;
	
				SET @SOURCE_TABLE_NAME=@tmp_ds_tile_lte_agg;
				SET @REPAIR_TABLE_NAME=@tmp_ds_tile_lte_agg;
				SET @ERROR_FLAG='tmp_ds_tile_lte_agg';
				
				SET @SqlCmd=CONCAT('INSERT INTO ',@tmp_ds_tile_lte_agg,' 
							(`TILE_ID`,
							`DATA_DATE`,
							`DATA_HOUR`,
							',TILE_LTE_COLUMN_STR,',
							`',@TILE_ID_LVL2,'`,
							`',@TILE_ID_LVL1,'`)
						SELECT
							`TILE_ID`,
							`DATA_DATE`,
							`DATA_HOUR`,
							',TILE_LTE_COLUMN_SUM_STR,',
							',@TILE_ID_LVL2,' AS ',@TILE_ID_LVL2,',
							',@TILE_ID_LVL1,' AS ',@TILE_ID_LVL1,'
						FROM ',@tmp_ds_tile_lte_hr,' 
						GROUP BY `TILE_ID`,`DATA_DATE`,`DATA_HOUR`
						ORDER BY NULL;');
				PREPARE Stmt FROM @SqlCmd;
				EXECUTE Stmt;
				DEALLOCATE PREPARE Stmt;
			
				CALL gt_global_statistic.SP_Generate_Global_Statistic_Sub_Tile_Reg_Map(@tmp_ds_tile_lte_agg,WORKER_ID,0,gt_strtok(@REG_GROUP, @v_reg_m, '|'));
				
				INSERT INTO gt_gw_main.SP_LOG VALUES('gt_global_statistic','SP_Generate_Global_Statistic_DS_Sub_tile_Aggr',CONCAT('LTE DS ,',WORKER_ID,' cost:',TIMESTAMPDIFF(SECOND,STEP_START_TIME,SYSDATE()),' sec.'), NOW());
			END IF;	
			SET v_i=v_i+1;
			INSERT INTO gt_gw_main.SP_LOG VALUES('gt_global_statistic','SP_Generate_Global_Statistic_DS_Sub_tile_Aggr',CONCAT(v_TECH_MASK,',',WORKER_ID,',',v_i), NOW());
		END;
		END WHILE;
		SET @v_reg_m=@v_reg_m+1;
	END;
	END WHILE;
	IF v_TECH_MASK=2 THEN 			
		SET @SqlCmd=CONCAT('DROP TABLE IF EXISTS ',@tmp_ds_tile_umts_hr,';');
		PREPARE Stmt FROM @SqlCmd;
		EXECUTE Stmt;
		DEALLOCATE PREPARE Stmt;
		
		SET @SqlCmd=CONCAT('UPDATE `gt_global_statistic`.table_running_task_ds A
					SET 
					  A.`FLAG_DS` = 1
					WHERE A.`TECH_MASK`=2;');
		PREPARE Stmt FROM @SqlCmd;
		EXECUTE Stmt;
		DEALLOCATE PREPARE Stmt;
	END IF;
	
	IF v_TECH_MASK=1 THEN 
		SET @SqlCmd=CONCAT('DROP TABLE IF EXISTS ',@tmp_ds_tile_gsm_hr,';');					
		PREPARE Stmt FROM @SqlCmd;
		EXECUTE Stmt;
		DEALLOCATE PREPARE Stmt;
		
		SET @SqlCmd=CONCAT('UPDATE `gt_global_statistic`.table_running_task_ds A
					SET 
					  A.`FLAG_DS` = 1
					WHERE A.`TECH_MASK`=1;');
		PREPARE Stmt FROM @SqlCmd;
		EXECUTE Stmt;
		DEALLOCATE PREPARE Stmt;
	END IF;
	
	IF v_TECH_MASK=4 THEN 
		SET @SqlCmd=CONCAT('DROP TABLE IF EXISTS ',@tmp_ds_tile_lte_hr,';');					
		PREPARE Stmt FROM @SqlCmd;
		EXECUTE Stmt;
		DEALLOCATE PREPARE Stmt;
		
		SET @SqlCmd=CONCAT('UPDATE `gt_global_statistic`.table_running_task_ds A
					SET 
					  A.`FLAG_DS` = 1
					WHERE A.`TECH_MASK`=4;');
		PREPARE Stmt FROM @SqlCmd;
		EXECUTE Stmt;
		DEALLOCATE PREPARE Stmt;
	END IF;
	
	INSERT INTO gt_gw_main.SP_LOG VALUES('gt_global_statistic','SP_Generate_Global_Statistic_DS_Sub_tile_Aggr',CONCAT(v_DATA_DATE,',',v_DATA_HOUR,',',v_TECH_MASK,',',WORKER_ID,' Done: ',TIMESTAMPDIFF(SECOND,START_TIME,SYSDATE()),' seconds.'), NOW());
END$$
DELIMITER ;

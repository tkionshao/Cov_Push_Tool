DELIMITER $$
USE `gt_global_statistic`$$
DROP PROCEDURE IF EXISTS `SP_CreateDB_LTE`$$
CREATE DEFINER=`covmo`@`%` PROCEDURE `SP_Generate_Global_Statistic_imsi_lte`(IN DATA_DATE DATE,IN DATA_HOUR TINYINT(2),IN PU_ID MEDIUMINT(9),IN TECH_MASK TINYINT(2), IN GT_DB VARCHAR(100),IN IMSI_CELL TINYINT(2))
BEGIN
	DECLARE SP_Process VARCHAR(100) DEFAULT NULL;
	DECLARE WORKER_ID VARCHAR(10) DEFAULT CONNECTION_ID();
	DECLARE Spider_SP_ERROR CONDITION FOR SQLSTATE '99998';
	DECLARE KPI_ERROR CONDITION FOR SQLSTATE '99999' ;
	DECLARE ZOOM_LEVEL INT;
	
	DECLARE STR_START_END_LTE MEDIUMTEXT DEFAULT '';
	DECLARE STR_SUM_LTE MEDIUMTEXT DEFAULT '';
	DECLARE STR_SEL_LTE MEDIUMTEXT DEFAULT '';
	
	SET @FLAG_IMSI_HR=0;
	SET @FLAG_IMSI_DY=0;
	SET @FLAG_MAKE_HR=0;
	SET @FLAG_MAKE_DY=0;
	
	SET STR_START_END_LTE=CONCAT('`IMSI`,
					`DATA_DATE`,
					`DATA_HOUR`,				
					CALL_TYPE,
					DURATION,					
					CALL_STATUS,
					UE_CONTEXT_RELEASE_CAUSE_REQ,
					UE_CONTEXT_RELEASE_CAUSE,
					X2_HO_INTER_ATTEMPT,
					S1_HO_INTER_ATTEMPT,
					X2_HO_INTER_FAILURE,
					S1_HO_INTER_FAILURE,
					X2_HO_INTRA_ATTEMPT,
					S1_HO_INTRA_ATTEMPT,
					X2_HO_INTRA_FAILURE,
					S1_HO_INTRA_FAILURE,
					IRAT_TO_UMTS_ATTEMPT,
					IRAT_TO_UMTS_FAILURE,
					IRAT_TO_GERAN_ATTEMPT,
					IRAT_TO_GERAN_FAILURE,
					INDOOR,
					MOVING,					
					UL_VOLUME,
					DL_VOLUME,
					UL_THROUPUT,
					DL_THROUPUT,
					POS_FIRST_S_RSRP,					
					POS_FIRST_S_RSRQ,					
					CALL_SETUP_TIME,
					RRC_REQUEST_TYPE,					
					LATENCY_DRB_DL_AVERAGE,
					LATENCY_DRB_DL_SAMPLE,
					`MAKE_ID`,
					`MODEL_ID`,
					POS_FIRST_TILE,
					POS_LAST_TILE,
					POS_FIRST_S_CELL,
					POS_FIRST_S_ENODEB,
					POS_LAST_S_CELL,
					POS_LAST_S_ENODEB');
	
	SET STR_SUM_LTE=CONCAT('`IMSI`,
					`DATA_DATE`,
					`DATA_HOUR`,
					COUNT(*) AS `CALL_CNT`,
					SUM(IF(CALL_TYPE=22,1,0)) AS `DATA_CNT`,
					SUM(IF(CALL_TYPE=21,1,0)) AS `SIGNAL_CNT`,
					SUM(IF(CALL_TYPE=23,1,0)) AS `SMS_CNT`,
					SUM(IF(CALL_TYPE=24,1,0)) AS `VOLTE_CNT`,
					SUM(IF(CALL_TYPE=29,1,0)) AS `UNSPECIFIED_CNT`,
					SUM(`DURATION`) AS `CALL_DUR_SUM`,
					SUM(IF(CALL_TYPE=22,DURATION,0)) AS `DATA_DUR_SUM`,
					SUM(IF(CALL_TYPE=21,DURATION,0)) AS `SIGNAL_DUR_SUM`,
					SUM(IF(CALL_STATUS=2,1,0)) AS `DROP_CNT`,
					SUM(IF(CALL_STATUS=2 AND CALL_TYPE=22,1,0)) AS `DROP_DATA_CNT`,
					SUM(IF(CALL_STATUS=2 AND CALL_TYPE=21,1,0)) AS `DROP_SIGNAL_CNT`,
					SUM(IF(CALL_STATUS=2 AND CALL_TYPE=23,1,0)) AS `DROP_SMS_CNT`,
					SUM(IF(CALL_STATUS=2 AND CALL_TYPE=24,1,0)) AS `DROP_VOLTE_CNT`,
					SUM(IF(CALL_STATUS=2 AND CALL_TYPE=29,1,0)) AS `DROP_UNSPECIFIED_CNT`,
					SUM(IF(CALL_STATUS=3,1,0)) AS `BLOCK_CNT`,
					SUM(IF(CALL_STATUS=3 AND CALL_TYPE=22,1,0)) AS `BLOCK_DATA_CNT`,
					SUM(IF(CALL_STATUS=3 AND CALL_TYPE=21,1,0)) AS `BLOCK_SIGNAL_CNT`,
					SUM(IF(CALL_STATUS=3 AND CALL_TYPE=23,1,0)) AS `BLOCK_SMS_CNT`,
	
					SUM(IF(CALL_STATUS=3 AND CALL_TYPE=23 AND RRC_REQUEST_TYPE=4,1,0)) AS `BLOCK_SMS_MT_CNT`,
					SUM(IF(CALL_STATUS=3 AND CALL_TYPE=23 AND RRC_REQUEST_TYPE IN (1,2,3,5,6,8),1,0)) AS `BLOCK_SMS_MO_CNT`,
	
					SUM(IF(CALL_STATUS=3 AND CALL_TYPE=24,1,0)) AS `BLOCK_VOLTE_CNT`,
					SUM(IF(CALL_STATUS=3 AND CALL_TYPE=29,1,0)) AS `BLOCK_UNSPECIFIED_CNT`,
					SUM((CASE WHEN (CALL_STATUS=2 AND `UE_CONTEXT_RELEASE_CAUSE_REQ` IN (2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,22,26,27,28)) THEN 1 ELSE (CASE WHEN (CALL_STATUS= 2 /*AND `UE_CONTEXT_RELEASE_CAUSE_REQ` is NULL*/ AND `UE_CONTEXT_RELEASE_CAUSE` IN (2,5,6,7,8,9,10,11,12,13,14,15,16,18,22,26,27,28)) THEN 1 ELSE 0 END) END )) AS `DROP_RDO_NW_CNT`,
					SUM((CASE WHEN (CALL_STATUS=2 AND `UE_CONTEXT_RELEASE_CAUSE_REQ`=41) THEN 1 ELSE (CASE WHEN (CALL_STATUS= 2 /*AND `UE_CONTEXT_RELEASE_CAUSE_REQ` is NULL*/ AND `UE_CONTEXT_RELEASE_CAUSE`=41) THEN 1 ELSE 0 END) END )) AS `DROP_TRANS_CNT`,
					SUM((CASE WHEN (CALL_STATUS=2 AND `UE_CONTEXT_RELEASE_CAUSE_REQ` IN (51,54)) THEN 1 ELSE (CASE WHEN (CALL_STATUS= 2 /*AND `UE_CONTEXT_RELEASE_CAUSE_REQ` is NULL*/ AND `UE_CONTEXT_RELEASE_CAUSE` IN (51,54)) THEN 1 ELSE 0 END) END )) AS `DROP_NAS_CNT`,
					SUM((CASE WHEN (CALL_STATUS=2 AND `UE_CONTEXT_RELEASE_CAUSE_REQ` IN (60,61,62,63,65)) THEN 1 ELSE (CASE WHEN (CALL_STATUS= 2 /*AND `UE_CONTEXT_RELEASE_CAUSE_REQ` is NULL*/ AND `UE_CONTEXT_RELEASE_CAUSE` IN (60,61,62,63,65)) THEN 1 ELSE 0 END) END )) AS `DROP_MISC_CNT`,
					SUM((CASE WHEN (CALL_STATUS=2 AND `UE_CONTEXT_RELEASE_CAUSE_REQ` IN (70,73,74)) THEN 1 ELSE (CASE WHEN (CALL_STATUS= 2 /*AND `UE_CONTEXT_RELEASE_CAUSE_REQ` is NULL*/ AND `UE_CONTEXT_RELEASE_CAUSE` IN (70,73,74)) THEN 1 ELSE 0 END) END )) AS `DROP_PROTOCOL_CNT`,
					SUM(IFNULL(`X2_HO_INTER_ATTEMPT`,0)+IFNULL(`S1_HO_INTER_ATTEMPT`,0)) AS `INTER_FREQ_ATTEMPT_CNT`,
					SUM(IFNULL(`X2_HO_INTER_FAILURE`,0)+IFNULL(`S1_HO_INTER_FAILURE`,0)) AS `INTER_FREQ_FAILURE_CNT`,
					SUM(IFNULL(`X2_HO_INTRA_ATTEMPT`,0)+IFNULL(`S1_HO_INTRA_ATTEMPT`,0)) AS `INTRA_FREQ_ATTEMPT_CNT`,
					SUM(IFNULL(`X2_HO_INTRA_FAILURE`,0)+IFNULL(`S1_HO_INTRA_FAILURE`,0)) AS `INTRA_FREQ_FAILURE_CNT`,
					SUM(IRAT_TO_UMTS_ATTEMPT) AS `4G_3G_ATTEMPT_CNT`,
					SUM(IRAT_TO_UMTS_FAILURE) AS `4G_3G_FAILURE_CNT`,
					SUM(IRAT_TO_GERAN_ATTEMPT) AS `4G_2G_ATTEMPT_CNT`,
					SUM(IRAT_TO_GERAN_FAILURE) AS `4G_2G_FAILURE_CNT`,
					SUM(IF(INDOOR=0 AND MOVING=1,1,0)) AS MOVING_CALL_CNT,
					SUM(IF(INDOOR=1,1,0)) AS `INDOOR_CALL_CNT`,
					SUM(UL_VOLUME) AS `PS_UL_VOLUME_SUM`,
					SUM(DL_VOLUME) AS `PS_DL_VOLUME_SUM`,
					MAX(UL_THROUPUT) AS `PS_UL_SPEED_MAX`,
					MAX(DL_THROUPUT) AS `PS_DL_SPEED_MAX`,
					SUM(POS_FIRST_S_RSRP) AS `FIRST_RSRP_SUM`,
					COUNT(POS_FIRST_S_RSRP) AS `FIRST_RSRP_CNT`,
					SUM(POS_FIRST_S_RSRQ) AS `FIRST_RSRQ_SUM`,
					COUNT(POS_FIRST_S_RSRQ) AS `FIRST_RSRQ_CNT`,
					SUM(CALL_SETUP_TIME) AS `CALL_SETUP_TIME_SUM`,
					SUM(IF(CALL_SETUP_TIME>=0,1,0)) AS `CALL_SETUP_TIME_CNT`,
					
					IFNULL(SUM(IF(CALL_TYPE =22,CALL_SETUP_TIME,0)),0) AS CALL_SETUP_TIME_SIG_SUM,
					IFNULL(SUM(IF(CALL_SETUP_TIME>=0 AND CALL_TYPE =22,1,0)),0) AS CALL_SETUP_TIME_SIG_CNT,
					IFNULL(SUM(IF(CALL_TYPE =21,CALL_SETUP_TIME,0)),0) AS CALL_SETUP_TIME_DATA_SUM,
					IFNULL(SUM(IF(CALL_SETUP_TIME>=0 AND CALL_TYPE =21,1,0)),0) AS CALL_SETUP_TIME_DATA_CNT,
					IFNULL(SUM(IF(CALL_TYPE =24,CALL_SETUP_TIME,0)),0) AS CALL_SETUP_TIME_SMS_SUM,
					IFNULL(SUM(IF(CALL_SETUP_TIME>=0 AND CALL_TYPE =24,1,0)),0) AS CALL_SETUP_TIME_SMS_CNT,
					IFNULL(SUM(IF(CALL_TYPE =23,CALL_SETUP_TIME,0)),0) AS CALL_SETUP_TIME_VOLTE_SUM,
					IFNULL(SUM(IF(CALL_SETUP_TIME>=0 AND CALL_TYPE =23,1,0)),0) AS CALL_SETUP_TIME_VOLTE_CNT,
					IFNULL(SUM(IF(CALL_TYPE =29,CALL_SETUP_TIME,0)),0) AS CALL_SETUP_TIME_UNSP_SUM,
					IFNULL(SUM(IF(CALL_SETUP_TIME>=0 AND CALL_TYPE =29,1,0)),0) AS CALL_SETUP_TIME_UNSP_CNT,
	
					SUM(IF(CALL_STATUS=6,1,0)) AS `SF_CNT`,
					SUM(IF(CALL_STATUS=6 AND CALL_TYPE=21,1,0)) AS `SF_DATA_CNT`,
					SUM(IF(CALL_STATUS=6 AND CALL_TYPE=22,1,0)) AS `SF_SIGNAL_CNT`,
					SUM(IF(CALL_STATUS=6 AND CALL_TYPE=24,1,0)) AS `SF_SMS_CNT`,
	
					SUM(IF(CALL_STATUS=6 AND CALL_TYPE=23 AND RRC_REQUEST_TYPE=4,1,0)) AS `SF_SMS_MT_CNT`,
					SUM(IF(CALL_STATUS=6 AND CALL_TYPE=23 AND RRC_REQUEST_TYPE IN (1,2,3,5,6,8),1,0)) AS `SF_SMS_MO_CNT`,
					SUM(IF(CALL_STATUS=6 AND CALL_TYPE=23,1,0)) AS `SF_VOLTE_CNT`,
					SUM(IF(CALL_STATUS=6 AND CALL_TYPE=29,1,0)) AS `SF_UNSPECIFIED_CNT`,
					SUM(IF(CALL_TYPE=22,1,0)) AS MT_DATA_CNT,
					SUM(IF(CALL_TYPE=22 AND RRC_REQUEST_TYPE IN (1,2,3,5,6,8),1,0)) AS MO_DATA_CNT,
					SUM(IF(CALL_TYPE=23 AND RRC_REQUEST_TYPE=4,1,0)) AS MT_SMS_CNT,
					SUM(IF(CALL_TYPE=23 AND RRC_REQUEST_TYPE IN (1,2,3,5,6,8),1,0)) AS MO_SMS_CNT,
					SUM(IF(CALL_TYPE=24 AND RRC_REQUEST_TYPE=4,1,0)) AS MT_VOLTE_CNT,
					SUM(IF(CALL_TYPE=24 AND RRC_REQUEST_TYPE IN (1,2,3,5,6,8),1,0)) AS MO_VOLTE_CNT,
					SUM(IF(CALL_STATUS=5 AND CALL_TYPE=22,1,0)) AS `CSFB_SIGNAL_CNT`,
					SUM(IF(CALL_STATUS=5 AND CALL_TYPE=21,1,0)) AS `CSFB_DATA_CNT`,
					SUM(IF(CALL_STATUS=5 AND CALL_TYPE=24,1,0)) AS `CSFB_SMS_CNT`,
					SUM(IF(CALL_STATUS=5 AND CALL_TYPE=23,1,0)) AS `CSFB_VOLTE_CNT`,
					SUM(IF(CALL_STATUS=5 AND CALL_TYPE=29,1,0)) AS `CSFB_UNSPECIFIED_CNT`,
					SUM(IF(CALL_STATUS=5,1,0)) AS `CSFB_CNT`,
					SUM(LATENCY_DRB_DL_AVERAGE) AS `LATENCY_SUM`,
					SUM(LATENCY_DRB_DL_SAMPLE) AS `LATENCY_CNT`,
					`MAKE_ID`,
					`MODEL_ID`
					',CASE WHEN IMSI_CELL=1 THEN ',
					POS_FIRST_TILE AS START_TILE_ID,
					POS_LAST_TILE AS END_TILE_ID,
					POS_FIRST_S_CELL AS START_CELL_ID,
					POS_FIRST_S_ENODEB AS START_ENODEB_ID,
					POS_LAST_S_CELL AS END_CELL_ID,
					POS_LAST_S_ENODEB AS END_ENODEB_ID' ELSE '' END,'');
 
	INSERT INTO gt_gw_main.sp_log VALUES('gt_gw_main','SP_Generate_Global_Statistic_imsi_lte',CONCAT(GT_DB,' CREATE TEMPORARY TABLE tmp_materialization_imsi_lte_',WORKER_ID), NOW());	
	
	SET SESSION group_concat_max_len=102400; 
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_materialization_imsi_lte_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('CREATE TEMPORARY TABLE ',GT_DB,'.tmp_materialization_imsi_lte_',WORKER_ID,' 
				(
					`IMSI` VARCHAR(20) NOT NULL,
					`DATA_DATE` DATETIME NOT NULL,
					`DATA_HOUR` TINYINT(2) NOT NULL,
					`CALL_CNT` INT(11) DEFAULT NULL,
					`DATA_CNT` INT(11) DEFAULT NULL,
					`SIGNAL_CNT` INT(11) DEFAULT NULL,
					`SMS_CNT` INT(11) DEFAULT NULL,
					`VOLTE_CNT` INT(11) DEFAULT NULL,
					`UNSPECIFIED_CNT` INT(11) DEFAULT NULL,
					`CALL_DUR_SUM` DOUBLE DEFAULT NULL,
					`DATA_DUR_SUM` DOUBLE DEFAULT NULL,
					`SIGNAL_DUR_SUM` DOUBLE DEFAULT NULL,
					`DROP_CNT` INT(11) DEFAULT NULL,
					`DROP_DATA_CNT` INT(11) DEFAULT NULL,
					`DROP_SIGNAL_CNT` INT(11) DEFAULT NULL,
					`DROP_SMS_CNT` INT(11) DEFAULT NULL,
					`DROP_VOLTE_CNT` INT(11) DEFAULT NULL,
					`DROP_UNSPECIFIED_CNT` INT(11) DEFAULT NULL,
					`BLOCK_CNT` INT(11) DEFAULT NULL,
					`BLOCK_DATA_CNT` INT(11) DEFAULT NULL,
					`BLOCK_SIGNAL_CNT` INT(11) DEFAULT NULL,
					`BLOCK_SMS_CNT` INT(11) DEFAULT NULL,
					`BLOCK_SMS_MT_CNT` int(11) DEFAULT NULL,
					`BLOCK_SMS_MO_CNT` int(11) DEFAULT NULL,
					`BLOCK_VOLTE_CNT` INT(11) DEFAULT NULL,
					`BLOCK_UNSPECIFIED_CNT` INT(11) DEFAULT NULL,
					`DROP_RDO_NW_CNT` INT(11) DEFAULT NULL,
					`DROP_TRANS_CNT` INT(11) DEFAULT NULL,
					`DROP_NAS_CNT` INT(11) DEFAULT NULL,
					`DROP_MISC_CNT` INT(11) DEFAULT NULL,
					`DROP_PROTOCOL_CNT` INT(11) DEFAULT NULL,
					`INTER_FREQ_ATTEMPT_CNT` INT(11) DEFAULT NULL,
					`INTER_FREQ_FAILURE_CNT` INT(11) DEFAULT NULL,
					`INTRA_FREQ_ATTEMPT_CNT` INT(11) DEFAULT NULL,
					`INTRA_FREQ_FAILURE_CNT` INT(11) DEFAULT NULL,
					`4G_3G_ATTEMPT_CNT` INT(11) DEFAULT NULL,
					`4G_3G_FAILURE_CNT` INT(11) DEFAULT NULL,
					`4G_2G_ATTEMPT_CNT` INT(11) DEFAULT NULL,
					`4G_2G_FAILURE_CNT` INT(11) DEFAULT NULL,
					`MOVING_CALL_CNT` INT(11) DEFAULT NULL,
					`INDOOR_CALL_CNT` INT(11) DEFAULT NULL,
					`PS_UL_VOLUME_SUM` DOUBLE DEFAULT NULL,
					`PS_DL_VOLUME_SUM` DOUBLE DEFAULT NULL,
					`PS_UL_SPEED_MAX` DOUBLE DEFAULT NULL,
					`PS_DL_SPEED_MAX` DOUBLE DEFAULT NULL,
					`FIRST_RSRP_SUM` DOUBLE DEFAULT NULL,
					`FIRST_RSRP_CNT` INT(11) DEFAULT NULL,
					`FIRST_RSRQ_SUM` DOUBLE DEFAULT NULL,
					`FIRST_RSRQ_CNT` INT(11) DEFAULT NULL,
					`CALL_SETUP_TIME_SUM` INT(11) DEFAULT NULL,
					`CALL_SETUP_TIME_CNT` INT(11) DEFAULT NULL,
	
					`CALL_SETUP_TIME_SIG_SUM` INT(11) DEFAULT NULL,
					`CALL_SETUP_TIME_SIG_CNT` INT(11) DEFAULT NULL,
					`CALL_SETUP_TIME_DATA_SUM` INT(11) DEFAULT NULL,
					`CALL_SETUP_TIME_DATA_CNT` INT(11) DEFAULT NULL,
					`CALL_SETUP_TIME_SMS_SUM` INT(11) DEFAULT NULL,
					`CALL_SETUP_TIME_SMS_CNT` INT(11) DEFAULT NULL,
					`CALL_SETUP_TIME_VOLTE_SUM` INT(11) DEFAULT NULL,
					`CALL_SETUP_TIME_VOLTE_CNT` INT(11) DEFAULT NULL,
					`CALL_SETUP_TIME_UNSP_SUM` INT(11) DEFAULT NULL,
					`CALL_SETUP_TIME_UNSP_CNT` INT(11) DEFAULT NULL,
	
					`SF_CNT` INT(11) DEFAULT NULL,
					`SF_DATA_CNT` INT(11) DEFAULT NULL,
					`SF_SIGNAL_CNT` INT(11) DEFAULT NULL,
					`SF_SMS_CNT` INT(11) DEFAULT NULL,
					`SF_SMS_MT_CNT` int(11) DEFAULT NULL,
					`SF_SMS_MO_CNT` int(11) DEFAULT NULL,
					`SF_VOLTE_CNT` INT(11) DEFAULT NULL,
					`SF_UNSPECIFIED_CNT` INT(11) DEFAULT NULL,
					`MT_DATA_CNT` INT(11) DEFAULT NULL,
					`MO_DATA_CNT` INT(11) DEFAULT NULL,
					`MT_SMS_CNT` INT(11) DEFAULT NULL,
					`MO_SMS_CNT` INT(11) DEFAULT NULL,
					`MT_VOLTE_CNT` INT(11) DEFAULT NULL,
					`MO_VOLTE_CNT` INT(11) DEFAULT NULL,
					`CSFB_SIGNAL_CNT` INT(11) DEFAULT NULL,
					`CSFB_DATA_CNT` INT(11) DEFAULT NULL,
					`CSFB_SMS_CNT` INT(11) DEFAULT NULL,
					`CSFB_VOLTE_CNT` INT(11) DEFAULT NULL,
					`CSFB_UNSPECIFIED_CNT` INT(11) DEFAULT NULL,
					`CSFB_CNT` INT(11) DEFAULT NULL,
					`LATENCY_SUM` DOUBLE DEFAULT NULL,
					`LATENCY_CNT` INT(11) DEFAULT NULL,
					`MAKE_ID` INT(11) DEFAULT NULL,
					`MODEL_ID` INT(11) DEFAULT NULL,
					',CASE WHEN IMSI_CELL=1 THEN '
					`START_TILE_ID` BIGINT(20) DEFAULT NULL,
					`END_TILE_ID` BIGINT(20) DEFAULT NULL,
					`START_CELL_ID` TINYINT(4) UNSIGNED DEFAULT NULL,
					`START_ENODEB_ID` MEDIUMINT(9) DEFAULT NULL,
					`START_REG_1_ID` BIGINT(20) DEFAULT NULL,
					`START_REG_2_ID` BIGINT(20) DEFAULT NULL,
					`START_REG_3_ID` BIGINT(20) DEFAULT NULL,
					`END_CELL_ID` TINYINT(4) UNSIGNED DEFAULT NULL,
					`END_ENODEB_ID` MEDIUMINT(9) DEFAULT NULL,
					`END_REG_1_ID` BIGINT(20) DEFAULT NULL,
					`END_REG_2_ID` BIGINT(20) DEFAULT NULL,
					`END_REG_3_ID` BIGINT(20) DEFAULT NULL,' ELSE '' END,'
					`MAKE_MODEL` VARCHAR(200) DEFAULT NULL
				) ENGINE=MYISAM DEFAULT CHARSET=utf8;');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	INSERT INTO gt_gw_main.sp_log VALUES('gt_gw_main','SP_Generate_Global_Statistic_imsi_lte',CONCAT(GT_DB,' INSERT INTO tbl_',GT_DB,'_',WORKER_ID), NOW());	
	 	
	SET @v_i=DATA_HOUR;
	SET @v_i_Max=DATA_HOUR+1;
	SET @v_j=0;
				
	WHILE @v_i < @v_i_Max DO
	BEGIN	
		WHILE @v_j<60  DO
		BEGIN		
			IF (@v_j=45) THEN 
				SET @UNION=' '; 
			ELSE
				SET @UNION=' UNION ALL '; 
			END IF;	
			SET STR_SEL_LTE=CONCAT(STR_SEL_LTE,'SELECT ',STR_START_END_LTE,' FROM ',GT_DB,'.table_call_lte',CONCAT('_',LPAD(@v_i,2,'0'),LPAD(@v_j,2,'0')),' WHERE DATA_HOUR=', @v_i,' AND IMSI IS NOT NULL AND IMSI<>''0'' ',@UNION); 
			SET @v_j=@v_j+15;
		END;
		END WHILE;
			
		SET @v_j=0;
		SET @v_i=@v_i+1;
	END;
	END WHILE;	
	SET @SqlCmd=CONCAT('INSERT INTO ',GT_DB,'.tmp_materialization_imsi_lte_',WORKER_ID,' 
				(
					`IMSI`,
					`DATA_DATE`,
					`DATA_HOUR`,
					CALL_CNT,
					DATA_CNT,
					SIGNAL_CNT,
					SMS_CNT,
					VOLTE_CNT,
					UNSPECIFIED_CNT,
					CALL_DUR_SUM,
					DATA_DUR_SUM,
					SIGNAL_DUR_SUM,
					DROP_CNT,
					DROP_DATA_CNT,
					DROP_SIGNAL_CNT,
					DROP_SMS_CNT,
					DROP_VOLTE_CNT,
					DROP_UNSPECIFIED_CNT,
					BLOCK_CNT,
					BLOCK_DATA_CNT,
					BLOCK_SIGNAL_CNT,
					BLOCK_SMS_CNT,
					BLOCK_SMS_MT_CNT,
					BLOCK_SMS_MO_CNT,
					BLOCK_VOLTE_CNT,
					BLOCK_UNSPECIFIED_CNT,
					DROP_RDO_NW_CNT,
					DROP_TRANS_CNT,
					DROP_NAS_CNT,
					DROP_MISC_CNT,
					DROP_PROTOCOL_CNT,
					INTER_FREQ_ATTEMPT_CNT,
					INTER_FREQ_FAILURE_CNT,
					INTRA_FREQ_ATTEMPT_CNT,
					INTRA_FREQ_FAILURE_CNT,
					4G_3G_ATTEMPT_CNT,
					4G_3G_FAILURE_CNT,
					4G_2G_ATTEMPT_CNT,
					4G_2G_FAILURE_CNT,
					MOVING_CALL_CNT,
					INDOOR_CALL_CNT,
					PS_UL_VOLUME_SUM,
					PS_DL_VOLUME_SUM,
					PS_UL_SPEED_MAX,
					PS_DL_SPEED_MAX,
					FIRST_RSRP_SUM,
					FIRST_RSRP_CNT,
					FIRST_RSRQ_SUM,
					FIRST_RSRQ_CNT,
					CALL_SETUP_TIME_SUM,
					CALL_SETUP_TIME_CNT,
					CALL_SETUP_TIME_SIG_SUM, 
					CALL_SETUP_TIME_SIG_CNT,
					CALL_SETUP_TIME_DATA_SUM, 
					CALL_SETUP_TIME_DATA_CNT,
					CALL_SETUP_TIME_SMS_SUM,
					CALL_SETUP_TIME_SMS_CNT,
					CALL_SETUP_TIME_VOLTE_SUM,
					CALL_SETUP_TIME_VOLTE_CNT,
					CALL_SETUP_TIME_UNSP_SUM,
					CALL_SETUP_TIME_UNSP_CNT,
					SF_CNT,
					SF_DATA_CNT,
					SF_SIGNAL_CNT,
					SF_SMS_CNT,
					SF_SMS_MT_CNT,
					SF_SMS_MO_CNT,
					SF_VOLTE_CNT,
					SF_UNSPECIFIED_CNT,
					MT_DATA_CNT,
					MO_DATA_CNT,
					MT_SMS_CNT,
					MO_SMS_CNT,
					MT_VOLTE_CNT,
					MO_VOLTE_CNT,
					CSFB_SIGNAL_CNT,
					CSFB_DATA_CNT,
					CSFB_SMS_CNT,
					CSFB_VOLTE_CNT,
					CSFB_UNSPECIFIED_CNT,
					CSFB_CNT,
					LATENCY_SUM,
					LATENCY_CNT,
					MAKE_ID,
					MODEL_ID
					',CASE WHEN IMSI_CELL=1 THEN ',
					START_TILE_ID,
					END_TILE_ID,
					START_CELL_ID,
					START_ENODEB_ID,
					END_CELL_ID,
					END_ENODEB_ID' ELSE '' END,'
					)
				SELECT ',STR_SUM_LTE,' 
				FROM (',STR_SEL_LTE,') AA
					GROUP BY IMSI
					ORDER BY NULL;
				');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('SELECT * FROM ',GT_DB,'.tmp_materialization_imsi_lte_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	
	SET @SqlCmd=CONCAT('DROP TEMPORARY TABLE IF EXISTS ',GT_DB,'.tmp_materialization_imsi_lte_',WORKER_ID,';');
	PREPARE Stmt FROM @SqlCmd;
	EXECUTE Stmt;
	DEALLOCATE PREPARE Stmt;
	INSERT INTO gt_gw_main.sp_log VALUES('gt_gw_main','SP_Generate_Global_Statistic_imsi_lte',CONCAT(GT_DB,' END'), NOW());
	
END$$
DELIMITER ;
